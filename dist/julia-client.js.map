{"version":3,"file":"julia-client.js","sources":["../lib/misc/weave.js","../lib/misc/scopes.js","../lib/misc/blocks.js","../lib/misc/cells.js","../lib/package/commands.coffee","../lib/misc/paths.js","../lib/misc/words.js","../lib/misc/colors.js","../lib/connection/ipc.coffee","../lib/misc.coffee","../lib/connection/client.coffee","../lib/connection/process/tcp.coffee","../lib/connection/terminal.coffee","../lib/connection/messages.coffee","../lib/connection/process/basic.js","../lib/connection/process/cycler.coffee","../lib/connection/process/remote.js","../lib/connection/local.coffee","../lib/connection.coffee","../lib/package/config.coffee","../lib/package/menu.coffee","../lib/package/settings.js","../lib/ui/selector.js","../lib/package/toolbar.coffee","../lib/ui/notifications.coffee","../lib/ui/highlighter.coffee","../lib/ui/views.coffee","../lib/ui/progress.coffee","../lib/runtime/modules.coffee","../lib/ui/docs.js","../lib/runtime/goto.js","../lib/runtime/workspace.coffee","../lib/runtime/evaluation.coffee","../lib/runtime/console.js","../lib/runtime/completions.js","../lib/runtime/plots.js","../lib/runtime/frontend.coffee","../lib/runtime/debugger.js","../lib/runtime/profiler.js","../lib/runtime/outline.js","../lib/runtime/linter.js","../lib/runtime/packages.js","../lib/runtime/debuginfo.js","../lib/runtime/formatter.js","../lib/runtime.coffee","../lib/runtime/datatip.js","../lib/runtime/urihandler.js","../lib/ui/layout.js","../lib/ui/focusutils.js","../lib/ui/cellhighlighter.js","../lib/ui.coffee","../lib/julia-client.coffee"],"sourcesContent":["\r\n\r\nimport 'atom'\r\n\r\nexport function getCode (ed) {\r\n  const text = ed.getText()\r\n  const lines = text.split(\"\\n\")\r\n  const N = ed.getLineCount()\r\n  let code = \"\"\r\n\r\n  for (let i = 0; i < N; i++) {\r\n     let scopes = ed.scopeDescriptorForBufferPosition([i, 0]).scopes\r\n     if (scopes.length > 1) {\r\n         if (scopes.indexOf(\"source.embedded.julia\") > -1) {\r\n             code += lines[i] + \"\\n\"\r\n         }\r\n     }\r\n  }\r\n  return code\r\n}\r\n\r\nfunction getEmbeddedScope (cursor) {\r\n  let scopes = cursor.getScopeDescriptor().scopes\r\n  let targetScope = null\r\n  for (let scope of scopes) {\r\n    if (scope.startsWith('source.embedded.')) {\r\n      targetScope = scope\r\n      break\r\n    }\r\n  }\r\n  return targetScope\r\n}\r\n\r\nfunction getCurrentCellRange (ed, cursor) {\r\n  let scope = getEmbeddedScope(cursor)\r\n  if (scope === null) return null\r\n\r\n  let start = cursor.getBufferRow()\r\n  let end = start\r\n  while (start - 1 >= 0 &&\r\n         ed.scopeDescriptorForBufferPosition([start - 1, 0]).scopes.indexOf(scope) > -1) {\r\n    start -= 1\r\n  }\r\n  while (end + 1 <= ed.getLastBufferRow() &&\r\n         ed.scopeDescriptorForBufferPosition([end + 1, 0]).scopes.indexOf(scope) > -1) {\r\n    end += 1\r\n  }\r\n  return [[start, 0], [end, Infinity]]\r\n}\r\n\r\nexport function getCursorCellRanges (ed) {\r\n  let ranges = []\r\n  for (const cursor of ed.getCursors()) {\r\n    let range = getCurrentCellRange(ed, cursor)\r\n    if (range !== null) {\r\n      ranges.push(range)\r\n    }\r\n  }\r\n  return ranges\r\n}\r\n\r\nexport function moveNext (ed) {\r\n  for (const cursor of ed.getCursors()) {\r\n    let scope = getEmbeddedScope(cursor)\r\n    if (scope === null) return null\r\n\r\n    let range = getCurrentCellRange(ed, cursor)\r\n    let endRow = range[1][0] + 1\r\n    while (endRow + 1 <= ed.getLastBufferRow() &&\r\n           ed.scopeDescriptorForBufferPosition([endRow + 1, 0]).scopes.indexOf(scope) === -1) {\r\n      endRow += 1\r\n    }\r\n    cursor.setBufferPosition([endRow+1, Infinity])\r\n  }\r\n}\r\n\r\nexport function movePrev (ed) {\r\n  for (const cursor of ed.getCursors()) {\r\n    let scope = getEmbeddedScope(cursor)\r\n    if (scope === null) return null\r\n\r\n    let range = getCurrentCellRange(ed, cursor)\r\n    let startRow = range[0][0] - 1\r\n    while (startRow - 1 >= 0 &&\r\n           ed.scopeDescriptorForBufferPosition([startRow - 1, 0]).scopes.indexOf(scope) === -1) {\r\n      startRow -= 1\r\n    }\r\n    cursor.setBufferPosition([startRow-1, Infinity])\r\n  }\r\n}\r\n\r\nexport function get (ed) {\r\n  let ranges = getCursorCellRanges(ed)\r\n  if (ranges.length === 0) return []\r\n\r\n  let processedRanges = []\r\n  for (let range of ranges) {\r\n    let text = ed.getTextInBufferRange(range)\r\n    range[1][0] += 1 // move result one line down\r\n    processedRanges.push({\r\n      range: range,\r\n      selection: ed.getSelections()[0],\r\n      line: range[0][0],\r\n      text: text || ' '\r\n    })\r\n  }\r\n  return processedRanges\r\n}\r\n","/** @babel */\r\n\r\nimport { Point, Range } from 'atom'\r\n\r\nconst juliaScopes = ['source.julia', 'source.embedded.julia']\r\nconst openers = [\r\n  'if', 'while', 'for', 'begin', 'function', 'macro', 'module', 'baremodule', 'type', 'immutable',\r\n  'struct', 'mutable struct', 'try', 'let', 'do', 'quote', 'abstract type', 'primitive type'\r\n]\r\nconst reopeners = [ 'else', 'elseif', 'catch', 'finally' ]\r\n\r\nfunction isKeywordScope (scopes) {\r\n  // Skip 'source.julia'\r\n  return scopes.slice(1).some(scope => {\r\n    return scope.indexOf('keyword') > -1\r\n  })\r\n}\r\n\r\nexport function isStringScope (scopes) {\r\n  let isString = false\r\n  let isInterp = false\r\n  for (const scope of scopes) {\r\n    if (scope.indexOf('string') > -1) {\r\n      isString = true\r\n    }\r\n    if (scope.indexOf('interpolation') > -1) {\r\n      isInterp = true\r\n    }\r\n  }\r\n  return isString && !isInterp\r\n}\r\n\r\nfunction forRange (editor, range) {\r\n  // this should happen here and not a top-level so that we aren't relying on\r\n  // Atom to load packages in a specific order:\r\n  const juliaGrammar = atom.grammars.grammarForScopeName('source.julia')\r\n\r\n  if (juliaGrammar === undefined) return []\r\n\r\n  const scopes = []\r\n  let n_parens = 0\r\n  let n_brackets = 0\r\n  const text = editor.getTextInBufferRange(range)\r\n  juliaGrammar.tokenizeLines(text).forEach(lineTokens => {\r\n    lineTokens.forEach(token => {\r\n      const { value } = token\r\n      if (!isStringScope(token.scopes)) {\r\n        if (n_parens > 0 && value === ')') {\r\n          n_parens -= 1\r\n          scopes.splice(scopes.lastIndexOf('paren'), 1)\r\n          return\r\n        } else if (n_brackets > 0 && value === ']') {\r\n          n_brackets -= 1\r\n          scopes.splice(scopes.lastIndexOf('bracket'), 1)\r\n          return\r\n        } else if (value === '(') {\r\n          n_parens += 1\r\n          scopes.push('paren')\r\n          return\r\n        } else if (value === '[') {\r\n          n_brackets += 1\r\n          scopes.push('bracket')\r\n          return\r\n        }\r\n      }\r\n      if (!(isKeywordScope(token.scopes))) return\r\n      if (!(n_parens === 0 && n_brackets === 0)) return\r\n\r\n      const reopen = reopeners.includes(value)\r\n      if (value === 'end' || reopen) scopes.pop()\r\n      if (openers.includes(value) || reopen) scopes.push(value)\r\n    })\r\n  })\r\n  return scopes\r\n}\r\n\r\nexport function forLines (editor, start, end) {\r\n  const startPoint = new Point(start, 0)\r\n  const endPoint = new Point(end, Infinity)\r\n  const range = new Range(startPoint, endPoint)\r\n  return forRange(editor, range)\r\n}\r\n\r\nexport function isCommentScope (scopes) {\r\n  // Skip 'source.julia'\r\n  return scopes.slice(1).some(scope => {\r\n    return scope.indexOf('comment') > -1\r\n  })\r\n}\r\n\r\n/**\r\n * Returns `true` if the scope at `bufferPosition` in `editor` is valid code scope to be inspected.\r\n * Supposed to be used within Atom-IDE integrations, whose `grammarScopes` setting doesn't support\r\n * embedded scopes by default.\r\n */\r\nexport function isValidScopeToInspect (editor, bufferPosition) {\r\n  const scopes = editor\r\n    .scopeDescriptorForBufferPosition(bufferPosition)\r\n    .getScopesArray()\r\n  return scopes.some(scope => {\r\n    return juliaScopes.includes(scope)\r\n  }) ?\r\n    !isCommentScope(scopes) && !isStringScope(scopes) :\r\n    false\r\n}\r\n","\r\n// TODO: docstrings\r\n\r\nimport { forLines } from './scopes'\r\n\r\nexport function getLine (ed, l) {\r\n  return {\r\n    scope: ed.scopeDescriptorForBufferPosition([l, 0]).scopes,\r\n    line: ed.getTextInBufferRange([[l, 0], [l, Infinity]])\r\n  }\r\n}\r\n\r\nfunction isBlank ({line, scope}, allowDocstrings = false) {\r\n  for (const s of scope) {\r\n    if (/\\bcomment\\b/.test(s) || (!allowDocstrings && /\\bdocstring\\b/.test(s))) {\r\n      return true\r\n    }\r\n  }\r\n  return /^\\s*(#.*)?$/.test(line)\r\n}\r\nfunction isEnd ({ line, scope }) {\r\n  if (isStringEnd({ line, scope })) {\r\n    return true\r\n  }\r\n  return /^(end\\b|\\)|\\]|\\})/.test(line)\r\n}\r\nfunction isStringEnd ({ line, scope }) {\r\n  scope = scope.join(' ')\r\n  return /\\bstring\\.multiline\\.end\\b/.test(scope) ||\r\n        (/\\bstring\\.end\\b/.test(scope) && /\\bbacktick\\b/.test(scope))\r\n}\r\nfunction isCont ({ line, scope }) {\r\n  scope = scope.join(' ')\r\n  if (/\\bstring\\b/.test(scope) && !(/\\bpunctuation\\.definition\\.string\\b/.test(scope))) {\r\n    return true\r\n  }\r\n\r\n  return line.match(/^(else|elseif|catch|finally)\\b/)\r\n}\r\nfunction isStart (lineInfo) {\r\n  return !(/^\\s/.test(lineInfo.line) || isBlank(lineInfo) || isEnd(lineInfo) || isCont(lineInfo))\r\n}\r\n\r\nfunction walkBack(ed, row) {\r\n  while ((row > 0) && !isStart(getLine(ed, row))) {\r\n    row--\r\n  }\r\n  return row\r\n}\r\n\r\nfunction walkForward (ed, start) {\r\n  let end = start\r\n  let mark = start\r\n  while (mark < ed.getLastBufferRow()) {\r\n    mark++\r\n    const lineInfo = getLine(ed, mark)\r\n\r\n    if (isStart(lineInfo)) {\r\n      break\r\n    }\r\n    if (isEnd(lineInfo)) {\r\n      // An `end` only counts when  there still are unclosed blocks (indicated by `forLines`\r\n      // returning a non-empty array).\r\n      // If the line closes a multiline string we also take that as ending the block.\r\n      if (\r\n            !(forLines(ed, start, mark-1).length === 0) ||\r\n            isStringEnd(lineInfo)\r\n         ) {\r\n        end = mark\r\n      }\r\n    } else if (!(isBlank(lineInfo) || isStart(lineInfo))) {\r\n      end = mark\r\n    }\r\n  }\r\n  return end\r\n}\r\n\r\nfunction getRange (ed, row) {\r\n  const start = walkBack(ed, row)\r\n  const end = walkForward(ed, start)\r\n  if (start <= row && row <= end) {\r\n    return [[start, 0], [end, Infinity]]\r\n  }\r\n}\r\n\r\nfunction getSelection (ed, sel) {\r\n  const {start, end} = sel.getBufferRange()\r\n  const range = [[start.row, start.column], [end.row, end.column]]\r\n  while (isBlank(getLine(ed, range[0][0]), true) && (range[0][0] <= range[1][0])) {\r\n    range[0][0]++\r\n    range[0][1] = 0\r\n  }\r\n  while (isBlank(getLine(ed, range[1][0]), true) && (range[1][0] >= range[0][0])) {\r\n    range[1][0]--\r\n    range[1][1] = Infinity\r\n  }\r\n  return range\r\n}\r\n\r\nexport function moveNext (ed, sel, range) {\r\n  // Ensure enough room at the end of the buffer\r\n  const row = range[1][0]\r\n  let last\r\n  while ((last = ed.getLastBufferRow()) < (row+2)) {\r\n    if ((last !== row) && !isBlank(getLine(ed, last))) {\r\n      break\r\n    }\r\n    sel.setBufferRange([[last, Infinity], [last, Infinity]])\r\n    sel.insertText('\\n')\r\n  }\r\n  // Move the cursor\r\n  let to = row + 1\r\n  while ((to < ed.getLastBufferRow()) && isBlank(getLine(ed, to))) {\r\n    to++\r\n  }\r\n  to = walkForward(ed, to)\r\n  return sel.setBufferRange([[to, Infinity], [to, Infinity]])\r\n}\r\n\r\nfunction getRanges (ed) {\r\n  const ranges = ed.getSelections().map(sel => {\r\n    return {\r\n      selection: sel,\r\n      range: sel.isEmpty() ?\r\n        getRange(ed, sel.getHeadBufferPosition().row) :\r\n        getSelection(ed, sel)\r\n    }\r\n  })\r\n  return ranges.filter(({ range }) => {\r\n    return range && ed.getTextInBufferRange(range).trim()\r\n  })\r\n}\r\n\r\nexport function get (ed) {\r\n  return getRanges(ed).map(({ range, selection }) => {\r\n    return {\r\n      range,\r\n      selection,\r\n      line: range[0][0],\r\n      text: ed.getTextInBufferRange(range)\r\n    }\r\n  })\r\n}\r\n\r\nexport function getLocalContext (editor, row) {\r\n  const range = getRange(editor, row)\r\n  const context = range ? editor.getTextInBufferRange(range) : ''\r\n  // NOTE:\r\n  // backend code expects startRow to be number for most cases, e.g.: `row = row - startRow`\r\n  // so let's just return `0` when there is no local context\r\n  // to check there is a context or not, just check `isempty(context)`\r\n  const startRow = range ? range[0][0] : 0\r\n  return {\r\n    context,\r\n    startRow\r\n  }\r\n}\r\n\r\nexport function select (ed = atom.workspace.getActiveTextEditor()) {\r\n  if (!ed) return\r\n  return ed.mutateSelectedText(selection => {\r\n    const range = getRange(ed, selection.getHeadBufferPosition().row)\r\n    if (range) {\r\n      selection.setBufferRange(range)\r\n    }\r\n  })\r\n}\r\n","\r\n\r\nimport { get as weaveGet,\r\n         moveNext as weaveMoveNext,\r\n         movePrev as weaveMovePrev } from './weave.js'\r\n\r\nimport { getLine } from './blocks.js'\r\n\r\nimport { Point } from 'atom'\r\n\r\nexport function getRange (ed) {\r\n  // Cell range is:\r\n  //  Start of line below top delimiter (and/or start of top row of file) to\r\n  //  End of line before end delimiter\r\n  var buffer = ed.getBuffer()\r\n  var start = buffer.getFirstPosition()\r\n  var end = buffer.getEndPosition()\r\n  var regexString = '^(' + atom.config.get('julia-client.uiOptions.cellDelimiter').join('|') + ')'\r\n  var regex = new RegExp(regexString)\r\n  var cursor = ed.getCursorBufferPosition()\r\n  cursor.column = Infinity // cursor on delimiter line means eval cell below\r\n\r\n\r\n  let foundDelim = false\r\n  for (let i = cursor.row + 1; i <= ed.getLastBufferRow(); i++) {\r\n    let {line, scope} = getLine(ed, i)\r\n    foundDelim = regex.test(line) && scope.join('.').indexOf('comment.line') > -1\r\n    end.row = i\r\n    if (foundDelim) break\r\n  }\r\n\r\n  if (foundDelim) {\r\n    end.row -= 1\r\n    if (end.row < 0) end.row = 0\r\n    end.column = Infinity\r\n  }\r\n\r\n  foundDelim = false\r\n  if (cursor.row > 0) {\r\n    for (let i = end.row; i >= 0; i--) {\r\n      let {line, scope} = getLine(ed, i)\r\n      foundDelim = regex.test(line) && scope.join('.').indexOf('comment.line') > -1\r\n      start.row = i\r\n      if (foundDelim) {\r\n        break\r\n      }\r\n    }\r\n    start.column = 0\r\n  }\r\n\r\n  return [start, end]\r\n}\r\n\r\nexport function get (ed) {\r\n  if (ed.getGrammar().scopeName.indexOf('source.julia') > -1) {\r\n    return jlGet(ed)\r\n  } else {\r\n    return weaveGet(ed)\r\n  }\r\n}\r\n\r\nfunction jlGet (ed) {\r\n  var range = getRange(ed)\r\n  var text = ed.getTextInBufferRange(range)\r\n  if (text.trim() === '') text = ' '\r\n  var res = {\r\n    range: [[range[0].row, range[0].column], [range[1].row, range[1].column]],\r\n    selection: ed.getSelections()[0],\r\n    line: range[0].row,\r\n    text: text\r\n  }\r\n  return [res]\r\n}\r\n\r\nexport function moveNext (ed) {\r\n  if (ed == null) {\r\n    ed = atom.workspace.getActiveTextEditor()\r\n  }\r\n  if (ed.getGrammar().scopeName.indexOf('source.julia') > -1) {\r\n    return jlMoveNext(ed)\r\n  } else {\r\n    return weaveMoveNext(ed)\r\n  }\r\n}\r\n\r\nfunction jlMoveNext (ed) {\r\n  var range = getRange(ed)\r\n  var sel = ed.getSelections()[0]\r\n  var nextRow = range[1].row + 2 // 2 = 1 to get to delimiter line + 1 more to go past it\r\n  return sel.setBufferRange([[nextRow, 0], [nextRow, 0]])\r\n}\r\n\r\nexport function movePrev (ed) {\r\n  if (ed == null) {\r\n    ed = atom.workspace.getActiveTextEditor()\r\n  }\r\n  if (ed.getGrammar().scopeName.indexOf('source.weave') > -1) {\r\n    return weaveMovePrev(ed)\r\n  } else {\r\n    return jlMovePrev(ed)\r\n  }\r\n}\r\n\r\nfunction jlMovePrev (ed) {\r\n  var range = getRange(ed)\r\n  var prevRow = range[0].row - 2 // 2 = 1 to get to delimiter line + 1 more to go past it\r\n  var sel = ed.getSelections()[0]\r\n  return sel.setBufferRange([[prevRow, 0], [prevRow, 0]])\r\n}\r\n","shell                 = require 'shell'\r\ncells                 = require '../misc/cells'\r\n{CompositeDisposable} = require 'atom'\r\n\r\nmodule.exports =\r\n  activate: (juno) ->\r\n    requireClient    = (a, f) -> juno.connection.client.require a, f\r\n    disrequireClient = (a, f) -> juno.connection.client.disrequire a, f\r\n    boot = -> juno.connection.boot()\r\n\r\n    cancelComplete = (e) ->\r\n      atom.commands.dispatch(e.currentTarget, 'autocomplete-plus:cancel')\r\n\r\n    @subs = new CompositeDisposable()\r\n\r\n    # atom-text-editors with Julia scopes\r\n    for scope in atom.config.get('julia-client.juliaSyntaxScopes')\r\n      @subs.add atom.commands.add \"atom-text-editor[data-grammar='#{scope.replace /\\./g, ' '}']\",\r\n        'julia-client:run-block': (event) =>\r\n          cancelComplete event\r\n          @withInk ->\r\n            boot()\r\n            juno.runtime.evaluation.eval()\r\n        'julia-client:run-and-move': (event) =>\r\n          @withInk ->\r\n            boot()\r\n            juno.runtime.evaluation.eval(move: true)\r\n        'julia-client:run-all': (event) =>\r\n          cancelComplete event\r\n          @withInk ->\r\n            boot()\r\n            juno.runtime.evaluation.evalAll()\r\n        'julia-client:run-cell': =>\r\n          @withInk ->\r\n            boot()\r\n            juno.runtime.evaluation.eval(cell: true)\r\n        'julia-client:run-cell-and-move': =>\r\n          @withInk ->\r\n            boot()\r\n            juno.runtime.evaluation.eval(cell: true, move: true)\r\n        'julia-client:select-block': =>\r\n          juno.misc.blocks.select()\r\n        'julia-client:next-cell': =>\r\n          cells.moveNext()\r\n        'julia-client:prev-cell': =>\r\n          cells.movePrev()\r\n        'julia-client:goto-symbol': =>\r\n          @withInk ->\r\n            boot()\r\n            juno.runtime.goto.gotoSymbol()\r\n        'julia-client:show-documentation': =>\r\n          @withInk ->\r\n            boot()\r\n            juno.runtime.evaluation.toggleDocs()\r\n        # @NOTE: `'clear-workspace'` is now not handled by Atom.jl\r\n        # 'julia-client:reset-workspace': =>\r\n        #   requireClient 'reset the workspace', ->\r\n        #     editor = atom.workspace.getActiveTextEditor()\r\n        #     atom.commands.dispatch atom.views.getView(editor), 'inline-results:clear-all'\r\n        #     juno.connection.client.import('clear-workspace')()\r\n        'julia-client:send-to-stdin': (e) =>\r\n          requireClient ->\r\n            ed = e.currentTarget.getModel()\r\n            done = false\r\n            for s in ed.getSelections()\r\n              continue unless s.getText()\r\n              done = true\r\n              juno.connection.client.stdin s.getText()\r\n            juno.connection.client.stdin ed.getText() unless done\r\n        'julia-debug:run-block': =>\r\n          @withInk ->\r\n            boot()\r\n            juno.runtime.debugger.debugBlock(false, false)\r\n        'julia-debug:step-through-block': =>\r\n          @withInk ->\r\n            boot()\r\n            juno.runtime.debugger.debugBlock(true, false)\r\n        'julia-debug:run-cell': =>\r\n          @withInk ->\r\n            boot()\r\n            juno.runtime.debugger.debugBlock(false, true)\r\n        'julia-debug:step-through-cell': =>\r\n          @withInk ->\r\n            boot()\r\n            juno.runtime.debugger.debugBlock(true, true)\r\n        'julia-debug:toggle-breakpoint': =>\r\n          @withInk ->\r\n            boot()\r\n            juno.runtime.debugger.togglebp()\r\n        'julia-debug:toggle-conditional-breakpoint': =>\r\n          @withInk ->\r\n            boot()\r\n            juno.runtime.debugger.togglebp(true)\r\n\r\n    # atom-text-editor with Julia grammar scope\r\n    @subs.add atom.commands.add 'atom-text-editor[data-grammar=\"source julia\"]',\r\n      'julia-client:format-code': =>\r\n        @withInk ->\r\n          boot()\r\n          juno.runtime.formatter.formatCode()\r\n\r\n    # Where \"module\" matters\r\n    @subs.add atom.commands.add 'atom-text-editor[data-grammar=\"source julia\"],\r\n                                 .julia-terminal,\r\n                                 .ink-workspace',\r\n      'julia-client:set-working-module': -> juno.runtime.modules.chooseModule()\r\n\r\n    # tree-view\r\n    @subs.add atom.commands.add '.tree-view',\r\n      'julia-client:run-all': (ev) =>\r\n        cancelComplete ev\r\n        @withInk ->\r\n          boot()\r\n          juno.runtime.evaluation.evalAll(ev.target)\r\n      'julia-debug:run-file': (ev) =>\r\n        @withInk ->\r\n          boot()\r\n          juno.runtime.debugger.debugFile(false, ev.target)\r\n      'julia-debug:step-through-file': (ev) =>\r\n        @withInk ->\r\n          boot()\r\n          juno.runtime.debugger.debugFile(true, ev.target)\r\n\r\n    # atom-work-space\r\n    @subs.add atom.commands.add 'atom-workspace',\r\n      'julia-client:open-external-REPL': -> juno.connection.terminal.repl()\r\n      'julia-client:start-julia': -> disrequireClient 'boot Julia', -> boot()\r\n      'julia-client:start-remote-julia-process': -> disrequireClient 'boot a remote Julia process', -> juno.connection.bootRemote()\r\n      'julia-client:kill-julia': -> juno.connection.client.kill()\r\n      'julia-client:interrupt-julia': => requireClient 'interrupt Julia', -> juno.connection.client.interrupt()\r\n      'julia-client:disconnect-julia': => requireClient 'disconnect Julia', -> juno.connection.client.disconnect()\r\n      # 'julia-client:reset-julia-server': -> juno.connection.local.server.reset() # server mode not functional\r\n      'julia-client:connect-external-process': -> disrequireClient -> juno.connection.messages.connectExternal()\r\n      'julia-client:connect-terminal': -> disrequireClient -> juno.connection.terminal.connectedRepl()\r\n      'julia-client:open-plot-pane': => @withInk -> juno.runtime.plots.open()\r\n      'julia-client:open-outline-pane': => @withInk -> juno.runtime.outline.open()\r\n      'julia-client:open-workspace': => @withInk -> juno.runtime.workspace.open()\r\n      'julia-client:restore-default-layout': -> juno.ui.layout.restoreDefaultLayout()\r\n      'julia-client:close-juno-panes': -> juno.ui.layout.closePromises()\r\n      'julia-client:reset-default-layout-settings': -> juno.ui.layout.resetDefaultLayoutSettings()\r\n      'julia-client:settings': -> atom.workspace.open('atom://config/packages/julia-client')\r\n\r\n      'julia-debug:run-file': =>\r\n        @withInk ->\r\n          boot()\r\n          juno.runtime.debugger.debugFile(false)\r\n      'julia-debug:step-through-file': =>\r\n        @withInk ->\r\n          boot()\r\n          juno.runtime.debugger.debugFile(true)\r\n      'julia-debug:clear-all-breakpoints': => juno.runtime.debugger.clearbps()\r\n      'julia-debug:step-to-next-line': (ev) => juno.runtime.debugger.nextline(ev)\r\n      'julia-debug:step-to-selected-line': (ev) => juno.runtime.debugger.toselectedline(ev)\r\n      'julia-debug:step-to-next-expression': (ev) => juno.runtime.debugger.stepexpr(ev)\r\n      'julia-debug:step-into': (ev) => juno.runtime.debugger.stepin(ev)\r\n      'julia-debug:stop-debugging': (ev) => juno.runtime.debugger.stop(ev)\r\n      'julia-debug:step-out': (ev) => juno.runtime.debugger.finish(ev)\r\n      'julia-debug:continue': (ev) => juno.runtime.debugger.continueForward(ev)\r\n      'julia-debug:open-debugger-pane': => juno.runtime.debugger.open()\r\n\r\n      'julia:new-julia-file': =>\r\n        atom.workspace.open().then((ed) =>\r\n          gr = atom.grammars.grammarForScopeName('source.julia')\r\n          ed.setGrammar(gr) if gr\r\n        )\r\n      'julia:open-julia-startup-file': -> atom.workspace.open(juno.misc.paths.home('.julia', 'config', 'startup.jl'))\r\n      'julia:open-juno-startup-file': -> atom.workspace.open(juno.misc.paths.home('.julia', 'config', 'juno_startup.jl'))\r\n      'julia:open-julia-home': -> shell.openItem juno.misc.paths.juliaHome()\r\n      'julia:open-package-in-new-window': -> requireClient 'get packages', -> juno.runtime.packages.openPackage()\r\n      'julia:open-package-as-project-folder': -> requireClient 'get packages', -> juno.runtime.packages.openPackage(false)\r\n      'julia:get-help': -> shell.openExternal 'http://discourse.julialang.org'\r\n      'julia-client:debug-info': =>\r\n        boot()\r\n        juno.runtime.debuginfo()\r\n\r\n      'julia-client:work-in-current-folder': (ev) ->\r\n        requireClient 'change working folder', ->\r\n          juno.runtime.evaluation.cdHere(ev.target)\r\n      'julia-client:work-in-project-folder': ->\r\n        requireClient 'change working folder', ->\r\n          juno.runtime.evaluation.cdProject()\r\n      'julia-client:work-in-home-folder': ->\r\n        requireClient 'change working folder', ->\r\n          juno.runtime.evaluation.cdHome()\r\n      'julia-client:select-working-folder': ->\r\n        requireClient 'change working folder', ->\r\n          juno.runtime.evaluation.cdSelect()\r\n      'julia-client:activate-environment-in-current-folder': (ev) ->\r\n        requireClient 'activate an environment', ->\r\n          juno.runtime.evaluation.activateProject(ev.target)\r\n      'julia-client:activate-environment-in-parent-folder': (ev) ->\r\n        requireClient 'activate an environment', ->\r\n          juno.runtime.evaluation.activateParentProject(ev.target)\r\n      'julia-client:activate-default-environment': (ev) ->\r\n        requireClient 'activate an environment', ->\r\n          juno.runtime.evaluation.activateDefaultProject()\r\n\r\n  deactivate: ->\r\n    @subs.dispose()\r\n\r\n  withInk: (f, err) ->\r\n    if @ink?\r\n      f()\r\n    else if err\r\n      atom.notifications.addError 'Please install the Ink package.',\r\n        detail: 'Julia Client requires the Ink package to run.\r\n                 You can install it via `File -> Settings -> Install`.'\r\n        dismissable: true\r\n    else\r\n      setTimeout (=> @withInk f, true), 100\r\n","/** @babel */\r\n\r\nimport path from 'path'\r\nimport fs from 'fs'\r\nimport child_process from 'child_process'\r\n\r\nexport function home (...p) {\r\n  const key = process.platform === 'win32' ? 'USERPROFILE' : 'HOME'\r\n  return path.join(process.env[key], ...p)\r\n}\r\n\r\nexport function juliaHome (...p) {\r\n  const juliaHome = (process.env.JULIA_HOME || home('.julia'))\r\n  return path.join(juliaHome, ...p)\r\n}\r\n\r\nexport function jlpath () {\r\n  return expandHome(atom.config.get('julia-client.juliaPath'))\r\n}\r\n\r\nexport function expandHome (p) {\r\n  return p.startsWith('~') ? p.replace('~', home()) : p\r\n}\r\n\r\nexport function fullPath (p) {\r\n  return new Promise((resolve, reject) => {\r\n    if (fs.existsSync(p)) return resolve(p)\r\n    const current_dir = process.cwd()\r\n    const exepath = path.dirname(process.execPath)\r\n    try {\r\n      process.chdir(exepath)\r\n      const realpath = fs.realpathSync(p)\r\n      fs.existsSync(realpath) && resolve(realpath)\r\n    } catch (err) {\r\n      console.log(err)\r\n    } finally {\r\n      try {\r\n        process.chdir(current_dir)\r\n      } catch (err) {\r\n        console.error(err)\r\n      }\r\n    }\r\n    if (process.platform === 'win32') {\r\n      if (/[a-zA-Z]\\:/.test(p)) return reject(\"Couldn't resolve path.\")\r\n    }\r\n    const which = process.platform === 'win32' ? 'where' : 'which'\r\n    child_process.exec(`${which} \"${p}\"`, (err, stdout, stderr) => {\r\n      if (err) return reject(stderr)\r\n      const p = stdout.trim()\r\n      if (fs.existsSync(p)) return resolve(p)\r\n      return reject('Couldn\\'t resolve path.')\r\n    })\r\n  })\r\n}\r\n\r\nexport function getVersion (path = jlpath()) {\r\n  return new Promise((resolve, reject) => {\r\n    child_process.exec(`\"${path}\" --version`, (err, stdout, stderr) => {\r\n      if (err) return reject(stderr)\r\n      const res = stdout.match(/(\\d+)\\.(\\d+)\\.(\\d+)/)\r\n      if (!res) return reject('Couldn\\'t resolve version.')\r\n      const [_, major, minor, patch] = res\r\n      return resolve({ major, minor, patch })\r\n    })\r\n  })\r\n}\r\n\r\nexport function projectDir () {\r\n  if (atom.config.get('julia-client.juliaOptions.persistWorkingDir')) {\r\n    return new Promise(resolve => {\r\n      const p = atom.config.get('julia-client.juliaOptions.workingDir')\r\n      try {\r\n        fs.stat(p, (err, stats) => {\r\n          if (err) {\r\n            return resolve(atomProjectDir())\r\n          } else {\r\n            return resolve(p)\r\n          }\r\n        })\r\n      } catch (err) {\r\n        return resolve(atomProjectDir())\r\n      }\r\n    })\r\n  } else {\r\n    return atomProjectDir()\r\n  }\r\n}\r\n\r\nfunction atomProjectDir () {\r\n  const dirs = atom.workspace.project.getDirectories()\r\n  let ws = process.env.HOME\r\n  if (!ws) {\r\n    ws = process.env.USERPROFILE\r\n  }\r\n  if (dirs.length === 0 || dirs[0].path.match('app.asar')) {\r\n    return Promise.resolve(ws)\r\n  }\r\n  return new Promise(resolve => {\r\n    // use the first open project folder (or its parent folder for files) if\r\n    // it is valid\r\n    try {\r\n      fs.stat(dirs[0].path, (err, stats) => {\r\n        if (err) return resolve(ws)\r\n        if (stats.isFile()) return resolve(path.dirname(dirs[0].path))\r\n        return resolve(dirs[0].path)\r\n      })\r\n    } catch (err) {\r\n      return resolve(ws)\r\n    }\r\n  })\r\n}\r\n\r\nfunction packageDir (...s) {\r\n  const packageRoot = path.resolve(__dirname, '..', '..')\r\n  return path.join(packageRoot, ...s)\r\n}\r\n\r\nexport const script = (...s) => packageDir('script', ...s)\r\n\r\nexport function getPathFromTreeView (el) {\r\n  // invoked from tree-view context menu\r\n  let pathEl = el.closest('[data-path]')\r\n  if (!pathEl) {\r\n    // invoked from command with focusing on tree-view\r\n    const activeEl = el.querySelector('.tree-view .selected')\r\n    if (activeEl) pathEl = activeEl.querySelector('[data-path]')\r\n  }\r\n  if (pathEl) return pathEl.dataset.path\r\n  return null\r\n}\r\n\r\nexport function getDirPathFromTreeView (el) {\r\n  // invoked from tree-view context menu\r\n  let dirEl = el.closest('.directory')\r\n  if (!dirEl) {\r\n    // invoked from command with focusing on tree-view\r\n    const activeEl = el.querySelector('.tree-view .selected')\r\n    if (activeEl) dirEl = activeEl.closest('.directory')\r\n  }\r\n  if (dirEl) {\r\n    const pathEl = dirEl.querySelector('[data-path]')\r\n    if (pathEl) return pathEl.dataset.path\r\n  }\r\n  return null\r\n}\r\n\r\nexport const readCode = (path) => fs.readFileSync(path, 'utf-8')\r\n","/** @babel */\r\n\r\nimport { Point, Range } from 'atom'\r\n\r\nexport const wordRegex = /[\\u00A0-\\uFFFF\\w_!´\\.]*@?[\\u00A0-\\uFFFF\\w_!´]+/\r\n\r\n/**\r\n * Takes an `editor` and gets the word at current cursor position. If that is nonempty, call\r\n * function `fn` with arguments `word` and `range`.\r\n */\r\nexport function withWord (editor, fn) {\r\n  const { word, range } = getWordAndRange(editor)\r\n  // If we only find numbers or nothing, return prematurely\r\n  if (!isValidWordToInspect(word)) return\r\n  fn(word, range)\r\n}\r\n\r\n/**\r\n * Returns the word and its range in the `editor`.\r\n *\r\n * `options`\r\n * - `bufferPosition` {Point}: If given returns the word at the `bufferPosition`, returns the word at the current cursor otherwise.\r\n * - `wordRegex` {RegExp} : A RegExp indicating what constitutes a “word” (default: `wordRegex`).\r\n */\r\nexport function getWordAndRange (editor, options = {\r\n  bufferPosition: undefined,\r\n  wordRegex: wordRegex\r\n}) {\r\n  // @TODO?:\r\n  // The following lines are kinda iffy: The regex may or may not be well chosen\r\n  // and it duplicates the efforts from atom-language-julia.\r\n  // It might be better to select the current word via finding the smallest <span>\r\n  // containing the bufferPosition/cursor which also has `function` or `macro` as its class.\r\n  const bufferPosition = options.bufferPosition ?\r\n    options.bufferPosition :\r\n    editor.getLastCursor().getBufferPosition()\r\n  const range = getWordRangeAtBufferPosition(editor, bufferPosition, {\r\n    wordRegex: options.wordRegex ? options.wordRegex : wordRegex\r\n  })\r\n  const word = editor.getTextInBufferRange(range)\r\n  return { word, range }\r\n}\r\n\r\n/**\r\n * Returns the range of a word containing the `bufferPosition` in `editor`.\r\n *\r\n * `options`\r\n * - `wordRegex` {RegExp}: A RegExp indicating what constitutes a “word” (default: `wordRegex`).\r\n */\r\nexport function getWordRangeAtBufferPosition (editor, bufferPosition, options = {\r\n  wordRegex: wordRegex\r\n}) {\r\n  // adapted from https://github.com/atom/atom/blob/v1.38.2/src/cursor.js#L606-L616\r\n  const { row, column } = bufferPosition\r\n  const ranges = editor.getBuffer().findAllInRangeSync(\r\n    options.wordRegex ? options.wordRegex : wordRegex,\r\n    new Range(new Point(row, 0), new Point(row, Infinity))\r\n  )\r\n  const range = ranges.find(range =>\r\n    range.end.column >= column && range.start.column <= column\r\n  )\r\n  return range ? Range.fromObject(range) : new Range(bufferPosition, bufferPosition)\r\n}\r\n\r\n/**\r\n * Examples: `|` represents `bufferPosition`:\r\n * - `\"he|ad.word.foot\"` => `Range` of `\"head\"`\r\n * - `\"head|.word.foot\"` => `Range` of `\"head\"`\r\n * - `\"head.|word.foot\"` => `Range` of `\"head.word\"`\r\n * - `\"head.word.fo|ot\"` => `Range` of `\"head.word.field\"`\r\n */\r\nexport function getWordRangeWithoutTrailingDots (word, range, bufferPosition) {\r\n  const { start } = range\r\n  const { column: startColumn } = start\r\n  const { row: endRow } = range.end\r\n  let endColumn = startColumn\r\n\r\n  const { column } = bufferPosition\r\n\r\n  const elements = word.split('.')\r\n  for (const element of elements) {\r\n    endColumn += element.length\r\n    if (column <= endColumn) {\r\n      break\r\n    } else {\r\n      endColumn += 1\r\n    }\r\n  }\r\n\r\n  const end = new Point(endRow, endColumn)\r\n  return new Range(start, end)\r\n}\r\n\r\n/**\r\n * Returns `true` if `word` is valid word to be inspected.\r\n */\r\nexport function isValidWordToInspect (word) {\r\n  return word.length > 0 && isNaN(word)\r\n}\r\n","\r\n\r\nexport function getColors(selectors) {\r\n  let grammar = atom.grammars.grammarForScopeName(\"source.julia\")\r\n\r\n  let styled = {}\r\n  let color = {}\r\n  let div = document.createElement('div')\r\n  div.classList.add('editor', 'editor-colors', 'julia-syntax-color-selector')\r\n\r\n  for (let style in selectors) {\r\n    let child = document.createElement('span')\r\n    child.innerText = 'foo'\r\n    child.classList.add(...selectors[style])\r\n    div.appendChild(child)\r\n    styled[style] = child\r\n  }\r\n\r\n  document.body.appendChild(div)\r\n  // wait till rendered?\r\n  for (let style in selectors) {\r\n    try {\r\n      color[style] = rgb2hex(window.getComputedStyle(styled[style])['color'])\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }\r\n  color['background'] = rgb2hex(window.getComputedStyle(div)['backgroundColor'])\r\n  document.body.removeChild(div)\r\n\r\n  return color\r\n}\r\n\r\nfunction rgb2hex(rgb) {\r\n  if (rgb.search(\"rgb\") == -1) {\r\n    return rgb\r\n  } else {\r\n    rgb = rgb.match(/^rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*(\\d+))?\\)$/)\r\n    function hex(x) {\r\n      return (\"0\" + parseInt(x).toString(16)).slice(-2);\r\n    }\r\n    return hex(rgb[1]) + hex(rgb[2]) + hex(rgb[3]);\r\n  }\r\n}\r\n","Loading = null\r\nlwaits = []\r\nwithLoading = (f) -> if Loading? then f() else lwaits.push f\r\n\r\n{bufferLines} = require '../misc'\r\n\r\nmodule.exports =\r\nclass IPC\r\n\r\n  @consumeInk: (ink) ->\r\n    Loading = ink.Loading\r\n    f() for f in lwaits\r\n\r\n  constructor: (stream) ->\r\n    withLoading =>\r\n      @loading = new Loading\r\n    @handlers = {}\r\n    @callbacks = {}\r\n    @queue = []\r\n    @id = 0\r\n\r\n    if stream? then @setStream stream\r\n\r\n    @handle\r\n      cb: (id, result) =>\r\n        @callbacks[id]?.resolve result\r\n        delete @callbacks[id]\r\n\r\n      cancelCallback: (id, e) =>\r\n        @callbacks[id].reject e\r\n\r\n  handle: (type, f) ->\r\n    if f?\r\n      @handlers[type] = f\r\n    else\r\n      @handle t, f for t, f of type\r\n\r\n  writeMsg: -> throw new Error 'msg not implemented'\r\n\r\n  msg: (type, args...) -> @writeMsg [type, args...]\r\n\r\n  rpc: (type, args...) ->\r\n    p = new Promise (resolve, reject) =>\r\n      @id += 1\r\n      @callbacks[@id] = {resolve, reject}\r\n      @msg {type, callback: @id}, args...\r\n    @loading?.monitor p\r\n\r\n  flush: ->\r\n    @writeMsg msg for msg in @queue\r\n    @queue = []\r\n\r\n  reset: ->\r\n    @loading?.reset()\r\n    @queue = []\r\n    cb.reject 'disconnected' for id, cb of @callbacks\r\n    @callbacks = {}\r\n\r\n  input: ([type, args...]) ->\r\n    if type.constructor == Object\r\n      {type, callback} = type\r\n    if @handlers.hasOwnProperty type\r\n      result = Promise.resolve().then => @handlers[type] args...\r\n      if callback\r\n        result\r\n          .then (result) => @msg 'cb', callback, result\r\n          .catch (err) =>\r\n            console.error(err)\r\n            @msg 'cancelCallback', callback, @errJson err\r\n    else\r\n      console.log \"julia-client: unrecognised message #{type}\", args\r\n\r\n  import: (fs, rpc = true, mod = {}) ->\r\n    return unless fs?\r\n    if fs.constructor == String then return @import([fs], rpc, mod)[fs]\r\n    if fs.rpc? or fs.msg?\r\n      mod = {}\r\n      @import fs.rpc, true,  mod\r\n      @import fs.msg, false, mod\r\n    else\r\n      fs.forEach (f) =>\r\n        mod[f] = (args...) =>\r\n          if rpc then @rpc f, args... else @msg f, args...\r\n    mod\r\n\r\n  isWorking: -> @loading?.isWorking()\r\n  onWorking: (f) -> @loading?.onWorking f\r\n  onDone: (f) -> @loading?.onDone f\r\n  onceDone: (f) -> @loading?.onceDone f\r\n\r\n  errJson: (obj) ->\r\n    return unless obj instanceof Error\r\n    {type: 'error', message: obj.message, stack: obj.stack}\r\n\r\n  readStream: (s) ->\r\n    s.on 'data', cb = bufferLines (m) => if m then @input JSON.parse m\r\n    @unreadStream = -> s.removeListener 'data', cb\r\n\r\n  writeStream: (s) ->\r\n    @writeMsg = (m) ->\r\n      s.write JSON.stringify m\r\n      s.write '\\n'\r\n\r\n  setStream: (@stream) ->\r\n    @readStream @stream\r\n    @writeStream @stream\r\n    @stream.on 'end', => @reset()\r\n","{debounce} = require 'underscore-plus'\r\n\r\nmodule.exports =\r\n  paths:   require './misc/paths'\r\n  blocks:  require './misc/blocks'\r\n  cells:   require './misc/cells'\r\n  words:   require './misc/words'\r\n  weave:   require './misc/weave'\r\n  colors:  require './misc/colors'\r\n  scopes:  require './misc/scopes'\r\n\r\n  bufferLines: (t, f) ->\r\n    if not f? then [t, f] = [null, t]\r\n    buffer = ['']\r\n    flush = if not t? then -> else debounce (->\r\n      if buffer[0] isnt ''\r\n        f buffer[0], false\r\n        buffer[0] = ''), t\r\n    (data) ->\r\n      lines = data.toString().split '\\n'\r\n      buffer[0] += lines.shift()\r\n      buffer.push lines...\r\n      while buffer.length > 1\r\n        f buffer.shift(), true\r\n      flush()\r\n\r\n  time: (desc, p) ->\r\n    s = -> new Date().getTime()/1000\r\n    t = s()\r\n    p.then -> console.log \"#{desc}: #{(s()-t).toFixed(2)}s\"\r\n      .catch ->\r\n    p\r\n\r\n  hook: (obj, method, f) ->\r\n    souper = obj[method].bind obj\r\n    obj[method] = (a...) -> f souper, a...\r\n\r\n  once: (f) ->\r\n    done = false\r\n    (args...) ->\r\n      return if done\r\n      done = true\r\n      f.call @, args...\r\n\r\n  mutex: ->\r\n    wait = Promise.resolve()\r\n    (f) ->\r\n      current = wait\r\n      release = null\r\n      wait = new Promise((resolve) -> release = resolve).catch ->\r\n      current.then => f.call @, release\r\n\r\n  exclusive: (f) ->\r\n    lock = module.exports.mutex()\r\n    (args...) ->\r\n      lock (release) =>\r\n        result = f.call @, args...\r\n        release result\r\n        result\r\n\r\n  # takes a time period in seconds and formats it as hh:mm:ss\r\n  formatTimePeriod: (dt) ->\r\n    return unless dt > 1\r\n    h = Math.floor dt/(60*60)\r\n    m = Math.floor (dt -= h*60*60)/60\r\n    s = Math.round (dt - m*60)\r\n    parts = [h, m, s]\r\n    for i, dt of parts\r\n      parts[i] = if dt < 10 then \"0#{dt}\" else \"#{dt}\"\r\n    parts.join ':'\r\n","{throttle} = require 'underscore-plus'\r\n{Emitter} = require 'atom'\r\n\r\nIPC = require './ipc'\r\n\r\nmodule.exports =\r\n\r\n  # Connection logic injects a connection via `attach`.\r\n  ## Required interface:\r\n  # .message(json)\r\n  ## Optional interface:\r\n  # .stdin(data)\r\n  # .interrupt()\r\n  # .kill()\r\n\r\n  # Messaging\r\n\r\n  ipc: new IPC\r\n\r\n  handle: (a...) -> @ipc.handle a...\r\n  input: (m)  -> @ipc.input m\r\n  readStream: (s) -> @ipc.readStream s\r\n  import: (a...) -> @ipc.import a...\r\n\r\n  activate: ->\r\n\r\n    @emitter = new Emitter\r\n\r\n    @bootMode = atom.config.get('julia-client.juliaOptions.bootMode')\r\n\r\n    @ipc.writeMsg = (msg) =>\r\n      if @isActive() and @conn.ready?() isnt false\r\n        @conn.message msg\r\n      else\r\n        @ipc.queue.push msg\r\n\r\n    @handle 'error', (options) =>\r\n      if atom.config.get 'julia-client.uiOptions.errorNotifications'\r\n        atom.notifications.addError options.msg, options\r\n      console.error options.detail\r\n      atom.beep()\r\n\r\n    plotpane = null\r\n\r\n    @onAttached =>\r\n      args = atom.config.get 'julia-client.juliaOptions.arguments'\r\n      @import('connected')()\r\n      if args.length > 0\r\n        @import('args') args\r\n\r\n      plotpane = atom.config.observe 'julia-client.uiOptions.usePlotPane', (use) =>\r\n        @import('enableplotpane')(use)\r\n\r\n    @onDetached =>\r\n      plotpane?.dispose()\r\n\r\n    @onBoot (proc) =>\r\n      @remoteConfig = proc.config\r\n\r\n  setBootMode: (@bootMode) ->\r\n\r\n  editorPath: (ed) ->\r\n    if not ed? then return ed\r\n    if @bootMode is 'Remote' and @remoteConfig?\r\n      path = ed.getPath()\r\n      if not path? then return path\r\n      ind = path.indexOf(@remoteConfig.host)\r\n      if ind > -1\r\n        path = path.slice(ind + @remoteConfig.host.length, path.length)\r\n        path = path.replace(/\\\\/g, '/')\r\n        return path\r\n      else\r\n        return path\r\n    else\r\n      return ed.getPath()\r\n\r\n  deactivate: ->\r\n    @emitter.dispose()\r\n    if @isActive() then @detach()\r\n\r\n  # Basic handlers (communication through stderr)\r\n\r\n  basicHandlers: {}\r\n\r\n  basicHandler: (s) ->\r\n    if (match = s.toString().match /juno-msg-(.*)/)\r\n      @basicHandlers[match[1]]?()\r\n      true\r\n\r\n  handleBasic: (msg, f) -> @basicHandlers[msg] = f\r\n\r\n  # Connecting & Booting\r\n\r\n  emitter: new Emitter\r\n\r\n  onAttached: (cb) -> @emitter.on 'attached', cb\r\n  onDetached: (cb) -> @emitter.on 'detached', cb\r\n\r\n  onceAttached: (cb) ->\r\n    f = @onAttached (args...) ->\r\n      f.dispose()\r\n      cb.call this, args...\r\n\r\n  isActive: -> @conn?\r\n\r\n  attach: (@conn) ->\r\n    @flush() unless @conn.ready?() is false\r\n    @emitter.emit 'attached'\r\n\r\n  detach: ->\r\n    delete @conn\r\n    @ipc.reset()\r\n    @emitter.emit 'detached'\r\n\r\n  flush: -> @ipc.flush()\r\n\r\n  isWorking: -> @ipc.isWorking()\r\n  onWorking: (f) -> @ipc.onWorking f\r\n  onDone: (f) -> @ipc.onDone f\r\n  onceDone: (f) -> @ipc.onceDone f\r\n\r\n  # Management & UI\r\n\r\n  onStdout: (f) -> @emitter.on 'stdout', f\r\n  onStderr: (f) -> @emitter.on 'stderr', f\r\n  onInfo: (f) -> @emitter.on 'info', f\r\n  onBoot: (f) -> @emitter.on 'boot', f\r\n  stdout: (data) -> @emitter.emit 'stdout', data\r\n  stderr: (data) -> @emitter.emit 'stderr', data unless @basicHandler data\r\n  info: (data) -> @emitter.emit 'info', data\r\n\r\n  clientCall: (name, f, args...) ->\r\n    if not @conn[f]?\r\n      atom.notifications.addError \"This client doesn't support #{name}.\"\r\n    else\r\n      @conn[f].call @conn, args...\r\n\r\n  stdin: (data) -> @clientCall 'STDIN', 'stdin', data\r\n\r\n  interrupt: ->\r\n    if @isActive()\r\n      @clientCall 'interrupts', 'interrupt'\r\n\r\n  disconnect: ->\r\n    if @isActive()\r\n      @clientCall 'disconnecting', 'disconnect'\r\n\r\n  kill: ->\r\n    if @isActive()\r\n      if not @isWorking()\r\n        @import('exit')().catch ->\r\n      else\r\n        @clientCall 'kill', 'kill'\r\n    else\r\n      @ipc.reset()\r\n\r\n  clargs: ->\r\n    {precompiled, optimisationLevel, deprecationWarnings} =\r\n      atom.config.get 'julia-client.juliaOptions'\r\n    as = []\r\n    as.push \"--depwarn=#{if deprecationWarnings then 'yes' else 'no'}\"\r\n    as.push \"-O#{optimisationLevel}\" unless optimisationLevel is 2\r\n    as.push \"--color=yes\"\r\n    as.push \"-i\"\r\n    startupArgs = atom.config.get 'julia-client.juliaOptions.startupArguments'\r\n    if startupArgs.length > 0\r\n      as = as.concat startupArgs\r\n    as = as.map (arg) => arg.trim()\r\n    as = as.filter (arg) => arg.length > 0\r\n    as\r\n\r\n  connectedError: (action = 'do that') ->\r\n    if @isActive()\r\n      atom.notifications.addError \"Can't #{action} with a Julia client running.\",\r\n        description: \"Stop the current client with `Packages -> Juno -> Stop Julia`.\"\r\n      true\r\n    else\r\n      false\r\n\r\n  notConnectedError: (action = 'do that') ->\r\n    if not @isActive()\r\n      atom.notifications.addError \"Can't #{action} without a Julia client running.\",\r\n        description: \"Start a client with `Packages -> Juno -> Start Julia`.\"\r\n      true\r\n    else\r\n      false\r\n\r\n  require: (a, f) ->\r\n    f ? [a, f] = [null, a]\r\n    @notConnectedError(a) or f()\r\n\r\n  disrequire: (a, f) ->\r\n    f ? [a, f] = [null, a]\r\n    @connectedError(a) or f()\r\n\r\n  withCurrent: (f) ->\r\n    current = @conn\r\n    (a...) =>\r\n      return unless current is @conn\r\n      f(a...)\r\n","net = require 'net'\r\nclient = require '../client'\r\n\r\nmodule.exports =\r\n  server: null\r\n  port: null\r\n\r\n  listeners: []\r\n\r\n  next: ->\r\n    conn = new Promise (resolve) =>\r\n      @listeners.push resolve\r\n    conn.dispose = =>\r\n      @listeners = @listeners.filter (x) -> x is conn\r\n    conn\r\n\r\n  connect: (sock) ->\r\n    message = (m) -> sock.write JSON.stringify m\r\n    client.readStream sock\r\n    sock.on 'end', -> client.detach()\r\n    sock.on 'error', -> client.detach()\r\n    client.attach {message}\r\n\r\n  handle: (sock) ->\r\n    if @listeners.length > 0\r\n      @listeners.shift()(sock)\r\n    else if not client.isActive()\r\n      @connect sock\r\n    else\r\n      sock.end()\r\n\r\n  listen: ->\r\n    return Promise.resolve(@port) if @port?\r\n    new Promise (resolve, reject) =>\r\n      externalPort = atom.config.get('julia-client.juliaOptions.externalProcessPort')\r\n      if externalPort == 'random'\r\n        port = 0\r\n      else\r\n        port = parseInt(externalPort)\r\n      @server = net.createServer((sock) => @handle(sock))\r\n      @server.on 'error', (err) =>\r\n        if err.code == 'EADDRINUSE'\r\n          details = ''\r\n          if port != 0\r\n            details = 'Please change to another port in the settings and try again.'\r\n          atom.notifications.addError \"Julia could not be started.\",\r\n            description: \"\"\"\r\n            Port `#{port}` is already in use.\r\n\r\n            \"\"\" + if details isnt ''\r\n              \"\"\"\r\n              #{details}\r\n              \"\"\"\r\n            else\r\n              \"Please try again or set a fixed port that you know is unused.\"\r\n            dismissable: true\r\n        reject(err)\r\n      @server.listen port, '127.0.0.1', =>\r\n        @port = @server.address().port\r\n        resolve(@port)\r\n","child_process = require 'child_process'\r\nnet = require 'net'\r\n\r\ntcp = require './process/tcp'\r\nclient = require './client'\r\n{paths} = require '../misc'\r\n\r\ndisrequireClient = (a, f) -> client.disrequire a, f\r\n\r\nmodule.exports =\r\n\r\n  escpath: (p) -> '\"' + p + '\"'\r\n  escape: (sh) -> sh.replace(/\"/g, '\\\\\"')\r\n\r\n  exec: (sh) ->\r\n    child_process.exec sh, (err, stdout, stderr) ->\r\n      if err?\r\n        console.log err\r\n\r\n  term: (sh) ->\r\n    switch process.platform\r\n      when \"darwin\"\r\n        @exec \"osascript -e 'tell application \\\"Terminal\\\" to activate'\"\r\n        @exec \"osascript -e 'tell application \\\"Terminal\\\" to do script \\\"#{@escape(sh)}\\\"'\"\r\n      when \"win32\"\r\n        @exec \"#{@terminal()} \\\"#{sh}\\\"\"\r\n      else\r\n        @exec \"#{@terminal()} \\\"#{@escape(sh)}\\\"\"\r\n\r\n  terminal: -> atom.config.get(\"julia-client.consoleOptions.terminal\")\r\n\r\n  defaultShell: ->\r\n    sh = process.env[\"SHELL\"]\r\n    if sh?\r\n      sh\r\n    else if process.platform == 'win32'\r\n      'powershell.exe'\r\n    else\r\n      'bash'\r\n\r\n  defaultTerminal: ->\r\n    if process.platform == 'win32'\r\n      'cmd /C start cmd /C'\r\n    else\r\n      'x-terminal-emulator -e'\r\n\r\n  repl: -> @term \"#{@escpath paths.jlpath()}\"\r\n\r\n  connectCommand: ->\r\n    tcp.listen().then (port) =>\r\n      \"#{@escpath paths.jlpath()} #{client.clargs().join(' ')} #{paths.script('boot_repl.jl')} #{port}\"\r\n\r\n  connectedRepl: -> @connectCommand().then (cmd) => @term cmd\r\n","client = require './client'\r\ntcp = require './process/tcp'\r\n\r\nmodule.exports =\r\n  activate: ->\r\n\r\n    client.handleBasic 'install', =>\r\n      @note?.dismiss()\r\n      atom.notifications.addError \"Error installing Atom.jl package\",\r\n        description:\r\n          \"\"\"\r\n          Go to the `Packages -> Juno -> Open REPL` menu and\r\n          run `Pkg.add(\"Atom\")` in Julia, then try again.\r\n          If you still see an issue, please report it to:\r\n\r\n          https://discourse.julialang.org/\r\n          \"\"\"\r\n        dismissable: true\r\n\r\n    client.handleBasic 'load', =>\r\n      @note?.dismiss()\r\n      atom.notifications.addError \"Error loading Atom.jl package\",\r\n        description:\r\n          \"\"\"\r\n          Go to the `Packages -> Juno -> Open REPL` menu and\r\n          run `Pkg.update()` in Julia, then try again.\r\n          If you still see an issue, please report it to:\r\n\r\n          https://discourse.julialang.org/\r\n          \"\"\"\r\n        dismissable: true\r\n\r\n    client.handleBasic 'installing', =>\r\n      @note?.dismiss()\r\n      @note = atom.notifications.addInfo \"Installing Julia packages...\",\r\n        description:\r\n          \"\"\"\r\n          Julia's first run will take a couple of minutes.\r\n          See the REPL below for progress.\r\n          \"\"\"\r\n        dismissable: true\r\n      @openConsole()\r\n\r\n    client.handleBasic 'precompiling', =>\r\n      @note?.dismiss()\r\n      @note = atom.notifications.addInfo \"Compiling Julia packages...\",\r\n        description:\r\n          \"\"\"\r\n          Julia's first run will take a couple of minutes.\r\n          See the REPL below for progress.\r\n          \"\"\"\r\n        dismissable: true\r\n      @openConsole()\r\n\r\n    client.handle welcome: =>\r\n      @note?.dismiss()\r\n      atom.notifications.addSuccess \"Welcome to Juno!\",\r\n        description:\r\n          \"\"\"\r\n          Success! Juno is set up and ready to roll.\r\n          Try entering `2+2` in the REPL below.\r\n          \"\"\"\r\n        dismissable: true\r\n      @openConsole()\r\n\r\n  openConsole: ->\r\n    atom.commands.dispatch atom.views.getView(atom.workspace),\r\n      'julia-client:open-REPL'\r\n\r\n  jlNotFound: (path, details = '') ->\r\n    atom.notifications.addError \"Julia could not be started.\",\r\n      description:\r\n        \"\"\"\r\n        We tried to launch Julia from: `#{path}`\r\n        This path can be changed in the settings.\r\n        \"\"\"\r\n      detail: details\r\n      dismissable: true\r\n\r\n  connectExternal: ->\r\n    tcp.listen().then (port) ->\r\n      code = \"using Atom; using Juno; Juno.connect(#{port})\"\r\n      msg = atom.notifications.addInfo \"Connect an external process\",\r\n        description:\r\n          \"\"\"\r\n          To connect a Julia process running in the terminal, run the command:\r\n\r\n              #{code}\r\n          \"\"\"\r\n        dismissable: true\r\n        buttons: [{text: 'Copy', onDidClick: -> atom.clipboard.write code}]\r\n      client.onceAttached ->\r\n        if not msg.isDismissed()\r\n          msg.dismiss()\r\n        atom.notifications.addSuccess \"Julia is connected.\"\r\n","\r\n\r\nimport tcp from './tcp'\r\nimport * as pty from 'node-pty-prebuilt-multiarch'\r\nimport net from 'net'\r\nimport { paths, mutex } from '../../misc'\r\nimport { jlNotFound } from '../messages'\r\n\r\nexport var lock = mutex()\r\n\r\nexport function get (path, args) {\r\n  return lock((release) => {\r\n    let p = get_(path, args)\r\n    p.catch((err) => {\r\n      release()\r\n    })\r\n    release(p.then(({socket}) => socket))\r\n    return p\r\n  })\r\n}\r\n\r\nexport function get_ (path, args) {\r\n  const env = customEnv()\r\n  return getProcess(path, args, env)\r\n}\r\n\r\nexport function customEnv (env = process.env) {\r\n  let confnt = atom.config.get('julia-client.juliaOptions.numberOfThreads')\r\n  let confntInt = parseInt(confnt)\r\n\r\n  if (confnt == 'auto') {\r\n    env.JULIA_NUM_THREADS = require('physical-cpu-count')\r\n  } else if (confntInt != 0 && isFinite(confntInt)) {\r\n    env.JULIA_NUM_THREADS = confntInt\r\n  }\r\n\r\n  if (atom.config.get('julia-client.disableProxy')) {\r\n    delete env.HTTP_PROXY\r\n    delete env.HTTPS_PROXY\r\n    delete env.http_proxy\r\n    delete env.https_proxy\r\n  }\r\n\r\n  return env\r\n}\r\n\r\nfunction getProcess (path, args, env) {\r\n  return new Promise((resolve, reject) => {\r\n    tcp.listen().then((port) => {\r\n      paths.fullPath(path).then((path) => {\r\n        paths.projectDir().then((cwd) => {\r\n          // space before port needed for pty.js on windows:\r\n          let ty = pty.spawn(path, [...args, paths.script('boot_repl.jl'), ` ${port}`], {\r\n            cols: 100,\r\n            rows: 30,\r\n            env: env,\r\n            cwd: cwd,\r\n            useConpty: true,\r\n            handleFlowControl: true\r\n          })\r\n\r\n          let sock = socket(ty)\r\n\r\n          sock.catch((err) => {\r\n            reject(err)\r\n          })\r\n\r\n          // catch errors when interacting with ty, just to be safe (errors might crash Atom)\r\n          let proc = {\r\n            ty: ty,\r\n            kill: () => {\r\n              // only kill pty if it's still alive:\r\n              if (ty._readable || ty._writable) {\r\n                try {\r\n                  ty.kill()\r\n                } catch (err) {\r\n                  console.log('Terminal:')\r\n                  console.log(err);\r\n                }\r\n              }\r\n            },\r\n            interrupt: () => {\r\n              try {\r\n                ty.write('\\x03')\r\n              } catch (err) {\r\n                console.log('Terminal:')\r\n                console.log(err);\r\n              }\r\n            },\r\n            socket: sock,\r\n            onExit: (f) => {\r\n              try {\r\n                ty.on('exit', f)\r\n              } catch (err) {\r\n                console.log('Terminal:')\r\n                console.log(err);\r\n              }\r\n            },\r\n            onStderr: (f) => {},\r\n            onStdout: (f) => {\r\n              try {\r\n                ty.on('data', f)\r\n              } catch (err) {\r\n                console.log('Terminal:')\r\n                console.log(err);\r\n              }\r\n            }\r\n          }\r\n\r\n          resolve(proc)\r\n        }).catch((err) => {\r\n          reject(err)\r\n        })\r\n      }).catch((err) => {\r\n        jlNotFound(path, err)\r\n        reject(err)\r\n      })\r\n    }).catch((err) => {\r\n      reject(err)\r\n    })\r\n  })\r\n}\r\n\r\nfunction socket (ty) {\r\n  conn = tcp.next()\r\n  failure = new Promise((resolve, reject) => {\r\n    ty.on('exit', (err) => {\r\n      conn.dispose()\r\n      reject(err)\r\n    })\r\n  })\r\n  return Promise.race([conn, failure])\r\n}\r\n","{isEqual} = require 'underscore-plus'\r\nhash = require 'object-hash'\r\nbasic = require './basic'\r\n\r\nIPC = require '../ipc'\r\n\r\nmodule.exports =\r\n  provider: ->\r\n    basic\r\n\r\n  cacheLength: 1\r\n\r\n  procs: {}\r\n\r\n  key: (path, args) -> hash([path, args...].join(' ').trim())\r\n\r\n  cache: (path, args) -> @procs[@key(path, args)] ?= []\r\n\r\n  removeFromCache: (path, args, obj) ->\r\n    key = @key path, args\r\n    @procs[key] = @procs[key].filter (x) -> x != obj\r\n\r\n  toCache: (path, args, proc) ->\r\n    proc.cached = true\r\n    @cache(path, args).push proc\r\n\r\n  fromCache: (path, args) ->\r\n    ps = @cache path, args\r\n    p = ps.shift()\r\n    return unless p?\r\n    p.cached = false\r\n    p.init.then =>\r\n      @start path, args\r\n      p.proc\r\n\r\n  start: (path, args) ->\r\n    allArgs = [args, atom.config.get('julia-client.juliaOptions')]\r\n    @provider().lock (release) =>\r\n      if @cache(path, allArgs).length < @cacheLength\r\n        p = @provider().get_(path, args).then (proc) =>\r\n          obj = {path, allArgs, proc: proc}\r\n          @monitor proc\r\n          @warmup obj\r\n          @toCache path, allArgs, obj\r\n          proc.socket\r\n            .then => @start path, allArgs\r\n            .catch (e) => @removeFromCache path, allArgs, obj\r\n          release proc.socket\r\n        p.catch (err) =>\r\n          release()\r\n      else\r\n        release()\r\n    return\r\n\r\n  flush: (events, out, err) ->\r\n    for {type, data} in events\r\n      (if type == 'stdout' then out else err) data\r\n\r\n  monitor: (proc) ->\r\n    proc.events = []\r\n    proc.wasCached = true\r\n    proc.onStdout (data) -> proc.events?.push {type: 'stdout', data}\r\n    proc.onStderr (data) -> proc.events?.push {type: 'stderr', data}\r\n    proc.flush = (out, err) =>\r\n      @flush proc.events, out, err\r\n      delete proc.events\r\n\r\n  boot: (ipc) -> ipc.rpc 'ping'\r\n  repl: (ipc) -> ipc.rpc 'changemodule', {mod: 'Main'}\r\n\r\n  warmup: (obj) ->\r\n    obj.init = Promise.resolve()\r\n    obj.proc.socket\r\n      .then (sock) =>\r\n        return unless obj.cached\r\n        ipc = new IPC sock\r\n        [@boot, @repl].forEach (f) ->\r\n          obj.init = obj.init.then ->\r\n            if obj.cached then f ipc\r\n        obj.init = obj.init\r\n          .catch (err) -> console.warn 'julia warmup error:', err\r\n          .then -> ipc.unreadStream()\r\n        return\r\n      .catch ->\r\n\r\n  get: (path, args) ->\r\n    allArgs = [args, atom.config.get('julia-client.juliaOptions')]\r\n    if (proc = @fromCache path, allArgs) then p = proc\r\n    else p = @provider().get path, args\r\n    @start path, args\r\n    p\r\n\r\n  reset: ->\r\n    for key, ps of @procs\r\n      for p in ps\r\n        p.proc.kill()\r\n","\r\n\r\nimport tcp from './tcp'\r\nimport net from 'net'\r\nimport { paths, mutex } from '../../misc'\r\nimport * as ssh from 'ssh2'\r\nimport fs from 'fs'\r\n\r\nexport var lock = mutex()\r\n\r\nlet getRemoteConf = undefined\r\nlet getRemoteName = undefined\r\nlet serversettings = {}\r\nlet currentServer = undefined\r\n\r\nexport function get (path, args) {\r\n  return lock((release) => {\r\n    let p = get_(path, args)\r\n    release(p.then(({socket}) => socket))\r\n    p.catch(() => release())\r\n    return p\r\n  })\r\n}\r\n\r\nfunction getConnectionSettings () {\r\n  return new Promise((resolve, reject) => {\r\n    if (getRemoteConf) {\r\n      let conf = getRemoteConf('Juno requests access to your server configuration to open a terminal.')\r\n      conf.then(conf => resolve(conf)).catch(reason => reject(reason))\r\n    } else {\r\n      reject('nopackage')\r\n    }\r\n  })\r\n}\r\n\r\nexport function withRemoteConfig (f) {\r\n  return new Promise((resolve, reject) => {\r\n    if (getRemoteName === undefined) {\r\n      reject()\r\n    } else {\r\n      getRemoteName().then(name => {\r\n        name = name.toString()\r\n        let cachedSettings = serversettings[name]\r\n        if (cachedSettings) {\r\n          resolve(f(maybe_add_agent(cachedSettings)))\r\n        } else {\r\n          getConnectionSettings().then(conf => {\r\n            serversettings[name] = conf\r\n            resolve(f(maybe_add_agent(conf)))\r\n          }).catch(reason => {\r\n            showRemoteError(reason)\r\n            reject()\r\n          })\r\n        }\r\n      }).catch(reason => {\r\n        showRemoteError(reason)\r\n        reject()\r\n      })\r\n    }\r\n  })\r\n}\r\n\r\nfunction maybe_add_agent (conf) {\r\n  if (conf && atom.config.get('julia-client.remoteOptions.agentAuth')) {\r\n    let sshsock = ssh_socket()\r\n    if (!conf.agent && sshsock) {\r\n      conf.agent = sshsock\r\n    }\r\n    if (!conf.agentForward) {\r\n      conf.agentForward = atom.config.get('julia-client.remoteOptions.forwardAgent')\r\n    }\r\n  }\r\n  return conf\r\n}\r\n\r\nfunction ssh_socket () {\r\n  let sock = process.env['SSH_AUTH_SOCK']\r\n  if (sock) {\r\n    return sock\r\n  } else {\r\n    if (process.platform == 'win32') {\r\n      return 'pageant'\r\n    } else {\r\n      return ''\r\n    }\r\n  }\r\n}\r\n\r\nconst storageKey = 'juno_remote_server_exec_key'\r\n\r\nfunction setRemoteExec (server, command) {\r\n  let store = getRemoteStore()\r\n  store[server] = command\r\n  setRemoteStore(store)\r\n}\r\n\r\nfunction getRemoteExec (server) {\r\n  let store = getRemoteStore()\r\n  return store[server]\r\n}\r\n\r\nfunction setRemoteStore (store) {\r\n  localStorage[storageKey] = JSON.stringify(store)\r\n}\r\n\r\nfunction getRemoteStore () {\r\n  let store = localStorage[storageKey]\r\n  if (store == undefined) {\r\n    store = []\r\n  } else {\r\n    store = JSON.parse(store)\r\n  }\r\n  return store\r\n}\r\n\r\nfunction showRemoteError (reason) {\r\n  if (reason == 'nopackage') {\r\n    atom.notifications.addInfo('ftp-remote-edit not installed')\r\n  } else if (reason == 'noservers') {\r\n    let notif = atom.notifications.addInfo('Please select a project', {\r\n      description: `Connect to a server in the ftp-remote-edit tree view.`,\r\n      dismissable: true,\r\n      buttons: [\r\n        {\r\n          text: 'Toggle Remote Tree View',\r\n          onDidClick: () => {\r\n            let edview = atom.views.getView(atom.workspace)\r\n            atom.commands.dispatch(edview, 'ftp-remote-edit:toggle')\r\n            notif.dismiss()\r\n          }\r\n        }\r\n      ]\r\n    })\r\n  } else {\r\n    atom.notifications.addError('Remote Connection Failed', {\r\n      details: `Unknown Error: \\n\\n ${reason}`\r\n    })\r\n  }\r\n}\r\n\r\nexport function consumeGetServerConfig (getconf) {\r\n  getRemoteConf = getconf\r\n}\r\n\r\nexport function consumeGetServerName (name) {\r\n  getRemoteName = name\r\n}\r\n\r\nexport function get_ (path, args) {\r\n  return withRemoteConfig(conf => {\r\n    let execs = getRemoteExec(conf.name)\r\n    if (!execs) {\r\n      console.log(\"open a dialog and get config here\")\r\n    }\r\n    return new Promise((resolve, reject) => {\r\n      tcp.listen().then((port) => {\r\n        let conn = new ssh.Client()\r\n\r\n        conn.on('ready', () => {\r\n          conn.forwardIn('127.0.0.1', port, err => {\r\n            if (err) {\r\n              console.error(`Error while forwarding remote connection from ${port}: ${err}`)\r\n              atom.notifications.addError(`Port in use`, {\r\n                description: `Port ${port} on the remote server already in use.\r\n                              Try again with another port.`\r\n              })\r\n              reject()\r\n            }\r\n          })\r\n          let jlpath = atom.config.get('julia-client.remoteOptions.remoteJulia')\r\n\r\n          // construct something like\r\n          //\r\n          // /bin/sh -c 'tmux new -s sessionname '\\'' julia -i -e '\\'\\\\\\'\\''startup_repl'\\'\\\\\\'\\'' '\\''port'\\'' '\\'' '\r\n          //\r\n          // with properly escaped single quotes.\r\n\r\n          let exec = ''\r\n          if (atom.config.get('julia-client.remoteOptions.tmux')) {\r\n            let sessionName = atom.config.get('julia-client.remoteOptions.tmuxName')\r\n            exec += `/bin/sh -c '`\r\n            exec += `tmux new -s ${sessionName} '\\\\''`\r\n            if (threadCount() !== undefined) {\r\n              exec += ` JULIA_NUM_THREADS=\"${threadCount()}\" `\r\n            }\r\n            exec += jlpath\r\n            exec += ` ${args.join(' ')} -e '\\\\'\\\\\\\\\\\\'\\\\''`\r\n            // could automatically escape single quotes with `replace(/'/, `'\\\\'\\\\\\\\\\\\'\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\\\\\\\\\\\\'\\\\''`)`,\r\n            // but that's so ugly I'd rather not do that\r\n            exec += fs.readFileSync(paths.script('boot_repl.jl')).toString()\r\n            exec += `'\\\\'\\\\\\\\\\\\'\\\\'' ${port} '\\\\'' `\r\n            exec += `|| tmux send-keys -t ${sessionName}.left ^A ^K ^H '\\\\''Juno.connect(${port})'\\\\'' ENTER `\r\n            exec += `&& tmux attach -t ${sessionName} `\r\n            exec += `'`\r\n          } else {\r\n            exec += `/bin/sh -c '`\r\n            if (threadCount() !== undefined) {\r\n              exec += `JULIA_NUM_THREADS=\"${threadCount()}\" `\r\n            }\r\n            exec += `${jlpath} ${args.join(' ')} -e '\\\\''`\r\n            // could automatically escape single quotes with `replace(/'/, `'\\\\'\\\\\\\\\\\\'\\\\''`)`,\r\n            // but that's so ugly I'd rather not do that\r\n            exec += fs.readFileSync(paths.script('boot_repl.jl')).toString()\r\n            exec += `'\\\\'' ${port}`\r\n            exec += `'`\r\n          }\r\n\r\n          conn.exec(exec, { pty: { term: \"xterm-256color\" } }, (err, stream) => {\r\n            if (err) console.error(`Error while executing command \\n\\`${exec}\\`\\n on remote server.`)\r\n\r\n            stream.on('close', (err) => {\r\n              if (err) {\r\n                let description = 'We tried to launch Julia '\r\n                if (atom.config.get('julia-client.remoteOptions.tmux')) {\r\n                  description += `in a \\`tmux\\` session named \\`${atom.config.get('julia-client.remoteOptions.tmuxName')}\\` `\r\n                }\r\n                description += `from \\`${jlpath}\\` but the process failed with \\`${err}\\`.\\n\\n`\r\n                description += 'Please make sure your settings are correct.'\r\n                atom.notifications.addError(\"Remote Julia session could not be started.\", {\r\n                  description: description,\r\n                  dismissable: true\r\n                })\r\n              }\r\n              conn.end()\r\n            })\r\n            stream.on('error', () => {\r\n              conn.end()\r\n            })\r\n            stream.on('finish', () => {\r\n              conn.end()\r\n            })\r\n\r\n            let sock = socket(stream)\r\n\r\n            // forward resize handling\r\n            stream.resize = (cols, rows) => stream.setWindow(rows, cols, 999, 999)\r\n            let proc = {\r\n              ty: stream,\r\n              kill: () => stream.signal('KILL'),\r\n              disconnect: () => stream.close(),\r\n              interrupt: () => stream.write('\\x03'), // signal handling doesn't seem to work :/\r\n              socket: sock,\r\n              onExit: (f) => stream.on('close', f),\r\n              onStderr: (f) => stream.stderr.on('data', data => f(data.toString())),\r\n              onStdout: (f) => stream.on('data', data => f(data.toString())),\r\n              config: conf\r\n            }\r\n            resolve(proc)\r\n          })\r\n        }).on('tcp connection', (info, accept, reject) => {\r\n          let stream = accept() // connect to forwarded connection\r\n          stream.on('close', () => {\r\n            conn.end()\r\n          })\r\n          stream.on('error', () => {\r\n            conn.end()\r\n          })\r\n          stream.on('finish', () => {\r\n            conn.end()\r\n          })\r\n          // start server that the julia server can connect to\r\n          let sock = net.createConnection({ port: port }, () => {\r\n            stream.pipe(sock).pipe(stream)\r\n          })\r\n          sock.on('close', () => {\r\n            conn.end()\r\n          })\r\n          sock.on('error', () => {\r\n            conn.end()\r\n          })\r\n          sock.on('finish', () => {\r\n            conn.end()\r\n          })\r\n        }).connect(conf)\r\n      }).catch((err) => {\r\n        let description = 'The following error occured when trying to open a tcp '\r\n        description += 'connection: '\r\n        description += `\\`${err}\\``\r\n        atom.notifications.addError(\"Error while connecting to remote Julia session.\", {\r\n          description: description,\r\n          dismissable: true\r\n        })\r\n        reject()\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\nfunction threadCount () {\r\n  let confnt = atom.config.get('julia-client.juliaOptions.numberOfThreads')\r\n  let confntInt = parseInt(confnt)\r\n  if (confntInt != 0 && isFinite(confntInt)) {\r\n    return confntInt\r\n  } else {\r\n    return undefined\r\n  }\r\n}\r\n\r\nfunction socket (stream) {\r\n  conn = tcp.next()\r\n  failure = new Promise((resolve, reject) => {\r\n    stream.on('close', (err) => {\r\n      conn.dispose()\r\n      reject(err)\r\n    })\r\n  })\r\n  return Promise.race([conn, failure])\r\n}\r\n","{paths} = require '../misc'\r\nmessages = require './messages'\r\nclient = require './client'\r\n\r\njunorc = client.import 'junorc', false\r\n\r\ncycler = require './process/cycler'\r\nssh = require './process/remote'\r\nbasic = require './process/basic'\r\n\r\nmodule.exports =\r\n  consumeGetServerConfig: (getconf) ->\r\n    ssh.consumeGetServerConfig(getconf)\r\n\r\n  consumeGetServerName: (name) ->\r\n    ssh.consumeGetServerName(name)\r\n\r\n  provider: (p) ->\r\n    bootMode = undefined\r\n    if p?\r\n      bootMode = p\r\n    else\r\n      bootMode = atom.config.get('julia-client.juliaOptions.bootMode')\r\n    switch bootMode\r\n      when 'Cycler' then cycler\r\n      when 'Remote' then ssh\r\n      when 'Basic'  then basic\r\n\r\n  activate: ->\r\n    if process.platform == 'win32'\r\n      process.env.JULIA_EDITOR = \"\\\"#{process.execPath}\\\" #{if atom.devMode then '-d' else ''} -a\"\r\n    else\r\n      process.env.JULIA_EDITOR = \"atom #{if atom.devMode then '-d' else ''} -a\"\r\n\r\n    paths.getVersion()\r\n      .then =>\r\n        @provider().start? paths.jlpath(), client.clargs()\r\n      .catch ->\r\n\r\n  monitor: (proc) ->\r\n    client.emitter.emit('boot', proc)\r\n    proc.ready = -> false\r\n    client.attach(proc)\r\n    return proc\r\n\r\n  connect: (proc, sock) ->\r\n    proc.message = (m) -> sock.write JSON.stringify m\r\n    client.readStream sock\r\n    sock.on 'end', ->\r\n      proc.kill()\r\n      client.detach()\r\n    sock.on 'error', ->\r\n      proc.kill()\r\n      client.detach()\r\n    proc.ready = -> true\r\n    client.flush()\r\n    proc\r\n\r\n  start: (provider) ->\r\n    [path, args] = [paths.jlpath(), client.clargs()]\r\n    check = paths.getVersion()\r\n\r\n    if provider is 'Remote'\r\n      check = Promise.resolve()\r\n    else\r\n      check.catch (err) =>\r\n        messages.jlNotFound paths.jlpath(), err\r\n\r\n    proc = check\r\n      .then => @spawnJulia(path, args, provider)\r\n      .then (proc) => @monitor(proc)\r\n\r\n    # set working directory here, so we queue this task before anything else\r\n    if provider is 'Remote'\r\n      ssh.withRemoteConfig((conf) -> junorc conf.remote).catch ->\r\n    else\r\n      paths.projectDir().then (dir) -> junorc dir\r\n\r\n    proc\r\n      .then (proc) =>\r\n        Promise.all [proc, proc.socket]\r\n      .then ([proc, sock]) =>\r\n        @connect proc, sock\r\n      .catch (e) ->\r\n        client.detach()\r\n        console.error(\"Julia exited with #{e}.\")\r\n    proc\r\n\r\n  spawnJulia: (path, args, provider) ->\r\n    @provider(provider).get(path, args)\r\n","{time} = require './misc'\r\nexternalTerminal = require './connection/terminal'\r\n\r\nmodule.exports =\r\n  IPC:      require './connection/ipc'\r\n  messages: require './connection/messages'\r\n  client:   require './connection/client'\r\n  local:    require './connection/local'\r\n  terminal: require './connection/terminal'\r\n\r\n  activate: ->\r\n    @messages.activate()\r\n    @client.activate()\r\n    @client.boot = => @boot()\r\n    @local.activate()\r\n    @booting = false\r\n\r\n  deactivate: ->\r\n    @client.deactivate()\r\n\r\n  consumeInk: (ink) ->\r\n    @IPC.consumeInk ink\r\n    @ink = ink\r\n\r\n  consumeGetServerConfig: (getconf) ->\r\n    @local.consumeGetServerConfig(getconf)\r\n\r\n  consumeGetServerName: (name) ->\r\n    @local.consumeGetServerName(name)\r\n\r\n  _boot: (provider) ->\r\n    if not @client.isActive() and not @booting\r\n      @booting = true\r\n      @client.setBootMode(provider)\r\n      if provider is 'External Terminal'\r\n        p = externalTerminal.connectedRepl()\r\n      else\r\n        p = @local.start(provider)\r\n\r\n      if @ink?\r\n        @ink.Opener.allowRemoteFiles(provider == 'Remote')\r\n      p.then =>\r\n        @booting = false\r\n      p.catch =>\r\n        @booting = false\r\n      time \"Julia Boot\", @client.import('ping')()\r\n\r\n  bootRemote: ->\r\n    @_boot('Remote')\r\n\r\n  boot: ->\r\n    @_boot(atom.config.get('julia-client.juliaOptions.bootMode'))\r\n","{terminal} = require '../connection'\r\n\r\nconfig =\r\n  juliaPath:\r\n    type: 'string'\r\n    default: 'julia'\r\n    description: 'The location of the Julia binary.'\r\n    order: 1\r\n\r\n  juliaOptions:\r\n    type: 'object'\r\n    order: 2\r\n    collapsed: true\r\n    properties:\r\n      bootMode:\r\n        title: 'Boot Mode'\r\n        type: 'string'\r\n        description: '`Basic` spins up a local Julia process on demand and is the most\r\n                      robust option. The `Cycler` will keep a few local Julia processes\r\n                      around at all times to reduce downtime when a process exits.\r\n                      `External Terminal` opens an external terminal and connects it to Juno,\r\n                      much like the `Julia Client: Connect Terminal` command.\r\n                      `Remote` is similar to the `Julia Client: Start Remote Julia Process`\r\n                      command but changes the default, so that evaluating a line\r\n                      in the editor or pressing `Enter` in the REPL tab will start\r\n                      a remote Julia process instead of a local one.'\r\n        enum: ['Basic', 'Cycler', 'External Terminal', 'Remote']\r\n        default: 'Basic'\r\n        radio: true\r\n        order: 1\r\n      optimisationLevel:\r\n        title: 'Optimisation Level'\r\n        description: 'Higher levels take longer to compile, but produce faster code.'\r\n        type: 'integer'\r\n        enum: [0, 1, 2, 3]\r\n        default: 2\r\n        radio: true\r\n        order: 2\r\n      deprecationWarnings:\r\n        title: 'Deprecation Warnings'\r\n        type: 'boolean'\r\n        description: 'If disabled, hides deprecation warnings.'\r\n        default: true\r\n        order: 3\r\n      numberOfThreads:\r\n        title: 'Number of Threads'\r\n        type: 'string'\r\n        description: '`global` will use global setting, `auto` sets it to number of cores.'\r\n        default: 'auto'\r\n        order: 4\r\n      startupArguments:\r\n        title: 'Additional Julia Startup Arguments'\r\n        type: 'array'\r\n        description: '`-i`, `-O`, and `--depwarn` will be set by the above options\r\n                      automatically, but can be overwritten here. Arguments are\r\n                      comma-separated, and you should never need to quote\r\n                      anything (even e.g. paths with spaces in them).'\r\n        default: []\r\n        items:\r\n          type: 'string'\r\n        order: 5\r\n      externalProcessPort:\r\n        title: 'Port for Communicating with the Julia Process'\r\n        type: 'string'\r\n        description: '`random` will use a new port each time, or enter an integer to set the port statically.'\r\n        default: 'random'\r\n        order: 6\r\n      arguments:\r\n        title: 'Arguments'\r\n        type: 'array'\r\n        description: 'Set `ARGS` to the following entries (comma-separated). Requires restart of Julia process.'\r\n        default: []\r\n        items:\r\n          type: 'string'\r\n        order: 7\r\n      persistWorkingDir:\r\n        title: 'Persist Working Directory'\r\n        type: 'boolean'\r\n        default: false\r\n        order: 8\r\n      workingDir:\r\n        title: 'Working Directory'\r\n        type: 'string'\r\n        default: ''\r\n        order: 9\r\n      fuzzyCompletionMode:\r\n        title: 'Fuzzy Completion Mode'\r\n        description:\r\n          '''\r\n          If `true`, in-editor auto-completions are generated based on fuzzy (i.e. more permissive) matches,\r\n          otherwise based on strict matches as in REPL.\r\n          ***NOTE***: this setting doesn't affect completions in REPL,\r\n          and so in-REPL completions will still work as usual (i.e. based on strict matches and will complete eagerly).\r\n          '''\r\n        type: 'boolean'\r\n        default: true\r\n        order: 10\r\n      autoCompletionSuggestionPriority:\r\n        title: 'Auto-Completion Suggestion Priority'\r\n        description:\r\n          '''\r\n          Specify the sort order of auto-completion suggestions provided by Juno.\r\n          Note the default providers like snippets have priority of `1`.\r\n          Requires Atom restart to take an effect.\r\n          '''\r\n        type: 'integer'\r\n        default: 3\r\n        order: 11\r\n      noAutoParenthesis:\r\n        title: 'Don\\'t Insert Parenthesis on Function Auto-completion'\r\n        description: 'If enabled, Juno will not insert parenthesis after completing a function.'\r\n        type: 'boolean'\r\n        default: false\r\n        order: 12\r\n      formatOnSave:\r\n        title: 'Format the current editor when saving'\r\n        description: 'If enabled, Juno will format the current editor on save if a Julia session is running.'\r\n        type: 'boolean'\r\n        default: false\r\n        order: 13\r\n      formattingOptions:\r\n        title: 'Formatting Options'\r\n        description:\r\n          '''\r\n          ⚠ This config is deprecated. In order to specify\r\n          [Formatting Options](https://domluna.github.io/JuliaFormatter.jl/dev/#Formatting-Options-1),\r\n          use `.JuliaFormatter.toml` configuration file instead.\r\n          See the [\"Configuration File\" section](https://domluna.github.io/JuliaFormatter.jl/stable/config/)\r\n          in JuliaFormatter.jl's documentation for more details.\r\n          '''\r\n        type: 'object'\r\n        order: 14\r\n        collapsed: true\r\n        properties:\r\n          mock: # NOTE: otherwise the deprecated description doesn't show up\r\n            title: \"mock (doesn't have any effect)\"\r\n            type: 'boolean'\r\n            default: false\r\n\r\n  uiOptions:\r\n    title: 'UI Options'\r\n    type: 'object'\r\n    order: 3\r\n    collapsed: true\r\n    properties:\r\n      resultsDisplayMode:\r\n        title: 'Result Display Mode'\r\n        type: 'string'\r\n        default: 'inline'\r\n        enum: [\r\n          {value:'inline', description:'Float results next to code'}\r\n          {value:'block', description:'Display results under code'}\r\n          {value:'console', description:'Display results in the REPL'}\r\n        ]\r\n        order: 1\r\n      scrollToResult:\r\n        title: 'Scroll to Inline Results'\r\n        type: 'boolean'\r\n        default: false\r\n        order: 2\r\n      docsDisplayMode:\r\n        title: 'Documentation Display Mode'\r\n        type: 'string'\r\n        default: 'pane'\r\n        enum: [\r\n          {value: 'inline', description: 'Show documentation in the editor'}\r\n          {value: 'pane', description: 'Show documentation in the documentation pane'}\r\n        ]\r\n        order: 3\r\n      errorNotifications:\r\n        title: 'Error Notifications'\r\n        type: 'boolean'\r\n        default: true\r\n        description: 'When evaluating a script, show errors in a notification as\r\n                      well as in the REPL.'\r\n        order: 4\r\n      errorInRepl:\r\n        title: 'Show Errors in REPL (Inline Evaluation)'\r\n        type: 'boolean'\r\n        default: false\r\n        description: 'If enabled, Juno always shows errors in the REPL when using inline evaluation.'\r\n        order: 5\r\n      enableMenu:\r\n        title: 'Enable Menu'\r\n        type: 'boolean'\r\n        default: false\r\n        description: 'Show a Julia menu in the menu bar (requires restart).'\r\n        order: 6\r\n      enableToolBar:\r\n        title: 'Enable Toolbar'\r\n        type: 'boolean'\r\n        default: false\r\n        description: 'Show Julia icons in the tool bar (requires restart).'\r\n        order: 7\r\n      usePlotPane:\r\n        title: 'Enable Plot Pane'\r\n        type: 'boolean'\r\n        default: true\r\n        description: 'Show plots in Atom.'\r\n        order: 8\r\n      maxNumberPlots:\r\n        title: 'Maximum Number of Plots in History'\r\n        type: 'number'\r\n        default: 50\r\n        description: 'Increasing this number may lead to high memory consumption and poor performance.'\r\n        order: 9\r\n      openNewEditorWhenDebugging:\r\n        title: 'Open New Editor When Debugging'\r\n        type: 'boolean'\r\n        default: false\r\n        description: 'Opens a new editor tab when stepping into a new file instead\r\n                      of reusing the current one (requires restart).'\r\n        order: 10\r\n      cellDelimiter:\r\n        title: 'Cell Delimiter'\r\n        type: 'array'\r\n        default: ['##\\\\s', '#---', '#\\\\s?%%']\r\n        description: 'Regular expressions for determining cell delimiters.'\r\n        order: 11\r\n      highlightCells:\r\n        title: 'Highlight Cells'\r\n        type: 'boolean'\r\n        description: 'Customize the appearence of Juno\\'s cell highlighting by\r\n                      adding styles for `.line.julia-current-cell` or\r\n                      `.line-number.julia-current-cell` to your personal\r\n                      stylesheet.'\r\n        default: true\r\n        order: 12\r\n      layouts:\r\n        title: 'Layout Options'\r\n        type: 'object'\r\n        order: 13\r\n        collapsed: true\r\n        properties:\r\n          console:\r\n            title: 'REPL'\r\n            type: 'object'\r\n            order: 1\r\n            collapsed: true\r\n            properties:\r\n              defaultLocation:\r\n                title: 'Default location of REPL Pane'\r\n                type: 'string'\r\n                enum: ['center', 'left', 'bottom', 'right']\r\n                default: 'bottom'\r\n                radio: true\r\n                order: 1\r\n              split:\r\n                title: 'Splitting rule of REPL Pane'\r\n                type: 'string'\r\n                enum: ['no split', 'left', 'up', 'right', 'down']\r\n                default: 'no split'\r\n                radio: true\r\n                order: 2\r\n          terminal:\r\n            title: 'Terminal'\r\n            type: 'object'\r\n            order: 2\r\n            collapsed: true\r\n            properties:\r\n              defaultLocation:\r\n                title: 'Default location of Terminal Pane'\r\n                type: 'string'\r\n                enum: ['center', 'left', 'bottom', 'right']\r\n                default: 'bottom'\r\n                radio: true\r\n                order: 1\r\n              split:\r\n                title: 'Splitting rule of Terminal Pane'\r\n                type: 'string'\r\n                enum: ['no split', 'left', 'up', 'right', 'down']\r\n                default: 'no split'\r\n                radio: true\r\n                order: 2\r\n          workspace:\r\n            title: 'Workspace'\r\n            type: 'object'\r\n            order: 3\r\n            collapsed: true\r\n            properties:\r\n              defaultLocation:\r\n                title: 'Default location of Workspace Pane'\r\n                type: 'string'\r\n                enum: ['center', 'left', 'bottom', 'right']\r\n                default: 'center'\r\n                radio: true\r\n                order: 1\r\n              split:\r\n                title: 'Splitting rule of Workspace Pane'\r\n                type: 'string'\r\n                enum: ['no split', 'left', 'up', 'right', 'down']\r\n                default: 'right'\r\n                radio: true\r\n                order: 2\r\n          documentation:\r\n            title: 'Documentation Browser'\r\n            type: 'object'\r\n            order: 4\r\n            collapsed: true\r\n            properties:\r\n              defaultLocation:\r\n                title: 'Default location of Documentation Browser Pane'\r\n                type: 'string'\r\n                enum: ['center', 'left', 'bottom', 'right']\r\n                default: 'center'\r\n                radio: true\r\n                order: 1\r\n              split:\r\n                title: 'Splitting rule of Documentation Browser Pane'\r\n                type: 'string'\r\n                enum: ['no split', 'left', 'up', 'right', 'down']\r\n                default: 'right'\r\n                radio: true\r\n                order: 2\r\n          plotPane:\r\n            title: 'Plot Pane'\r\n            type: 'object'\r\n            order: 5\r\n            collapsed: true\r\n            properties:\r\n              defaultLocation:\r\n                title: 'Default location of Plot Pane'\r\n                type: 'string'\r\n                enum: ['center', 'left', 'bottom', 'right']\r\n                default: 'center'\r\n                radio: true\r\n                order: 1\r\n              split:\r\n                title: 'Splitting rule of Plot Pane'\r\n                type: 'string'\r\n                enum: ['no split', 'left', 'up', 'right', 'down']\r\n                default: 'right'\r\n                radio: true\r\n                order: 2\r\n          debuggerPane:\r\n            title: 'Debugger Pane'\r\n            type: 'object'\r\n            order: 6\r\n            collapsed: true\r\n            properties:\r\n              defaultLocation:\r\n                title: 'Default location of Debugger Pane'\r\n                type: 'string'\r\n                enum: ['center', 'left', 'bottom', 'right']\r\n                default: 'right'\r\n                radio: true\r\n                order: 1\r\n              split:\r\n                title: 'Splitting rule of Debugger Pane'\r\n                type: 'string'\r\n                enum: ['no split', 'left', 'up', 'right', 'down']\r\n                default: 'no split'\r\n                radio: true\r\n                order: 2\r\n          profiler:\r\n            title: 'Profiler'\r\n            type: 'object'\r\n            order: 7\r\n            collapsed: true\r\n            properties:\r\n              defaultLocation:\r\n                title: 'Default location of Profiler Pane'\r\n                type: 'string'\r\n                enum: ['center', 'left', 'bottom', 'right']\r\n                default: 'center'\r\n                radio: true\r\n                order: 1\r\n              split:\r\n                title: 'Splitting rule of Profiler Pane'\r\n                type: 'string'\r\n                enum: ['no split', 'left', 'up', 'right', 'down']\r\n                default: 'right'\r\n                radio: true\r\n                order: 2\r\n          linter:\r\n            title: 'Linter'\r\n            type: 'object'\r\n            order: 8\r\n            collapsed: true\r\n            properties:\r\n              defaultLocation:\r\n                title: 'Default location of Linter Pane'\r\n                type: 'string'\r\n                enum: ['center', 'left', 'bottom', 'right']\r\n                default: 'bottom'\r\n                radio: true\r\n                order: 1\r\n              split:\r\n                title: 'Splitting rule of Linter Pane'\r\n                type: 'string'\r\n                enum: ['no split', 'left', 'up', 'right', 'down']\r\n                default: 'no split'\r\n                radio: true\r\n                order: 2\r\n          outline:\r\n            title: 'Outline'\r\n            type: 'object'\r\n            order: 9\r\n            collapsed: true\r\n            properties:\r\n              defaultLocation:\r\n                title: 'Default location of Outline Pane'\r\n                type: 'string'\r\n                enum: ['center', 'left', 'bottom', 'right']\r\n                default: 'left'\r\n                radio: true\r\n                order: 1\r\n              split:\r\n                title: 'Splitting rule of Outline Pane'\r\n                type: 'string'\r\n                enum: ['no split', 'left', 'up', 'right', 'down']\r\n                default: 'down'\r\n                radio: true\r\n                order: 2\r\n          defaultPanes:\r\n            title: 'Default Panes'\r\n            description: 'Specify panes that are opened by `Julia Client: Restore Default Layout`.\r\n                          The location and splitting rule of each pane follow the settings above.'\r\n            type: 'object'\r\n            order: 10\r\n            properties:\r\n              console:\r\n                title: 'REPL'\r\n                type: 'boolean'\r\n                default: true\r\n                order: 1\r\n              workspace:\r\n                title: 'Workspace'\r\n                type: 'boolean'\r\n                default: true\r\n                order: 2\r\n              documentation:\r\n                title: 'Documentation Browser'\r\n                type: 'boolean'\r\n                default: true\r\n                order: 3\r\n              plotPane:\r\n                title: 'Plot Pane'\r\n                type: 'boolean'\r\n                default: true\r\n                order: 4\r\n              debuggerPane:\r\n                title: 'Debugger Pane'\r\n                type: 'boolean'\r\n                default: false\r\n                order: 5\r\n              linter:\r\n                title: 'Linter'\r\n                type: 'boolean'\r\n                default: false\r\n                order: 6\r\n              outline:\r\n                title: 'Outline'\r\n                type: 'boolean'\r\n                default: false\r\n                order: 7\r\n          openDefaultPanesOnStartUp:\r\n            title: 'Open Default Panes on Startup'\r\n            description: 'If enabled, opens panes specified above on startup.\r\n                          Note a layout deserialized from a previous window state\r\n                          would be modified by that, i.e.: disable this if you want\r\n                          to keep the deserialized layout.'\r\n            type: 'boolean'\r\n            default: true\r\n            order: 11\r\n\r\n  consoleOptions:\r\n    type: 'object'\r\n    title: 'Terminal Options'\r\n    order: 4\r\n    collapsed: true\r\n    properties:\r\n      maximumConsoleSize:\r\n        title: 'Scrollback Buffer Size'\r\n        type: 'integer'\r\n        default: 10000\r\n        order: 1\r\n      prompt:\r\n        title: 'Terminal Prompt'\r\n        type: 'string'\r\n        default: 'julia>'\r\n        order: 2\r\n      shell:\r\n        title: 'Shell'\r\n        type: 'string'\r\n        default: terminal.defaultShell()\r\n        description: 'The location of an executable shell. Set to `$SHELL` by default,\r\n                      and if `$SHELL` isn\\'t set then fallback to `bash` or `powershell.exe` (on Windows).'\r\n        order: 3\r\n      terminal:\r\n        title: 'Terminal'\r\n        type: 'string'\r\n        default: terminal.defaultTerminal()\r\n        description: 'Command used to open an external terminal.'\r\n        order: 4\r\n      whitelistedKeybindingsREPL:\r\n        title: 'Whitelisted Keybindings for the Julia REPL'\r\n        type: 'array'\r\n        default: ['Ctrl-C', 'F5', 'F8', 'F9', 'F10', 'F11', 'Shift-F5', 'Shift-F8', 'Shift-F9', 'Shift-F10', 'Shift-F11']\r\n        description: 'The listed keybindings are not handled by the REPL and instead directly passed to Atom.'\r\n        order: 5\r\n      whitelistedKeybindingsTerminal:\r\n        title: 'Whitelisted Keybindings for Terminals'\r\n        type: 'array'\r\n        default: []\r\n        description: 'The listed keybindings are not handled by any terminals and instead directly passed to Atom.'\r\n        order: 6\r\n      cursorStyle:\r\n        title: 'Cursor Style'\r\n        type: 'string'\r\n        enum: ['block', 'underline', 'bar']\r\n        default: 'block'\r\n        radio: true\r\n        order: 7\r\n      cursorBlink:\r\n        title: 'Cursor Blink'\r\n        type: 'boolean'\r\n        default: false\r\n        order: 8\r\n      terminalRendererType:\r\n        title: 'Terminal Renderer'\r\n        type: 'string'\r\n        enum: ['webgl', 'canvas', 'dom']\r\n        default: 'webgl'\r\n        radio: true\r\n        description: 'The `webgl` renderer is fastest, but is still experimental. `canvas` performs well\r\n                      in many cases, while `dom` is a slow falback. Note that it\\'s not possible\r\n                      to hot-swap to the `webgl` renderer.'\r\n        order: 9\r\n      linkModifier:\r\n        title: 'Ctrl/Cmd modifier for link activation'\r\n        type: 'boolean'\r\n        default: true\r\n        order: 10\r\n\r\n  remoteOptions:\r\n    type: 'object'\r\n    order: 5\r\n    collapsed: true\r\n    properties:\r\n      remoteJulia:\r\n        title: 'Command to execute Julia on the remote server'\r\n        type: 'string'\r\n        default: 'julia'\r\n        order: 1\r\n      tmux:\r\n        title: 'Use a persistent tmux session'\r\n        description: 'Requires tmux to be installed on the server you\\'re connecting to.'\r\n        type: 'boolean'\r\n        default: false\r\n        order: 2\r\n      tmuxName:\r\n        title: 'tmux session name'\r\n        type: 'string'\r\n        default: 'juno_tmux_session'\r\n        order: 3\r\n      agentAuth:\r\n        title: 'Use SSH agent'\r\n        description: 'Requires `$SSH_AUTH_SOCKET` to be set. Defaults to putty\\'s pageant on Windows.'\r\n        type: 'boolean'\r\n        default: true\r\n        order: 4\r\n      forwardAgent:\r\n        title: 'Forward SSH agent'\r\n        type: 'boolean'\r\n        default: true\r\n        order: 5\r\n\r\n  juliaSyntaxScopes:\r\n    title: 'Julia Syntax Scopes'\r\n    description:\r\n      'The listed syntax scopes (comma separated) will be recoginized as Julia files.\r\n       You may have to restart Atom to take an effect.\\n\r\n       **DO NOT** edit this unless you\\'re sure about the effect.'\r\n    type: 'array'\r\n    default: ['source.julia', 'source.weave.md', 'source.weave.latex']\r\n    order: 6\r\n\r\n  disableProxy:\r\n    title: 'Disable System Proxy for Child Processes'\r\n    description:\r\n      'This unsets the `HTTP_PROXY` and `HTTPS_PROXY` environment variables in all integrated\r\n       terminals. Try this option if you\\'re experiencing issues when installing Julia packages\r\n       in Juno.'\r\n    type: 'boolean'\r\n    default: false\r\n    order: 7\r\n\r\n  firstBoot:\r\n    type: 'boolean'\r\n    default: true\r\n    order: 99\r\n\r\nif process.platform != 'darwin'\r\n  config.consoleOptions.properties.whitelistedKeybindingsREPL.default =\r\n    ['Ctrl-C', 'Ctrl-J', 'Ctrl-K', 'Ctrl-E', 'Ctrl-V', 'Ctrl-M', 'F5', 'F8', 'F9',\r\n     'F10', 'F11', 'Shift-F5', 'Shift-F8', 'Shift-F9', 'Shift-F10', 'Shift-F11']\r\n\r\nif process.platform == 'darwin'\r\n  config.consoleOptions.properties.macOptionIsMeta =\r\n    title: 'Use Option as Meta'\r\n    type: 'boolean'\r\n    default: false\r\n    order: 5.5\r\n\r\nmodule.exports = config\r\n","{CompositeDisposable} = require 'atom'\r\n\r\nmodule.exports =\r\n  activate: ->\r\n    @subs = new CompositeDisposable\r\n    # Package submenu\r\n    @subs.add atom.menu.add [{\r\n      label: 'Packages',\r\n      submenu: @menu\r\n    }]\r\n\r\n    # App Menu\r\n    if atom.config.get 'julia-client.uiOptions.enableMenu'\r\n      @subs.add = atom.menu.add @menu\r\n      # TODO: find a less hacky way to do this\r\n      menu = atom.menu.template.pop()\r\n      atom.menu.template.splice 3, 0, menu\r\n\r\n  deactivate: ->\r\n    @subs.dispose()\r\n\r\n  menu: [{\r\n    label: 'Juno'\r\n    submenu: [\r\n      {label: 'Start Julia', command: 'julia-client:start-julia'}\r\n      {label: 'Start Remote Julia Process', command: 'julia-client:start-remote-julia-process'}\r\n      {label: 'Interrupt Julia', command: 'julia-client:interrupt-julia'}\r\n      {label: 'Stop Julia', command: 'julia-client:kill-julia'}\r\n\r\n      {type: 'separator'}\r\n\r\n      {label: 'Open REPL', command: 'julia-client:open-REPL'}\r\n      {label: 'Clear REPL', command: 'julia-client:clear-REPL'}\r\n      {label: 'Open External REPL', command: 'julia-client:open-external-REPL'}\r\n      {\r\n        label: 'Working Directory'\r\n        submenu: [\r\n          {label: 'Current File\\'s Folder', command: 'julia-client:work-in-current-folder'}\r\n          {label: 'Select Project Folder', command: 'julia-client:work-in-project-folder'}\r\n          {label: 'Home Folder', command: 'julia-client:work-in-home-folder'}\r\n          {label: 'Select...', command: 'julia-client:select-working-folder'}\r\n        ]\r\n      }\r\n      {\r\n        label: 'Environment',\r\n        submenu: [\r\n          {label: 'Environment in Current File\\'s Folder', command: 'julia-client:activate-environment-in-current-folder'}\r\n          {label: 'Environment in Parent Folder', command: 'julia-client:activate-environment-in-parent-folder'}\r\n          {label: 'Default Environment', command: 'julia-client:activate-default-environment'}\r\n        ]\r\n      }\r\n      {label: 'Set Working Module', command: 'julia-client:set-working-module'}\r\n\r\n      {type: 'separator'}\r\n\r\n      {label: 'Run Block', command: 'julia-client:run-block'}\r\n      {label: 'Run All', command: 'julia-client:run-all'}\r\n\r\n      {type: 'separator'}\r\n\r\n      {label: 'Format Code', command: 'julia-client:format-code'}\r\n\r\n      {type: 'separator'}\r\n\r\n      {label: 'Debug: Run Block', command: 'julia-debug:run-block'}\r\n      {label: 'Debug: Step through Block', command: 'julia-debug:step-through-block'}\r\n      {label: 'Debug: Run File', command: 'julia-debug:run-file'}\r\n      {label: 'Debug: Step through File', command: 'julia-debug:step-through-file'}\r\n\r\n      {type: 'separator'}\r\n\r\n      {label: 'Open Workspace', command: 'julia-client:open-workspace'}\r\n      {label: 'Open Outline Pane', command: 'julia-client:open-outline-pane'}\r\n      {label: 'Open Documentation Browser', command: 'julia-client:open-documentation-browser'}\r\n      {label: 'Open Plot Pane', command: 'julia-client:open-plot-pane'}\r\n      {label: 'Open Debugger Pane', command: 'julia-debug:open-debugger-pane'}\r\n\r\n      {type: 'separator'}\r\n\r\n      {label: 'Open New Julia File', command: 'julia:new-julia-file'}\r\n      {label: 'Open Julia Startup File', command: 'julia:open-julia-startup-file'}\r\n      {label: 'Open Juno Startup File', command: 'julia:open-juno-startup-file'}\r\n      {label: 'Open Julia Home', command: 'julia:open-julia-home'}\r\n      {label: 'Open Package in New Window...', command: 'julia:open-package-in-new-window'}\r\n      {label: 'Open Package as Project Folder...', command: 'julia:open-package-as-project-folder'}\r\n\r\n      {type: 'separator'}\r\n\r\n      {\r\n        label: 'New Terminal'\r\n        submenu: [\r\n          {label: 'Current File\\'s Folder', command: 'julia-client:new-terminal-from-current-folder'}\r\n          {label: 'Select Project Folder', command: 'julia-client:new-terminal'}\r\n        ]\r\n      }\r\n      {label: 'New Remote Terminal', command: 'julia-client:new-remote-terminal'}\r\n\r\n      {type: 'separator'}\r\n\r\n      {label: 'Debug Information', command: 'julia-client:debug-info'}\r\n      {label: 'Help...', command: 'julia:get-help'}\r\n      {label: 'Settings...', command: 'julia-client:settings'}\r\n    ]\r\n  }]\r\n","\r\n\r\nlet validSchemes = require('../package/config')\r\nlet invalidSchemes = []  // Keeps invalid config schemes to be notified to users\r\n\r\nfunction dispose() {\r\n  validSchemes = null\r\n  invalidSchemes = null\r\n}\r\n\r\n/**\r\n * Updates settings by removing deprecated (i.e.: not used anymore) configs so that no one tries to\r\n * tweak them.\r\n */\r\nexport function updateSettings() {\r\n  const currentConfig = atom.config.get('julia-client')\r\n  searchForDeprecated(currentConfig, [])\r\n\r\n  if (invalidSchemes.length > 0) {\r\n    const message = atom.notifications.addWarning('Julia-Client: Invalid (deprecated) settings found', {\r\n      detail: invalidSchemes.join('\\n'),\r\n      dismissable: true,\r\n      description: 'Remove these invalid settings ?',\r\n      buttons: [\r\n        {\r\n          text: 'Yes',\r\n          onDidClick: () => {\r\n            message.dismiss()\r\n            invalidSchemes.forEach((invalidScheme) => {\r\n              atom.config.unset(invalidScheme)\r\n            })\r\n            dispose()\r\n          }\r\n        },\r\n        {\r\n          text: 'No',\r\n          onDidClick: () => {\r\n            message.dismiss()\r\n            dispose()\r\n          }\r\n        }\r\n      ]\r\n    })\r\n  }\r\n}\r\n\r\n/**\r\n * Recursively search deprecated configs\r\n */\r\nfunction searchForDeprecated(config, currentSchemes) {\r\n  Object.entries(config).forEach(([key, value]) => {\r\n    // @NOTE: Traverse the current config schemes by post-order in order to push all the invalid\r\n    // config schemes into `invalidSchemes`\r\n    if (Object.prototype.toString.call(value) === '[object Object]') {\r\n      const nextSchemes = currentSchemes.slice(0)\r\n      nextSchemes.push(key)\r\n      searchForDeprecated(value, nextSchemes)\r\n    }\r\n\r\n    // Make `validScheme` corresponding to `currentSchemes` path for the validity checking below\r\n    let validScheme = validSchemes\r\n    currentSchemes.forEach((scheme) => {\r\n      Object.entries(validScheme).forEach(([_key, _value]) => {\r\n        if (_key === scheme) {\r\n          validScheme = _value\r\n        } else if (_key === 'properties' && _value[scheme]) {\r\n          validScheme = _value[scheme]\r\n        }\r\n      })\r\n    });\r\n\r\n    // Check if the `config` scheme being searched at this recursion is in `validScheme`\r\n    if (!validScheme[key] && (!validScheme.properties || !validScheme.properties[key])) {\r\n      let invalidScheme = 'julia-client.'\r\n      invalidScheme += currentSchemes.length === 0 ? '' : `${currentSchemes.join('.')}.`\r\n      invalidScheme += key\r\n      invalidSchemes.push(invalidScheme)\r\n    }\r\n  });\r\n}\r\n","/** @babel */\r\n\r\nimport SelectList from 'atom-select-list'\r\n\r\n/**\r\n * @type {SelectList}\r\n */\r\nlet selector\r\nlet panel, ink\r\n\r\nexport function activate (_ink) {\r\n  ink = _ink\r\n  selector = new SelectList({\r\n    items: [],\r\n    elementForItem\r\n  })\r\n  selector.element.classList.add('command-palette', 'julia-client-selector')\r\n  panel = atom.workspace.addModalPanel({ item: selector.element })\r\n}\r\n\r\nfunction elementForItem (item, { selected }) {\r\n  const view = document.createElement('li')\r\n  if (selected) view.classList.add('active')\r\n  const name = (item.primary) ? item.primary.toString() : item.toString()\r\n  const primary = ink.matchHighlighter.highlightMatches(name, selector.getFilterQuery())\r\n  view.appendChild(primary)\r\n  if (item.secondary) {\r\n    const secondary = document.createElement('div')\r\n    secondary.classList.add('secondary-line', 'path')\r\n    secondary.innerText = item.secondary\r\n    view.classList.add('two-lines')\r\n    primary.classList.add('primary-line')\r\n    view.append(secondary)\r\n  }\r\n  return view\r\n}\r\n\r\nexport function show (items, { active, emptyMessage, errorMessage, infoMessage, allowCustom } = {}) {\r\n  selector.update({\r\n    items: [],\r\n    query: '',\r\n    loadingMessage: 'Loading ...',\r\n  })\r\n  const lastFocusedPane = atom.workspace.getActivePane()\r\n  panel.show()\r\n  selector.focus()\r\n  let confirmed = false\r\n  return new Promise((resolve, reject) => {\r\n    // HACK:\r\n    // we can't pass those callback functions to `update` while atom-select-list's document says they can be ...\r\n    selector.props.didConfirmSelection = (item) => {\r\n      confirmed = true\r\n      selector.cancelSelection()\r\n      resolve(item)\r\n    }\r\n    selector.props.didConfirmEmptySelection = () => {\r\n      confirmed = true\r\n      selector.cancelSelection()\r\n      const query = selector.getQuery()\r\n      if (allowCustom && query.length > 0) {\r\n        resolve(query)\r\n      } else {\r\n        resolve()\r\n      }\r\n    }\r\n    selector.props.didCancelSelection = () => {\r\n      panel.hide()\r\n      lastFocusedPane.activate()\r\n      const query = selector.getQuery()\r\n      if (!confirmed) {\r\n        if (allowCustom && query.length > 0) {\r\n          resolve(query)\r\n        } else {\r\n          resolve()\r\n        }\r\n      }\r\n    }\r\n    selector.props.filterKeyForItem = (items.length > 0 && items[0] instanceof Object) ?\r\n      item => item.primary : item => item\r\n    if (items.constructor == Promise) {\r\n      items.then(items => {\r\n        selector.update({\r\n          items,\r\n          emptyMessage,\r\n          errorMessage,\r\n          infoMessage,\r\n          loadingMessage: ''\r\n        })\r\n        if (active) {\r\n          const index = (active instanceof Number) ? active :\r\n            (active instanceof Function) ? items.findIndex(active) :\r\n            items.findIndex(item => item == active)\r\n          selector.selectIndex(index)\r\n        }\r\n      }).catch(err => {\r\n        reject(err)\r\n        selector.cancelSelection()\r\n      })\r\n    } else {\r\n      selector.update({\r\n        items,\r\n        emptyMessage,\r\n        errorMessage,\r\n        infoMessage,\r\n        loadingMessage: ''\r\n      })\r\n      if (active) {\r\n        const index = (active instanceof Number) ? active :\r\n          (active instanceof Function) ? items.findIndex(active) :\r\n          items.findIndex(item => item == active)\r\n        selector.selectIndex(index)\r\n      }\r\n    }\r\n  })\r\n}\r\n","module.exports =\r\n  consumeToolBar: (bar) ->\r\n    return unless atom.config.get 'julia-client.uiOptions.enableToolBar'\r\n\r\n    @bar = bar 'julia-client'\r\n\r\n    # Files & Folders\r\n\r\n    @bar.addButton\r\n      icon: 'file-code'\r\n      iconset: 'fa'\r\n      tooltip: 'New Julia File'\r\n      callback: 'julia:new-julia-file'\r\n\r\n    @bar.addButton\r\n      icon: 'save'\r\n      iconset: 'fa'\r\n      tooltip: 'Save'\r\n      callback: 'core:save'\r\n\r\n    @bar.addButton\r\n      icon: 'folder-open'\r\n      iconset: 'fa'\r\n      tooltip: 'Open File...'\r\n      callback: 'application:open-file'\r\n\r\n    # Julia process\r\n\r\n    @bar.addSpacer()\r\n\r\n    @bar.addButton\r\n      icon: 'globe'\r\n      tooltip: 'Start Local Julia Process'\r\n      callback: 'julia-client:start-julia'\r\n\r\n    @bar.addButton\r\n      iconset: 'ion'\r\n      icon: 'md-planet'\r\n      tooltip: 'Start Remote Julia Process'\r\n      callback: 'julia-client:start-remote-julia-process'\r\n\r\n    @bar.addButton\r\n      icon: 'md-pause'\r\n      iconset: 'ion'\r\n      tooltip: 'Interrupt Julia'\r\n      callback: 'julia-client:interrupt-julia'\r\n\r\n    @bar.addButton\r\n      icon: 'md-square'\r\n      iconset: 'ion'\r\n      tooltip: 'Stop Julia'\r\n      callback: 'julia-client:kill-julia'\r\n\r\n    # Evaluation\r\n\r\n    @bar.addSpacer()\r\n\r\n    @bar.addButton\r\n      icon: 'zap'\r\n      tooltip: 'Run Block'\r\n      callback: 'julia-client:run-and-move'\r\n\r\n    @bar.addButton\r\n      icon: 'md-play'\r\n      iconset: 'ion'\r\n      tooltip: 'Run All'\r\n      callback: 'julia-client:run-all'\r\n\r\n    @bar.addButton\r\n      icon: 'format-float-none'\r\n      iconset: 'mdi'\r\n      tooltip: 'Format Code'\r\n      callback: 'julia-client:format-code'\r\n\r\n    # Windows & Panes\r\n\r\n    @bar.addSpacer()\r\n\r\n    @bar.addButton\r\n      icon: 'terminal'\r\n      tooltip: 'Show REPL'\r\n      callback: 'julia-client:open-REPL'\r\n\r\n    @bar.addButton\r\n      icon: 'book'\r\n      tooltip: 'Show Workspace'\r\n      callback: 'julia-client:open-workspace'\r\n\r\n    @bar.addButton\r\n      icon: 'list-unordered'\r\n      tooltip: 'Show Outline'\r\n      callback: 'julia-client:open-outline-pane'\r\n\r\n    @bar.addButton\r\n      icon: 'info'\r\n      tooltip: 'Show Documentation Browser'\r\n      callback: 'julia-client:open-documentation-browser'\r\n\r\n    @bar.addButton\r\n      icon: 'graph'\r\n      tooltip: 'Show Plot Pane'\r\n      callback: 'julia-client:open-plot-pane'\r\n\r\n    @bar.addButton\r\n      icon: 'bug'\r\n      tooltip: 'Show Debugger Pane'\r\n      callback: 'julia-debug:open-debugger-pane'\r\n\r\n  deactivate: ->\r\n    @bar?.removeItems()\r\n","remote = require 'remote'\r\n\r\nmodule.exports =\r\n  # notes: []\r\n  # window: remote.getCurrentWindow()\r\n\r\n  activate: ->\r\n    # document.addEventListener 'focusin', =>\r\n    #   @clear()\r\n\r\n  enabled: -> atom.config.get('julia-client.uiOptions.notifications')\r\n\r\n  show: (msg, force) ->\r\n    # return unless force or (@enabled() and not document.hasFocus())\r\n    # n = new Notification \"Julia Client\",\r\n    #   body: msg\r\n    # n.onclick = =>\r\n    #   @window.focus()\r\n    # @notes.push(n)\r\n\r\n  # clear: ->\r\n  #   for note in @notes\r\n  #     note.close()\r\n  #   @notes = []\r\n","_ = require 'underscore-plus'\r\n\r\n# Implementation identical to https://github.com/atom/highlights/blob/master/src/highlights.coffee,\r\n# but uses an externally provided grammar.\r\nmodule.exports =\r\n  # Highlights some `text` according to the specified `grammar`.\r\n  highlight: (text, grammar, {scopePrefix, block}={}) ->\r\n    scopePrefix ?= ''\r\n    block ?= false\r\n    lineTokens = grammar.tokenizeLines(text)\r\n\r\n    # Remove trailing newline\r\n    if lineTokens.length > 0\r\n      lastLineTokens = lineTokens[lineTokens.length - 1]\r\n\r\n      if lastLineTokens.length is 1 and lastLineTokens[0].value is ''\r\n        lineTokens.pop()\r\n\r\n    html = '<code class=\"editor editor-colors\">'\r\n    for tokens in lineTokens\r\n      scopeStack = []\r\n      html += \"<#{if block then \"div\" else \"span\"} class=\\\"line\\\">\"\r\n      for {value, scopes} in tokens\r\n        value = ' ' unless value\r\n        html = @updateScopeStack(scopeStack, scopes, html, scopePrefix)\r\n        html += \"<span>#{@escapeString(value)}</span>\"\r\n      html = @popScope(scopeStack, html) while scopeStack.length > 0\r\n      html += \"</#{if block then \"div\" else \"span\"}>\"\r\n    html += '</code>'\r\n    html\r\n\r\n  escapeString: (string) ->\r\n    string.replace /[&\"'<> ]/g, (match) ->\r\n      switch match\r\n        when '&' then '&amp;'\r\n        when '\"' then '&quot;'\r\n        when \"'\" then '&#39;'\r\n        when '<' then '&lt;'\r\n        when '>' then '&gt;'\r\n        when ' ' then '&nbsp;'\r\n        else match\r\n\r\n  updateScopeStack: (scopeStack, desiredScopes, html, scopePrefix) ->\r\n    excessScopes = scopeStack.length - desiredScopes.length\r\n    if excessScopes > 0\r\n      html = @popScope(scopeStack, html) while excessScopes--\r\n\r\n    # pop until common prefix\r\n    for i in [scopeStack.length..0]\r\n      break if _.isEqual(scopeStack[0...i], desiredScopes[0...i])\r\n      html = @popScope(scopeStack, html)\r\n\r\n    # push on top of common prefix until scopeStack is desiredScopes\r\n    for j in [i...desiredScopes.length]\r\n      html = @pushScope(scopeStack, desiredScopes[j], html, scopePrefix)\r\n\r\n    html\r\n\r\n  pushScope: (scopeStack, scope, html, scopePrefix) ->\r\n    scopeStack.push(scope)\r\n    className = scopePrefix + scope.replace(/\\.+/g, \" #{scopePrefix}\")\r\n    html += \"<span class=\\\"#{className}\\\">\"\r\n\r\n  popScope: (scopeStack, html) ->\r\n    scopeStack.pop()\r\n    html += '</span>'\r\n","Highlighter = require './highlighter'\r\n\r\n{client} = require '../connection'\r\n{once} = require '../misc'\r\n\r\ngetlazy = client.import 'getlazy'\r\n\r\nmodule.exports = views =\r\n  dom: ({tag, attrs, contents}, opts) ->\r\n    view = document.createElement tag\r\n    for k, v of attrs\r\n      if v instanceof Array then v = v.join ' '\r\n      view.setAttribute k, v\r\n    if contents?\r\n      if contents.constructor isnt Array\r\n        contents = [contents]\r\n      for child in contents\r\n        view.appendChild @render child, opts\r\n    view\r\n\r\n  html: ({content, block = false}) ->\r\n    view = @render if block then @tags.div() else @tags.span()\r\n    view.innerHTML = content\r\n    view = if view.children.length == 1 then view.children[0] else view\r\n\r\n  tree: ({head, children, expand}, opts) ->\r\n    @ink.tree.treeView(@render(head, opts),\r\n                       children.map((x)=>@render(@tags.div([x]), opts)),\r\n                       expand: expand)\r\n\r\n  lazy: ({head, id}, opts) ->\r\n    conn = client.conn\r\n    if opts.registerLazy?\r\n      opts.registerLazy id\r\n    else\r\n      console.warn 'Unregistered lazy view'\r\n    view = @ink.tree.treeView @render(head, opts), [],\r\n      onToggle: once =>\r\n        return unless client.conn == conn\r\n        getlazy(id).then (children) =>\r\n          body = view.querySelector ':scope > .body'\r\n          children.map((x) => @render(@tags.div([x]), opts)).forEach (x) =>\r\n            body.appendChild(@ink.ansiToHTML(x))\r\n\r\n  subtree: ({label, child}, opts) ->\r\n    @render (if child.type == \"tree\"\r\n      type: \"tree\"\r\n      head: @tags.span [label, child.head]\r\n      children: child.children\r\n      # children: child.children.map((x) => @tags.span \"gutted\", x)\r\n    else\r\n      @tags.span \"gutted\", [label, child]), opts\r\n\r\n  copy: ({view, text}, opts) ->\r\n    view = @render view, opts\r\n    atom.commands.add view,\r\n      'core:copy': (e) ->\r\n        atom.clipboard.write text\r\n        e.stopPropagation()\r\n    view\r\n\r\n  link: ({file, line, contents}) ->\r\n    view = @render @tags.a {href: '#'}, contents\r\n    # TODO: maybe need to dispose of the tooltip onclick and readd them, but\r\n    # that doesn't seem to be necessary\r\n    if @ink.Opener.isUntitled(file)\r\n      tt = atom.tooltips.add view, title: -> 'untitled'\r\n    else\r\n      tt = atom.tooltips.add view, title: -> file\r\n    view.onclick = (e) =>\r\n      @ink.Opener.open(file, line, {\r\n        pending: atom.config.get('core.allowPendingPaneItems')\r\n      })\r\n      e.stopPropagation()\r\n    view.addEventListener 'DOMNodeRemovedFromDocument', =>\r\n      tt.dispose()\r\n    view\r\n\r\n  number: ({value, full}) ->\r\n    rounded = value.toPrecision(3)\r\n    rounded += '…' unless rounded.toString().length >= full.length\r\n    view = @render @tags.span 'syntax--constant syntax--numeric', rounded\r\n    isfull = false\r\n    view.onclick = (e) ->\r\n      view.innerText = if !isfull then full else rounded\r\n      isfull = !isfull\r\n      e.stopPropagation()\r\n    view\r\n\r\n  code: ({text, attrs, scope}) ->\r\n    grammar = atom.grammars.grammarForScopeName(\"source.julia\")\r\n    block = attrs?.block || false\r\n    highlighted = Highlighter.highlight(text, grammar, {scopePrefix: 'syntax--', block})\r\n    @render {type: 'html', block, content: highlighted}\r\n\r\n  latex: ({attrs, text}) ->\r\n    block = attrs?.block || false\r\n    latex = @ink.KaTeX.texify(text, block)\r\n    @render {type: 'html', block, content: latex}\r\n\r\n  views:\r\n    dom:     (a...) -> views.dom  a...\r\n    html:    (a...) -> views.html a...\r\n    tree:    (a...) -> views.tree a...\r\n    lazy:    (a...) -> views.lazy a...\r\n    subtree: (a...) -> views.subtree a...\r\n    link:    (a...) -> views.link a...\r\n    copy:    (a...) -> views.copy a...\r\n    number:  (a...) -> views.number a...\r\n    code:    (a...) -> views.code a...\r\n    latex:   (a...) -> views.latex a...\r\n\r\n  render: (data, opts = {}) ->\r\n    if @views.hasOwnProperty(data.type)\r\n      r = @views[data.type](data, opts)\r\n      @ink.ansiToHTML(r)\r\n      r\r\n    else if data?.constructor is String\r\n      new Text data\r\n    else\r\n      @render \"julia-client: can't render #{data?.type}\"\r\n\r\n  tag: (tag, attrs, contents) ->\r\n    if attrs?.constructor is String\r\n      attrs = class: attrs\r\n    if attrs?.constructor isnt Object\r\n      [contents, attrs] = [attrs, undefined]\r\n    type: 'dom'\r\n    tag: tag\r\n    attrs: attrs\r\n    contents: contents\r\n\r\n  tags: {}\r\n\r\n['div', 'span', 'a', 'strong', 'table', 'tr', 'td', 'webview'].forEach (tag) ->\r\n  views.tags[tag] = (attrs, contents) ->\r\n    views.tag tag, attrs, contents\r\n","{CompositeDisposable} = require 'atom'\r\n{client} = require '../connection'\r\n{formatTimePeriod} = require '../misc'\r\n\r\nmodule.exports =\r\n  progs: {}\r\n\r\n  activate: ->\r\n    @subs = new CompositeDisposable\r\n    client.handle 'progress': (t, id, m) => @[t] id, m\r\n    status = []\r\n    @subs.add client.onWorking  =>\r\n        status = @ink?.progress.add(null, description: 'Julia')\r\n    @subs.add client.onDone     => status?.destroy()\r\n    @subs.add client.onDetached => @clear()\r\n\r\n  deactivate: ->\r\n    @clear()\r\n    @subs.dispose()\r\n\r\n  add: (id) ->\r\n    pr = @ink.progress.add()\r\n    pr.t0 = Date.now()\r\n    pr.showTime = true\r\n    @progs[id] = pr\r\n\r\n  progress: (id, prog) ->\r\n    pr = @progs[id]\r\n    return unless pr?\r\n    pr.level = prog\r\n    if pr.showTime then @rightText id, null\r\n\r\n  message:  (id, m) -> @progs[id]?.message = m\r\n\r\n  leftText: (id, m) -> @progs[id]?.description = m\r\n\r\n  rightText: (id, m) ->\r\n    pr = @progs[id]\r\n    return unless pr?\r\n    if m?.length\r\n      pr.rightText = m\r\n      pr.showTime = false\r\n    else\r\n      dt = (Date.now() - pr.t0)*(1/pr.level - 1)/1000\r\n      pr.showTime = true\r\n      pr.rightText = formatTimePeriod dt\r\n\r\n  delete: (id) ->\r\n    pr = @progs[id]\r\n    return unless pr?\r\n    pr.destroy()\r\n    delete @progs[id]\r\n\r\n  clear: ->\r\n    for _, p of @progs\r\n      p?.destroy()\r\n    @progs = {}\r\n","# TODO: this code is awful, refactor\r\n\r\n{CompositeDisposable, Disposable, Emitter} = require 'atom'\r\n{debounce} = require 'underscore-plus'\r\n\r\n{client} = require '../connection'\r\n{show} = require '../ui/selector'\r\n\r\n{module: getmodule, allmodules, ismodule} = client.import ['module', 'allmodules', 'ismodule']\r\n\r\nmodule.exports =\r\n\r\n  activate: ->\r\n    @subs = new CompositeDisposable\r\n    @itemSubs = new CompositeDisposable\r\n    @subs.add @emitter = new Emitter\r\n\r\n    @subs.add atom.workspace.observeActivePaneItem (item) => @updateForItem item\r\n    @subs.add client.onAttached => @updateForItem()\r\n    @subs.add client.onDetached => @updateForItem()\r\n\r\n  deactivate: ->\r\n    @subs.dispose()\r\n\r\n  _current: null\r\n  lastEditorModule: null\r\n\r\n  setCurrent: (@_current, editor) ->\r\n    if editor then @lastEditorModule = @_current\r\n    @emitter.emit 'did-change', @_current\r\n\r\n  onDidChange: (f) -> @emitter.on 'did-change', f\r\n\r\n  current: (m = @_current) ->\r\n    return unless m?\r\n    {main, inactive, sub, subInactive} = m\r\n    if main is @follow then return @current @lastEditorModule\r\n    if not main or inactive\r\n      \"Main\"\r\n    else if not sub or subInactive\r\n      main\r\n    else\r\n      \"#{main}.#{sub}\"\r\n\r\n  # Choosing Modules\r\n\r\n  itemSelector: 'atom-text-editor[data-grammar=\"source julia\"], .julia-console.julia, ink-terminal, .ink-workspace'\r\n\r\n  isValidItem: (item) -> atom.views.getView(item)?.matches @itemSelector\r\n\r\n  autodetect: 'Auto Detect'\r\n  follow: 'Follow Editor'\r\n\r\n  chooseModule: ->\r\n    item = atom.workspace.getActivePaneItem()\r\n    ised = atom.workspace.isTextEditor item\r\n    return unless @isValidItem item\r\n    client.require 'change modules', =>\r\n      if (item = atom.workspace.getActivePaneItem())\r\n        active = item.juliaModule or (if ised then @autodetect else 'Main')\r\n        modules = allmodules().then (modules) =>\r\n          if ised\r\n            modules.unshift @autodetect\r\n          else if @lastEditorModule?\r\n            modules.unshift @follow\r\n          modules\r\n        modules.catch (err) =>\r\n          console.log err\r\n        show(modules, { active }).then (mod) =>\r\n          return unless mod?\r\n          if mod is @autodetect\r\n            delete item.juliaModule\r\n          else\r\n            item.juliaModule = mod\r\n          item.setModule?(mod if mod isnt @autodetect)\r\n          @updateForItem item\r\n\r\n  updateForItem: (item = atom.workspace.getActivePaneItem()) ->\r\n    @itemSubs.dispose()\r\n    if not @isValidItem item\r\n      @itemSubs.add item?.onDidChangeGrammar? => @updateForItem()\r\n      @setCurrent()\r\n    else if not client.isActive()\r\n      @setCurrent main: 'Main', inactive: true\r\n    else if atom.workspace.isTextEditor item\r\n      @updateForEditor item\r\n    else\r\n      mod = item.juliaModule or 'Main'\r\n      ismodule(mod)\r\n        .then (ismod) =>\r\n          @setCurrent main: mod, inactive: !ismod\r\n        .catch (err) =>\r\n          console.log err\r\n\r\n  updateForEditor: (editor) ->\r\n    @setCurrent main: editor.juliaModule or 'Main', true\r\n    @setEditorModule editor\r\n    @itemSubs.add editor.onDidChangeCursorPosition =>\r\n      @setEditorModuleLazy editor\r\n\r\n  getEditorModule: (ed, bufferPosition = null) ->\r\n    return unless client.isActive()\r\n    if bufferPosition\r\n      {row, column} = bufferPosition\r\n    else\r\n      sels = ed.getSelections()\r\n      {row, column} = sels[sels.length - 1].getBufferRange().end\r\n    data =\r\n      path: client.editorPath(ed)\r\n      code: ed.getText()\r\n      row: row+1, column: column+1\r\n      module: ed.juliaModule\r\n    getmodule(data)\r\n      .catch (err) =>\r\n        console.log err\r\n\r\n  setEditorModule: (ed) ->\r\n    modulePromise = @getEditorModule ed\r\n    return unless modulePromise\r\n    modulePromise.then (mod) =>\r\n      if atom.workspace.getActivePaneItem() is ed\r\n        @setCurrent mod, true\r\n\r\n  setEditorModuleLazy: debounce ((ed) -> @setEditorModule(ed)), 100\r\n\r\n  # The View\r\n\r\n  activateView: ->\r\n    @onDidChange (c) => @updateView c\r\n\r\n    @dom = document.createElement 'span'\r\n    @dom.classList.add 'julia', 'inline-block'\r\n\r\n    @mainView = document.createElement 'a'\r\n    @dividerView = document.createElement 'span'\r\n    @subView = document.createElement 'span'\r\n\r\n    @dom.appendChild x for x in [@mainView, @dividerView, @subView]\r\n\r\n    @mainView.onclick = =>\r\n      atom.commands.dispatch atom.views.getView(atom.workspace.getActivePaneItem()),\r\n                             'julia-client:set-working-module'\r\n\r\n    atom.tooltips.add @dom,\r\n      title: => \"Currently working in module #{@current()}\"\r\n\r\n    # @NOTE: Grammar selector has `priority` 10 and thus set the it to a bit lower\r\n    #        than that to avoid collision that may cause unexpected result.\r\n    @tile = @statusBar.addRightTile item: @dom, priority: 5\r\n    disposable = new Disposable(=>\r\n      @tile.destroy()\r\n      delete @tile)\r\n    @subs.add(disposable)\r\n    disposable\r\n\r\n  updateView: (m) ->\r\n    return unless @tile?\r\n    if not m?\r\n      @dom.style.display = 'none'\r\n    else\r\n      {main, sub, inactive, subInactive} = m\r\n      if main is @follow\r\n        return @updateView @lastEditorModule\r\n      @dom.style.display = ''\r\n      @mainView.innerText = main or 'Main'\r\n      if sub\r\n        @subView.innerText = sub\r\n        @dividerView.innerText = '/'\r\n      else\r\n        view.innerText = '' for view in [@subView, @dividerView]\r\n      if inactive\r\n        @dom.classList.add 'fade'\r\n      else\r\n        @dom.classList.remove 'fade'\r\n        for view in [@subView, @dividerView]\r\n          if subInactive\r\n            view.classList.add 'fade'\r\n          else\r\n            view.classList.remove 'fade'\r\n\r\n  consumeStatusBar: (bar) ->\r\n    @statusBar = bar\r\n    disposable = @activateView()\r\n    @updateView @_current\r\n    disposable\r\n","\r\n\r\nimport { CompositeDisposable } from 'atom'\r\nimport { client } from '../connection'\r\nconst views = require('./views')\r\nimport goto from '../runtime/goto'\r\n\r\nconst {\r\n  searchdocs: searchDocs,\r\n  gotosymbol: gotoSymbol,\r\n  moduleinfo: moduleInfo,\r\n  regeneratedocs: regenerateDocs\r\n} = client.import({rpc: ['searchdocs', 'gotosymbol', 'moduleinfo'], msg: ['regeneratedocs']})\r\n\r\nlet ink, subs, pane\r\n\r\nexport function activate(_ink) {\r\n  ink = _ink\r\n\r\n  pane = ink.DocPane.fromId('Documentation')\r\n\r\n  pane.search = (text, mod, exportedOnly, allPackages, nameOnly) => {\r\n    client.boot()\r\n    return new Promise((resolve) => {\r\n      searchDocs({query: text, mod, exportedOnly, allPackages, nameOnly}).then((res) => {\r\n        if (!res.error) {\r\n          for (let i = 0; i < res.items.length; i += 1) {\r\n            res.items[i].score = res.scores[i]\r\n            res.items[i] = processItem(res.items[i])\r\n          }\r\n          // erase module input if the actual searched module has been changed\r\n          if (res.shoulderase) {\r\n            pane.modEd.setText('')\r\n          }\r\n        }\r\n        resolve(res)\r\n      })\r\n    })\r\n  }\r\n\r\n  pane.regenerateCache = () => {\r\n    regenerateDocs()\r\n  }\r\n\r\n  subs = new CompositeDisposable()\r\n  subs.add(atom.commands.add('atom-workspace', 'julia-client:open-documentation-browser', open))\r\n  subs.add(atom.commands.add('atom-workspace', 'julia-client:regenerate-doc-cache', () => {\r\n    regenerateDocs()\r\n  }))\r\n  subs.add(atom.config.observe('julia-client.uiOptions.layouts.documentation.defaultLocation', (defaultLocation) => {\r\n    pane.setDefaultLocation(defaultLocation)\r\n  }))\r\n}\r\n\r\nexport function open () {\r\n  return pane.open({\r\n    split: atom.config.get('julia-client.uiOptions.layouts.documentation.split')\r\n  })\r\n}\r\nexport function ensureVisible () {\r\n  return pane.ensureVisible({\r\n    split: atom.config.get('julia-client.uiOptions.layouts.documentation.split')\r\n  })\r\n}\r\nexport function close () {\r\n  return pane.close()\r\n}\r\n\r\nexport function processItem (item) {\r\n  item.html = views.render(item.html)\r\n\r\n  processLinks(item.html.getElementsByTagName('a'))\r\n\r\n  item.onClickName = () => {\r\n    gotoSymbol({\r\n      word: item.name,\r\n      mod: item.mod\r\n    }).then(results => {\r\n      if (results.error) return\r\n      return goto.selectItemsAndGo(results.items)\r\n    })\r\n  }\r\n\r\n  item.onClickModule = () => {\r\n    moduleInfo({mod: item.mod}).then(({doc, items}) => {\r\n      items.map((x) => processItem(x))\r\n      showDocument(views.render(doc), items)\r\n    })\r\n  }\r\n\r\n  return item\r\n}\r\n\r\nexport function processLinks (links) {\r\n  for (let i = 0; i < links.length; i++) {\r\n    const link = links[i]\r\n    if (link.attributes['href'].value == '@ref') {\r\n      links[i].onclick = () => pane.kwsearch(link.innerText)\r\n    }\r\n  }\r\n}\r\n\r\nexport function showDocument (view, items) {\r\n  pane.showDocument(view, items)\r\n}\r\n\r\nexport function deactivate () {\r\n  subs.dispose()\r\n}\r\n","/** @babel */\r\n\r\nimport path from 'path'\r\nimport fs from 'fs'\r\nimport { CompositeDisposable, Range } from 'atom'\r\n\r\nimport { client } from '../connection'\r\nimport modules from './modules'\r\nimport { isValidScopeToInspect } from '../misc/scopes'\r\nimport {\r\n  getWordAndRange,\r\n  getWordRangeAtBufferPosition,\r\n  getWordRangeWithoutTrailingDots,\r\n  isValidWordToInspect\r\n} from '../misc/words'\r\nimport { getLocalContext } from '../misc/blocks'\r\nimport { show } from '../ui/selector'\r\n\r\nconst {\r\n  gotosymbol: gotoSymbol,\r\n  regeneratesymbols: regenerateSymbols,\r\n  clearsymbols: clearSymbols,\r\n} = client.import(['gotosymbol', 'regeneratesymbols', 'clearsymbols'])\r\n\r\nconst includeRegex = /(include|include_dependency)\\(\".+\\.jl\"\\)/\r\nconst filePathRegex = /\".+\\.jl\"/\r\n\r\nclass Goto {\r\n  activate (ink) {\r\n    this.ink = ink\r\n    this.subscriptions = new CompositeDisposable()\r\n    this.subscriptions.add(\r\n      atom.commands.add('atom-workspace', 'julia-client:regenerate-symbols-cache', () => {\r\n        regenerateSymbols()\r\n      }),\r\n      atom.commands.add('atom-workspace', 'julia-client:clear-symbols-cache', () => {\r\n        clearSymbols()\r\n      })\r\n    )\r\n  }\r\n\r\n  deactivate () {\r\n    this.subscriptions.dispose()\r\n  }\r\n\r\n  getJumpFilePath(editor, bufferPosition) {\r\n    const includeRange = getWordRangeAtBufferPosition(editor, bufferPosition, {\r\n      wordRegex: includeRegex\r\n    })\r\n    if (includeRange.isEmpty()) return false\r\n\r\n    // return if the bufferPosition is not on the path string\r\n    const filePathRange = getWordRangeAtBufferPosition(editor, bufferPosition, {\r\n      wordRegex: filePathRegex\r\n    })\r\n    if (filePathRange.isEmpty()) return false\r\n\r\n    const filePathText = editor.getTextInBufferRange(filePathRange)\r\n    const filePathBody = filePathText.replace(/\"/g, '')\r\n    const dirPath = path.dirname(editor.getPath())\r\n    const filePath = path.join(dirPath, filePathBody)\r\n\r\n    // return if there is not such a file exists\r\n    if (!fs.existsSync(filePath)) return false\r\n    return { range: filePathRange, filePath }\r\n  }\r\n\r\n  isClientAndInkReady () {\r\n    return client.isActive() && this.ink !== undefined\r\n  }\r\n\r\n  // TODO: handle remote files ?\r\n  selectItemsAndGo (items) {\r\n    if (items.length === 0) return\r\n    if (items.length === 1) {\r\n      const item = items[0]\r\n      return this.ink.Opener.open(item.file, item.line, {\r\n        pending: atom.config.get('core.allowPendingPaneItems')\r\n      })\r\n    }\r\n    items = items.map(result => {\r\n      result.primary = result.text\r\n      result.secondary = `${result.file}:${result.line}`\r\n      return result\r\n    })\r\n    return show(items).then(item => {\r\n      if (!item) return\r\n      this.ink.Opener.open(item.file, item.line, {\r\n        pending: atom.config.get('core.allowPendingPaneItems')\r\n      })\r\n    })\r\n  }\r\n\r\n  gotoSymbol () {\r\n    const editor = atom.workspace.getActiveTextEditor()\r\n    const bufferPosition = editor.getCursorBufferPosition()\r\n\r\n    // file jumps\r\n    const rangeFilePath = this.getJumpFilePath(editor, bufferPosition)\r\n    if (rangeFilePath) {\r\n      const { filePath } = rangeFilePath\r\n      return this.ink.Opener.open(filePath, 0, {\r\n        pending: atom.config.get('core.allowPendingPaneItems'),\r\n      })\r\n    }\r\n\r\n    if (!this.isClientAndInkReady()) return\r\n\r\n    // get word without trailing dot accessors at the buffer position\r\n    let { word, range } = getWordAndRange(editor, {\r\n      bufferPosition\r\n    })\r\n    range = getWordRangeWithoutTrailingDots(word, range, bufferPosition)\r\n    word = editor.getTextInBufferRange(range)\r\n\r\n    // check the validity of code to be inspected\r\n    if (!(isValidWordToInspect(word))) return\r\n\r\n    // local context\r\n    const { column, row } = bufferPosition\r\n    const { context, startRow } = getLocalContext(editor, row)\r\n\r\n    // module context\r\n    const currentModule = modules.current()\r\n    const mod = currentModule ? currentModule : 'Main'\r\n    const text = editor.getText() // buffer text that will be used for fallback entry\r\n\r\n    return gotoSymbol({\r\n      word,\r\n      path: editor.getPath() || 'untitled-' + editor.getBuffer().getId(),\r\n      // local context\r\n      column: column + 1,\r\n      row: row + 1,\r\n      startRow,\r\n      context,\r\n      onlyGlobal: false,\r\n      // module context\r\n      mod,\r\n      text\r\n    }).then(results => {\r\n      if (results.error) return\r\n      this.selectItemsAndGo(results.items)\r\n    }).catch(err => {\r\n      console.log(err)\r\n    })\r\n  }\r\n\r\n  provideHyperclick () {\r\n    const getSuggestion = async (textEditor, bufferPosition) => {\r\n      // file jumps -- invoked even if Julia isn't running\r\n      const rangeFilePath = this.getJumpFilePath(textEditor, bufferPosition)\r\n      if (rangeFilePath) {\r\n        const { range, filePath } = rangeFilePath\r\n        return {\r\n          range,\r\n          callback: () => {\r\n            return this.ink.Opener.open(filePath, 0, {\r\n              pending: atom.config.get('core.allowPendingPaneItems'),\r\n            })\r\n          }\r\n        }\r\n      }\r\n\r\n      // If Julia is not running, do nothing\r\n      if (!this.isClientAndInkReady()) return\r\n\r\n      // If the scope at `bufferPosition` is not valid code scope, do nothing\r\n      if (!isValidScopeToInspect(textEditor, bufferPosition)) return\r\n\r\n      // get word without trailing dot accessors at the buffer position\r\n      let { word, range } = getWordAndRange(textEditor, {\r\n        bufferPosition\r\n      })\r\n      range = getWordRangeWithoutTrailingDots(word, range, bufferPosition)\r\n      word = textEditor.getTextInBufferRange(range)\r\n\r\n      // check the validity of code to be inspected\r\n      if (!(isValidWordToInspect(word))) return\r\n\r\n      // local context\r\n      const { column, row } = bufferPosition\r\n      const { context, startRow } = getLocalContext(textEditor, row)\r\n\r\n      // module context\r\n      const { main, sub } = await modules.getEditorModule(textEditor, bufferPosition)\r\n      const mod = main ? (sub ? `${main}.${sub}` : main) : 'Main'\r\n      const text = textEditor.getText() // buffer text that will be used for fallback entry\r\n\r\n      return new Promise((resolve) => {\r\n        gotoSymbol({\r\n          word,\r\n          path: textEditor.getPath() || 'untitled-' + textEditor.getBuffer().getId(),\r\n          // local context\r\n          column: column + 1,\r\n          row: row + 1,\r\n          startRow,\r\n          context,\r\n          onlyGlobal: false,\r\n          // module context\r\n          mod,\r\n          text\r\n        }).then(results => {\r\n          // If the `goto` call fails or there is no where to go to, do nothing\r\n          if (results.error) {\r\n            resolve({\r\n              range: new Range([0,0], [0,0]),\r\n              callback: () => {}\r\n            })\r\n          }\r\n          resolve({\r\n            range,\r\n            callback: () => setTimeout(() => this.selectItemsAndGo(results.items), 5)\r\n          })\r\n        }).catch(err => {\r\n          console.log(err)\r\n        })\r\n      })\r\n    }\r\n\r\n    return {\r\n      providerName: 'julia-client-hyperclick-provider',\r\n      priority: 100,\r\n      grammarScopes: atom.config.get('julia-client.juliaSyntaxScopes'),\r\n      getSuggestion\r\n    }\r\n  }\r\n}\r\n\r\nexport default new Goto()\r\n","{CompositeDisposable} = require 'atom'\r\n\r\n{client} = require '../connection'\r\n{views} = require '../ui'\r\ngoto = require './goto'\r\nmodules = require './modules'\r\n\r\n{ workspace, gotosymbol: gotoSymbol, clearLazy } = client.import rpc: ['workspace', 'gotosymbol'], msg: 'clearLazy'\r\n\r\nmodule.exports =\r\n  activate: ->\r\n    @create()\r\n\r\n    client.onDetached =>\r\n      @ws.setItems []\r\n      @lazyTrees = []\r\n\r\n    atom.config.observe 'julia-client.uiOptions.layouts.workspace.defaultLocation', (defaultLocation) =>\r\n      @ws.setDefaultLocation defaultLocation\r\n\r\n  lazyTrees: []\r\n\r\n  update: ->\r\n    return @ws.setItems [] unless client.isActive() and @ws.currentPane()\r\n    clearLazy @lazyTrees\r\n    registerLazy = (id) => @lazyTrees.push id\r\n    mod = if @mod == modules.follow then modules.current() else (@mod or 'Main')\r\n    p = workspace(mod).then (ws) =>\r\n      for {items} in ws\r\n        for item in items\r\n          item.value = views.render item.value, {registerLazy}\r\n          item.onClick = @onClick(item.name)\r\n      @ws.setItems ws\r\n    p.catch (err) ->\r\n      if err isnt 'disconnected'\r\n        console.error 'Error refreshing workspace'\r\n        console.error err\r\n\r\n  onClick: (name) ->\r\n    () =>\r\n      mod = if @mod == modules.follow then modules.current() else (@mod or 'Main')\r\n      gotoSymbol\r\n        word: name,\r\n        mod: mod\r\n      .then (results) =>\r\n        return if results.error\r\n        goto.selectItemsAndGo(results.items)\r\n\r\n  create: ->\r\n    @ws = @ink.Workspace.fromId 'julia'\r\n    @ws.setModule = (mod) => @mod = mod\r\n    @ws.refresh = () => @update()\r\n    @ws.refreshModule = () =>\r\n      m = modules.chooseModule()\r\n      if m?.then?\r\n        m.then(() => @update())\r\n\r\n  open: ->\r\n    @ws.open\r\n      split: atom.config.get 'julia-client.uiOptions.layouts.workspace.split'\r\n\r\n  close: ->\r\n    @ws.close()\r\n","# TODO: this is very horrible, refactor\r\npath = require 'path'\r\n{dialog, BrowserWindow} = require('electron').remote\r\n\r\n{client} =  require '../connection'\r\n{notifications, views, selector, docpane} = require '../ui'\r\n{paths, blocks, cells, words, weave} = require '../misc'\r\n{processLinks} = require '../ui/docs'\r\nworkspace = require './workspace'\r\nmodules = require './modules'\r\n{\r\n  eval: evaluate, evalall, evalshow, module: getmodule,\r\n  cd, clearLazy, activateProject, activateParentProject, activateDefaultProject\r\n} = client.import\r\n  rpc: ['eval', 'evalall', 'evalshow', 'module'],\r\n  msg: ['cd', 'clearLazy', 'activateProject', 'activateParentProject', 'activateDefaultProject']\r\nsearchDoc = client.import('docs')\r\n\r\nmodule.exports =\r\n  _currentContext: ->\r\n    editor = atom.workspace.getActiveTextEditor()\r\n    mod = modules.current() || 'Main'\r\n    edpath = client.editorPath(editor) || 'untitled-' + editor.getBuffer().id\r\n    {editor, mod, edpath}\r\n\r\n  _showError: (r, lines) ->\r\n    @errorLines?.lights.destroy()\r\n    lights = @ink.highlights.errorLines (file: file, line: line-1 for {file, line} in lines)\r\n    @errorLines = {r, lights}\r\n    r.onDidDestroy =>\r\n      if @errorLines?.r == r then @errorLines.lights.destroy()\r\n\r\n  eval: ({move, cell}={}) ->\r\n    {editor, mod, edpath} = @_currentContext()\r\n    codeSelector = if cell? then cells else blocks\r\n    # global options\r\n    resultsDisplayMode = atom.config.get('julia-client.uiOptions.resultsDisplayMode')\r\n    errorInRepl = atom.config.get('julia-client.uiOptions.errorInRepl')\r\n    scrollToResult = atom.config.get('julia-client.uiOptions.scrollToResult')\r\n\r\n    Promise.all codeSelector.get(editor).map ({range, line, text, selection}) =>\r\n      codeSelector.moveNext editor, selection, range if move\r\n      [[start], [end]] = range\r\n      @ink.highlight editor, start, end\r\n      rtype = resultsDisplayMode\r\n      if cell and not (rtype is 'console')\r\n          rtype = 'block'\r\n      if rtype is 'console'\r\n        evalshow({text, line: line+1, mod, path: edpath})\r\n        notifications.show \"Evaluation Finished\"\r\n        workspace.update()\r\n      else\r\n        r = null\r\n        setTimeout (=> r ?= new @ink.Result editor, [start, end], {type: rtype, scope: 'julia', goto: scrollToResult}), 0.1\r\n        evaluate({text, line: line+1, mod, path: edpath, errorInRepl})\r\n          .catch -> r?.destroy()\r\n          .then (result) =>\r\n            if not result?\r\n              r?.destroy()\r\n              console.error 'Error: Something went wrong while evaluating.'\r\n              return\r\n            error = result.type == 'error'\r\n            view = if error then result.view else result\r\n            if not r? or r.isDestroyed then r = new @ink.Result editor, [start, end], {type: rtype, scope: 'julia', goto: scrollToResult}\r\n            registerLazy = (id) ->\r\n              r.onDidDestroy client.withCurrent -> clearLazy [id]\r\n              editor.onDidDestroy client.withCurrent -> clearLazy id\r\n            r.setContent views.render(view, {registerLazy}), {error}\r\n            if error\r\n              atom.beep() if error\r\n              @ink.highlight editor, start, end, 'error-line'\r\n              if result.highlights?\r\n                @_showError r, result.highlights\r\n            notifications.show \"Evaluation Finished\"\r\n            workspace.update()\r\n            result\r\n\r\n  evalAll: (el) ->\r\n    if el\r\n      path = paths.getPathFromTreeView el\r\n      if not path\r\n        return atom.notifications.addError 'This file has no path.'\r\n      try\r\n        code = paths.readCode(path)\r\n        data =\r\n          path: path\r\n          code: code\r\n          row: 1\r\n          column: 1\r\n        getmodule(data)\r\n          .then (mod) =>\r\n            evalall({\r\n              path: path\r\n              module: modules.current mod\r\n              code: code\r\n            })\r\n              .then (result) ->\r\n                notifications.show \"Evaluation Finished\"\r\n                workspace.update()\r\n              .catch (err) =>\r\n                console.log(err)\r\n          .catch (err) =>\r\n            console.log(err)\r\n\r\n      catch error\r\n        atom.notifications.addError 'Error happened',\r\n          detail: error\r\n          dismissable: true\r\n    else\r\n      {editor, mod, edpath} = @_currentContext()\r\n      atom.commands.dispatch atom.views.getView(editor), 'inline-results:clear-all'\r\n      [scope] = editor.getRootScopeDescriptor().getScopesArray()\r\n      weaveScopes = ['source.weave.md', 'source.weave.latex']\r\n      module = if weaveScopes.includes scope then mod else editor.juliaModule\r\n      code = if weaveScopes.includes scope then weave.getCode editor else editor.getText()\r\n      evalall({\r\n        path: edpath\r\n        module: module\r\n        code: code\r\n      })\r\n        .then (result) ->\r\n          notifications.show \"Evaluation Finished\"\r\n          workspace.update()\r\n        .catch (err) =>\r\n          console.log(err)\r\n\r\n  toggleDocs: () ->\r\n    { editor, mod, edpath } = @_currentContext()\r\n    bufferPosition = editor.getLastCursor().getBufferPosition()\r\n    # get word without trailing dot accessors at the buffer position\r\n    { word, range } = words.getWordAndRange(editor, { bufferPosition })\r\n    range = words.getWordRangeWithoutTrailingDots(word, range, bufferPosition)\r\n    word = editor.getTextInBufferRange(range)\r\n\r\n    return unless words.isValidWordToInspect(word)\r\n    searchDoc({word: word, mod: mod})\r\n      .then (result) =>\r\n        if result.error then return\r\n        v = views.render result\r\n        processLinks(v.getElementsByTagName('a'))\r\n        if atom.config.get('julia-client.uiOptions.docsDisplayMode') == 'inline'\r\n          d = new @ink.InlineDoc editor, range,\r\n            content: v\r\n            highlight: true\r\n          d.view.classList.add 'julia'\r\n        else\r\n          docpane.ensureVisible()\r\n          docpane.showDocument(v, [])\r\n      .catch (err) =>\r\n        console.log(err)\r\n\r\n  # Working Directory\r\n\r\n  _cd: (dir) ->\r\n    if atom.config.get('julia-client.juliaOptions.persistWorkingDir')\r\n      atom.config.set('julia-client.juliaOptions.workingDir', dir)\r\n    cd(dir)\r\n\r\n  cdHere: (el) ->\r\n    dir = @currentDir(el)\r\n    if dir\r\n      @_cd(dir)\r\n\r\n  activateProject: (el) ->\r\n    dir = @currentDir(el)\r\n    if dir\r\n      activateProject(dir)\r\n\r\n  activateParentProject: (el) ->\r\n    dir = @currentDir(el)\r\n    if dir\r\n      activateParentProject(dir)\r\n\r\n  activateDefaultProject: ->\r\n    activateDefaultProject()\r\n\r\n  currentDir: (el) ->\r\n    dirPath = paths.getDirPathFromTreeView el\r\n    return dirPath if dirPath\r\n    # invoked from normal command usage\r\n    file = client.editorPath(atom.workspace.getCenter().getActiveTextEditor())\r\n    return path.dirname(file) if file\r\n    atom.notifications.addError 'This file has no path.'\r\n    return null\r\n\r\n  cdProject: ->\r\n    dirs = atom.project.getPaths()\r\n    if dirs.length < 1\r\n      atom.notifications.addError 'This project has no folders.'\r\n    else if dirs.length == 1\r\n      @_cd dirs[0]\r\n    else\r\n      selector.show(dirs, { infoMessage: 'Select project to work in' })\r\n        .then (dir) =>\r\n          return unless dir?\r\n          @_cd dir\r\n        .catch (err) =>\r\n          console.log(err)\r\n\r\n  cdHome: ->\r\n    @_cd paths.home()\r\n\r\n  cdSelect: ->\r\n    opts = properties: ['openDirectory']\r\n    dialog.showOpenDialog BrowserWindow.getFocusedWindow(), opts, (path) =>\r\n      if path? then @_cd path[0]\r\n","\r\n\r\nimport { client } from '../connection'\r\nimport { customEnv } from '../connection/process/basic'\r\nimport { CompositeDisposable } from 'atom'\r\nimport { paths } from '../misc'\r\nimport evaluation from './evaluation'\r\nimport modules from './modules'\r\nimport * as pty from 'node-pty-prebuilt-multiarch'\r\nimport { debounce } from 'underscore-plus'\r\nimport { selector } from '../ui'\r\nimport { withRemoteConfig } from '../connection/process/remote'\r\nimport * as ssh from 'ssh2'\r\n\r\nconst { changeprompt, changemodule, fullpath } =\r\n  client.import({ msg: ['changeprompt', 'changemodule'], rpc: ['fullpath'] })\r\n\r\nconst isWindows = process.platform === 'win32'\r\nconst uriRegex = isWindows ?\r\n  /(@ ([^\\s]+)\\s(.*?)\\:(\\d+)|((([a-zA-Z]:|\\.\\.?|\\~)|([^\\0<>\\?\\|\\/\\s!$`&*()\\[\\]+'\":;])+)?((\\\\|\\/)([^\\0<>\\?\\|\\/!$`&*()\\[\\]+'\":;])+)+\\.[^\\0<>\\?\\|\\/\\s!$`&*()\\[\\]+'\":;]+)(\\:\\d+)?)/ :\r\n  /(@ ([^\\s]+)\\s(.*?)\\:(\\d+)|(((\\.\\.?|\\~)|([^\\0\\s!$`&*()\\[\\]+'\":;\\\\])+)?(\\/([^\\0\\s!$`&*()\\[\\]+'\":;\\\\])+)+)(\\:\\d+)?)/\r\n\r\nvar whitelistedKeybindingsREPL = []\r\nvar whitelistedKeybindingsTerminal = []\r\nvar ink = undefined\r\nlet subs = undefined\r\n\r\nexport var terminal\r\n\r\nexport function activate (_ink) {\r\n  ink = _ink\r\n  subs = new CompositeDisposable()\r\n\r\n  process.env['TERM'] = 'xterm-256color'\r\n\r\n  subs.add(\r\n    atom.config.observe('julia-client.consoleOptions.whitelistedKeybindingsREPL', (kbds) => {\r\n      whitelistedKeybindingsREPL = kbds.map(s => s.toLowerCase())\r\n    }),\r\n    atom.config.observe('julia-client.consoleOptions.whitelistedKeybindingsTerminal', (kbds) => {\r\n      whitelistedKeybindingsTerminal = kbds.map(s => s.toLowerCase())\r\n    }),\r\n    atom.config.observe('julia-client.consoleOptions.cursorStyle', updateTerminalSettings),\r\n    atom.config.observe('julia-client.consoleOptions.maximumConsoleSize', updateTerminalSettings),\r\n    atom.config.observe('julia-client.consoleOptions.macOptionIsMeta', updateTerminalSettings),\r\n    atom.config.observe('julia-client.consoleOptions.terminalRendererType', updateTerminalSettings),\r\n    atom.config.observe('julia-client.consoleOptions.cursorBlink', updateTerminalSettings)\r\n  )\r\n\r\n  terminal = ink.InkTerminal.fromId('julia-terminal', terminalOptions())\r\n  terminal.setTitle('REPL', true)\r\n  terminal.onDidOpenLink(hasKeyboardModifier)\r\n  terminal.registerTooltipHandler(showTooltip, hideTooltip)\r\n  terminal.class = 'julia-terminal'\r\n\r\n  subs.add(atom.config.observe('julia-client.uiOptions.layouts.console.defaultLocation', (defaultLocation) => {\r\n    terminal.setDefaultLocation(defaultLocation)\r\n  }))\r\n\r\n  terminal.write('\\x1b[1m\\x1b[32mPress Enter to start Julia. \\x1b[0m\\n\\r')\r\n  terminal.startRequested = () => {\r\n    client.boot()\r\n  }\r\n\r\n  terminal.attachCustomKeyEventHandler((e) => handleKeybinding(e, terminal, whitelistedKeybindingsREPL))\r\n\r\n  modules.onDidChange(debounce(() => changemodule({mod: modules.current()}), 200))\r\n\r\n  client.handle({\r\n    updateWorkspace: () => require('./workspace').update(),\r\n    clearconsole: () => terminal.clear(),\r\n    cursorpos: () => terminal.cursorPosition(),\r\n    writeToTerminal: (str) => {\r\n      if (terminal.ty) {\r\n        terminal.ty.write(str)\r\n        return true\r\n      }\r\n      return false\r\n    }\r\n  })\r\n\r\n  let promptObserver\r\n  client.onBoot((proc) => {\r\n    terminal.attach(proc.ty)\r\n\r\n    if (proc.config) {\r\n      terminal.setTitle('REPL @ '+proc.config.name, true)\r\n    } else {\r\n      terminal.setTitle('REPL', true)\r\n    }\r\n\r\n    if (proc.flush) {\r\n      proc.flush((d) => terminal.write(d), (d) => terminal.write(d))\r\n    }\r\n\r\n    promptObserver = atom.config.observe('julia-client.consoleOptions.prompt', (prompt) => {\r\n      changeprompt(prompt + ' ')\r\n    })\r\n\r\n    addLinkHandler(terminal.terminal)\r\n  })\r\n\r\n  client.onDetached(() => {\r\n    terminal.setTitle('REPL', true)\r\n    terminal.detach()\r\n    // make sure to switch to the normal termbuffer, otherwise there might be\r\n    // issues when leaving an xterm session:\r\n    terminal.write('\\x1b[?1049h')\r\n    terminal.write('\\x1b[?1049l')\r\n    // disable mouse event capturing in case it was left enabled\r\n    terminal.write('\\x1b[?1003h')\r\n    terminal.write('\\x1b[?1003l')\r\n    // reset focus events\r\n    terminal.write('\\x1b[?1004h')\r\n    terminal.write('\\x1b[?1004l')\r\n    terminal.write('\\n\\r\\x1b[1m\\r\\x1b[31mJulia has exited.\\n\\r\\x1b[32mPress Enter to start a new session.\\x1b[0m\\n\\r')\r\n    if (promptObserver) promptObserver.dispose()\r\n  })\r\n\r\n  subs.add(\r\n    // repl commands\r\n    atom.commands.add('atom-workspace', {\r\n      'julia-client:open-REPL': () => {\r\n        open().then(() => terminal.show())\r\n      },\r\n      'julia-client:clear-REPL': () => {\r\n        terminal.clear()\r\n      },\r\n    }),\r\n    atom.commands.add('.julia-terminal', {\r\n      'julia-client:copy-or-interrupt': () => {\r\n        if (!terminal.copySelection()) {\r\n          atom.commands.dispatch(terminal.view, 'julia-client:interrupt-julia')\r\n        }\r\n      }\r\n    }),\r\n    // terminal commands\r\n    atom.commands.add('atom-workspace', {\r\n      'julia-client:new-terminal': () => {\r\n        newTerminal()\r\n      },\r\n      'julia-client:new-terminal-from-current-folder': ev => {\r\n        const dir = evaluation.currentDir(ev.target)\r\n        if (!dir) return\r\n        newTerminal(dir)\r\n      },\r\n      'julia-client:new-remote-terminal': () => {\r\n        newRemoteTerminal()\r\n      }\r\n    })\r\n  )\r\n\r\n  // handle deserialized terminals\r\n  forEachPane(item => {\r\n    if (!item.ty) {\r\n      item.attachCustomKeyEventHandler((e) => handleKeybinding(e, item))\r\n      addLinkHandler(item.terminal)\r\n      item.onDidOpenLink(hasKeyboardModifier)\r\n      item.registerTooltipHandler(showTooltip, hideTooltip)\r\n      shellPty(item.persistentState.cwd)\r\n        .then(({pty, cwd}) => item.attach(pty, true, cwd))\r\n        .catch(() => {})\r\n    }\r\n  }, /terminal\\-julia\\-\\d+/)\r\n  forEachPane(item => item.close(), /terminal\\-remote\\-julia\\-\\d+/)\r\n}\r\n\r\nexport function open () {\r\n  return terminal.open({\r\n    split: atom.config.get('julia-client.uiOptions.layouts.console.split')\r\n  })\r\n}\r\n\r\nexport function close () {\r\n  return terminal.close()\r\n}\r\n\r\nfunction newTerminal (cwd) {\r\n  const term = ink.InkTerminal.fromId(`terminal-julia-${Math.floor(Math.random()*10000000)}`, terminalOptions())\r\n  term.attachCustomKeyEventHandler((e) => handleKeybinding(e, term))\r\n  term.onDidOpenLink(hasKeyboardModifier)\r\n  term.registerTooltipHandler(showTooltip, hideTooltip)\r\n  addLinkHandler(term.terminal)\r\n  shellPty(cwd).then(({pty, cwd}) => {\r\n    term.attach(pty, true, cwd)\r\n    term.setDefaultLocation(atom.config.get('julia-client.uiOptions.layouts.terminal.defaultLocation'))\r\n    term.open({\r\n      split: atom.config.get('julia-client.uiOptions.layouts.terminal.split')\r\n    }).then(() => term.show()).catch(err => {\r\n      console.log(err)\r\n    })\r\n  }).catch(() => {})\r\n}\r\n\r\nfunction newRemoteTerminal () {\r\n  const term = ink.InkTerminal.fromId(`terminal-remote-julia-${Math.floor(Math.random()*10000000)}`, terminalOptions())\r\n  term.attachCustomKeyEventHandler((e) => handleKeybinding(e, term))\r\n  term.onDidOpenLink(hasKeyboardModifier)\r\n  term.registerTooltipHandler(showTooltip, hideTooltip)\r\n  addLinkHandler(term.terminal)\r\n  remotePty().then(({pty, cwd, conf}) => {\r\n    term.attach(pty, true, cwd)\r\n    term.setTitle(`Terminal @ ${conf.name}`)\r\n    term.setDefaultLocation(atom.config.get('julia-client.uiOptions.layouts.terminal.defaultLocation'))\r\n    term.open({\r\n      split: atom.config.get('julia-client.uiOptions.layouts.terminal.split')\r\n    }).then(() => term.show())\r\n    pty.on('close', () => term.detach())\r\n  }).catch((e) => console.error(e))\r\n}\r\n\r\nfunction terminalOptions () {\r\n  const opts = {\r\n    scrollback: atom.config.get('julia-client.consoleOptions.maximumConsoleSize'),\r\n    cursorStyle: atom.config.get('julia-client.consoleOptions.cursorStyle'),\r\n    rendererType: atom.config.get('julia-client.consoleOptions.terminalRendererType'),\r\n    cursorBlink: atom.config.get('julia-client.consoleOptions.cursorBlink')\r\n  }\r\n  if (process.platform === 'darwin') {\r\n    opts.macOptionIsMeta = atom.config.get('julia-client.consoleOptions.macOptionIsMeta')\r\n  }\r\n  return opts\r\n}\r\n\r\nfunction updateTerminalSettings () {\r\n  const settings = terminalOptions()\r\n  forEachPane((item) => {\r\n    for (const key in settings) {\r\n      item.setOption(key, settings[key])\r\n    }\r\n  }, /terminal\\-julia\\-\\d+|julia\\-terminal|terminal\\-remote\\-julia\\-\\d+/)\r\n}\r\n\r\nfunction forEachPane (f, id = /terminal\\-julia\\-\\d+/) {\r\n  atom.workspace.getPaneItems().forEach((item) => {\r\n    if (item.id && item.name === 'InkTerminal' && item.id.match(id)) {\r\n      f(item)\r\n    }\r\n  })\r\n}\r\n\r\nfunction hasKeyboardModifier (event) {\r\n  if (atom.config.get('julia-client.consoleOptions.linkModifier')) {\r\n    return process.platform == 'darwin' ? event.metaKey : event.ctrlKey\r\n  }\r\n  return true\r\n}\r\n\r\nfunction handleLink (event, uri) {\r\n  if (!hasKeyboardModifier(event)) return false\r\n\r\n  if (client.isActive()) {\r\n    fullpath(uri).then(([path, line]) => {\r\n      ink.Opener.open(path, line - 1, {\r\n        pending: atom.config.get('core.allowPendingPaneItems')\r\n      })\r\n    })\r\n  } else {\r\n    let urimatch = uri.match(/@ ([^\\s]+)\\s(.*?)\\:(\\d+)/)\r\n    if (urimatch) {\r\n      ink.Opener.open(urimatch[1], parseInt(urimatch[2]) - 1, {\r\n        pending: atom.config.get('core.allowPendingPaneItems')\r\n      })\r\n    } else {\r\n      const matchregex = isWindows ?\r\n        /(([a-zA-Z]\\:)?[^\\:]+)(?:\\:(\\d+))?/ :\r\n        /([^\\:]+)(?:\\:(\\d+))?/\r\n      urimatch = uri.match(matchregex)\r\n      if (urimatch) {\r\n        const line = urimatch[2] !== null ? parseInt(urimatch[2]) : 0\r\n        ink.Opener.open(urimatch[1], line - 1, {\r\n          pending: atom.config.get('core.allowPendingPaneItems')\r\n        })\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction addLinkHandler (terminal) {\r\n  terminal.registerLinkMatcher(uriRegex, handleLink, {\r\n    willLinkActivate: ev => hasKeyboardModifier(ev),\r\n    tooltipCallback: (ev, uri, location) => showTooltip(ev, uri, location, terminal),\r\n    leaveCallback: () => hideTooltip()\r\n  })\r\n}\r\n\r\nlet tooltip = null\r\n\r\nfunction showTooltip (event, uri, location, terminal) {\r\n  hideTooltip()\r\n\r\n  if (atom.config.get('julia-client.consoleOptions.linkModifier')) {\r\n    const el = document.createElement('div')\r\n    el.classList.add('terminal-link-tooltip')\r\n\r\n    const terminalRect = terminal.element.getBoundingClientRect()\r\n    const colWidth = terminalRect.width / terminal.cols\r\n    const rowHeight = terminalRect.height / terminal.rows\r\n\r\n    const leftPosition = location.start.x * colWidth + terminalRect.left\r\n    const topPosition = (location.start.y - 1.5) * rowHeight + terminalRect.top\r\n\r\n    el.style.top = topPosition + 'px'\r\n    el.style.left = leftPosition + 'px'\r\n\r\n    el.innerText = (process.platform == 'darwin' ? 'Cmd' : 'Ctrl') + '-Click to open link.'\r\n\r\n    tooltip = el\r\n    document.body.appendChild(el)\r\n\r\n    return true\r\n  } else {\r\n    return false\r\n  }\r\n}\r\n\r\nfunction hideTooltip () {\r\n  if (tooltip) {\r\n    try {\r\n      document.body.removeChild(tooltip)\r\n    } catch (err) {\r\n\r\n    } finally {\r\n      tooltip = null\r\n    }\r\n  }\r\n}\r\n\r\nfunction handleKeybinding (e, term, binds = whitelistedKeybindingsTerminal) {\r\n  if (process.platform !== 'win32' && e.keyCode === 13 && (e.altKey || e.metaKey) && e.type === 'keydown') {\r\n    // Meta-Enter doesn't work properly with xterm.js atm, so we send the right escape sequence ourselves:\r\n    if (term.ty) {\r\n      term.ty.write('\\x1b\\x0d')\r\n    }\r\n    return false\r\n  } else if (binds.indexOf(atom.keymaps.keystrokeForKeyboardEvent(e)) > -1) {\r\n    // let certain user defined key events fall through to Atom's handler\r\n    return false\r\n  }\r\n  return e\r\n}\r\n\r\nfunction remotePty () {\r\n  return withRemoteConfig(conf => {\r\n    return new Promise((resolve, reject) => {\r\n      const conn = new ssh.Client()\r\n      conn.on('ready', () => {\r\n        conn.shell({ term: \"xterm-256color\" }, (err, stream) => {\r\n          if (err) console.error(`Error while starting remote shell.`)\r\n\r\n          stream.on('close', () => {\r\n            conn.end()\r\n          })\r\n\r\n          // forward resize handling\r\n          stream.resize = (cols, rows) => stream.setWindow(rows, cols, 999, 999)\r\n\r\n          resolve({pty: stream, cwd: '~', conf: conf})\r\n        })\r\n      }).connect(conf)\r\n    })\r\n  })\r\n}\r\n\r\nfunction shellPty (cwd) {\r\n  process.env['TERM'] = 'xterm-256color'\r\n  return new Promise((resolve, reject) => {\r\n    let pr\r\n    if (cwd) {\r\n      pr = new Promise((resolve) => resolve(cwd))\r\n    } else {\r\n      // show project paths\r\n      pr = selector.show(atom.project.getPaths(), {\r\n        emptyMessage: 'Enter a custom path above.',\r\n        allowCustom: true\r\n      })\r\n    }\r\n    pr.then((cwd) => {\r\n      if (cwd) {\r\n        cwd = paths.expandHome(cwd)\r\n        if (!require('fs').existsSync(cwd)) {\r\n          atom.notifications.addWarning(\"Path does not exist.\", {\r\n            description: \"Defaulting to `HOME` for new terminal's working directory.\"\r\n          })\r\n          cwd = paths.home()\r\n        }\r\n        const env = customEnv()\r\n        const ty = pty.spawn(atom.config.get(\"julia-client.consoleOptions.shell\"), [], {\r\n          cols: 100,\r\n          rows: 30,\r\n          cwd: cwd,\r\n          env: env,\r\n          useConpty: true,\r\n          handleFlowControl: true\r\n        })\r\n        resolve({\r\n          pty: ty,\r\n          cwd: cwd})\r\n      } else {\r\n        reject()\r\n      }\r\n    })\r\n  })\r\n}\r\n\r\nexport function deactivate () {\r\n  // detach node-pty process from ink terminals; necessary for updates to work cleanly\r\n  forEachPane(item => item.detach(), /terminal\\-julia\\-\\d+/)\r\n  // remote terminals shouldn't be serialized\r\n  forEachPane(item => {\r\n    item.detach()\r\n    item.close()\r\n  }, /terminal\\-remote\\-julia\\-\\d+/)\r\n  if (terminal) terminal.detach()\r\n  if (subs) subs.dispose()\r\n  subs = null\r\n}\r\n","/** @babel */\r\n\r\n/**\r\n * @TODO: Custom sorting?\r\n * @TODO: Complete quotes for strings\r\n */\r\n\r\nimport { CompositeDisposable, Point, Range } from 'atom'\r\n\r\nimport { client } from '../connection'\r\nimport modules from './modules'\r\n\r\nimport { getLocalContext } from '../misc/blocks'\r\n\r\nconst bracketScope = 'meta.bracket.julia'\r\nconst baselineCompletionAdapter = client.import('completions')\r\nconst completionDetail = client.import('completiondetail')\r\n\r\nclass AutoCompleteProvider {\r\n  selector = '.source.julia'\r\n  disableForSelector = `.source.julia .comment`\r\n  excludeLowerPriority = true\r\n  inclusionPriority = 1\r\n  suggestionPriority = atom.config.get('julia-client.juliaOptions.autoCompletionSuggestionPriority')\r\n  filterSuggestions = false\r\n\r\n  activate () {\r\n    this.subscriptions = new CompositeDisposable()\r\n    this.subscriptions.add(\r\n      atom.config.observe('julia-client.juliaOptions.fuzzyCompletionMode', v => {\r\n        this.fuzzyCompletionMode = v\r\n      }),\r\n      atom.config.observe('julia-client.juliaOptions.noAutoParenthesis', v => {\r\n        this.noAutoParenthesis = v\r\n      })\r\n    )\r\n  }\r\n\r\n  deactivate () {\r\n    this.subscriptions.dispose()\r\n  }\r\n\r\n  getSuggestions (data) {\r\n    if (!client.isActive()) return []\r\n    const { editor, bufferPosition, activatedManually } = data\r\n    const { row, column } = bufferPosition\r\n    const startPoint = new Point(row, 0)\r\n    const endPoint = new Point(row, column)\r\n    const lineRange = new Range(startPoint, endPoint)\r\n    const line = editor.getTextInBufferRange(lineRange)\r\n\r\n    // suppress completions if an whitespace precedes, except the special cases below\r\n    // - activatedManually (i.e. an user forces completions)\r\n    // - the current position is in function call: show method completions\r\n    // - after `using`/`import` keyword: show package completions\r\n    if (!activatedManually) {\r\n      if (column === 0) return []\r\n      const prevCharPosition = new Point(row, column - 1)\r\n      const charRange = new Range(prevCharPosition, bufferPosition)\r\n      const char = editor.getTextInBufferRange(charRange)\r\n      const { scopes } = editor.scopeDescriptorForBufferPosition(bufferPosition)\r\n      if (\r\n        !scopes.includes(bracketScope) &&\r\n        !(/\\b(import|using)\\b/.test(line)) &&\r\n        char === ' '\r\n      ) return []\r\n    }\r\n\r\n    const baselineCompletions = this.baselineCompletions(data, line)\r\n    return Promise.race([baselineCompletions, this.sleep()])\r\n  }\r\n\r\n  baselineCompletions (data, line) {\r\n    const { editor, bufferPosition: { row, column }, activatedManually } = data\r\n    const { context, startRow } = getLocalContext(editor, row)\r\n    return baselineCompletionAdapter({\r\n      // general\r\n      line,\r\n      path: editor.getPath(),\r\n      mod: modules.current(),\r\n      // local context\r\n      context,\r\n      row: row + 1,\r\n      startRow,\r\n      column: column + 1,\r\n      // configurations\r\n      is_fuzzy: this.fuzzyCompletionMode,\r\n      force: activatedManually || false,\r\n    }).then(completions => {\r\n      return completions.map(completion => {\r\n        return this.toCompletion(completion)\r\n      })\r\n    }).catch(() => {\r\n      return []\r\n    })\r\n  }\r\n\r\n  toCompletion (completion) {\r\n    const icon = this.makeIcon(completion.icon)\r\n    if (icon) completion.iconHTML = icon\r\n    // workaround https://github.com/atom/autocomplete-plus/issues/868\r\n    if (!completion.description && completion.descriptionMoreURL) {\r\n      completion.description = ' '\r\n    }\r\n    return completion\r\n  }\r\n\r\n  // should sync with atom-ink/lib/workspace/workspace.js\r\n  makeIcon(icon) {\r\n    // if not specified, just fallback to `completion.type`\r\n    if (!icon) return ''\r\n    if (icon.startsWith('icon-')) return `<span class=\"${icon}\"}></span>`\r\n    return icon.length === 1 ? icon : ''\r\n  }\r\n\r\n  sleep () {\r\n    return new Promise(resolve => {\r\n      setTimeout(() => {\r\n        resolve(null)\r\n      }, 1000)\r\n    })\r\n  }\r\n\r\n  getSuggestionDetailsOnSelect (_completion) {\r\n    const completionWithDetail = completionDetail(_completion).then(completion => {\r\n      // workaround https://github.com/atom/autocomplete-plus/issues/868\r\n      if (!completion.description && completion.descriptionMoreURL) {\r\n        completion.description = ' '\r\n      }\r\n      return completion\r\n    }).catch(err => {\r\n      console.log(err)\r\n    })\r\n    return Promise.race([completionWithDetail, this.sleep()])\r\n  }\r\n\r\n  onDidInsertSuggestion ({ editor, suggestion: { type } }) {\r\n    if (type !== 'function' || this.noAutoParenthesis) return\r\n    editor.mutateSelectedText(selection => {\r\n      if (!selection.isEmpty()) return\r\n      const { row, column } = selection.getBufferRange().start\r\n      const currentPoint = new Point(row, column)\r\n      const nextPoint = new Point(row, column + 1)\r\n      const range = new Range(currentPoint, nextPoint)\r\n      const finishRange = new Range(nextPoint, nextPoint)\r\n      if (editor.getTextInBufferRange(range) !== '(') {\r\n        selection.insertText('()')\r\n      }\r\n      selection.setBufferRange(finishRange)\r\n    })\r\n  }\r\n}\r\n\r\nexport default new AutoCompleteProvider()\r\n","\r\n\r\nimport { client } from '../connection'\r\nimport { views } from '../ui'\r\n\r\nconst { webview } = views.tags\r\n\r\nfunction consoleLog (e) {\r\n  let log\r\n  if (e.level === 0) {\r\n    log = console.log\r\n  } else if (e.level === 1) {\r\n    log = console.warn\r\n  } else if (e.level === 2) {\r\n    log = console.error\r\n  }\r\n  log(e.message, `\\nat ${e.sourceID}:${e.line}`)\r\n}\r\n\r\n// https://stackoverflow.com/a/5100158/12113178\r\nfunction dataURItoBlob (dataURI) {\r\n  // convert base64/URLEncoded data component to raw binary data held in a string\r\n  let byteString\r\n  if (dataURI.split(',')[0].indexOf('base64') >= 0)\r\n      byteString = atob(dataURI.split(',')[1])\r\n  else\r\n      byteString = unescape(dataURI.split(',')[1])\r\n\r\n  // separate out the mime component\r\n  var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\r\n\r\n  // write the bytes of the string to a typed array\r\n  var ia = new Uint8Array(byteString.length)\r\n  for (var i = 0; i < byteString.length; i++) {\r\n      ia[i] = byteString.charCodeAt(i)\r\n  }\r\n\r\n  return new Blob([ia], {type:mimeString})\r\n}\r\n\r\nexport default {\r\n  activate () {\r\n    client.handle({\r\n      plot: x => this.show(x),\r\n      plotsize: () => this.plotSize(),\r\n      ploturl: url => this.ploturl(url),\r\n      jlpane: (id, opts) => this.jlpane(id, opts)\r\n    })\r\n    this.create()\r\n\r\n    atom.config.observe('julia-client.uiOptions.usePlotPane', enabled => {\r\n      if (enabled) {\r\n        return this.pane.setTitle('Plots')\r\n      } else {\r\n        return this.pane.setTitle('Plots (disabled)')\r\n      }\r\n    })\r\n\r\n    return atom.config.observe('julia-client.uiOptions.layouts.plotPane.defaultLocation', defaultLocation => {\r\n      this.pane.setDefaultLocation(defaultLocation)\r\n    })\r\n  },\r\n\r\n  create () {\r\n    return this.pane = this.ink.PlotPane.fromId('default')\r\n  },\r\n\r\n  open () {\r\n    return this.pane.open({\r\n      split: atom.config.get('julia-client.uiOptions.layouts.plotPane.split')})\r\n  },\r\n\r\n  ensureVisible () {\r\n    return this.pane.ensureVisible({ split: atom.config.get('julia-client.uiOptions.layouts.plotPane.split') })\r\n  },\r\n\r\n  close () {\r\n    return this.pane.close()\r\n  },\r\n\r\n  show (view) {\r\n    this.ensureVisible()\r\n    const v = views.render(view)\r\n    this.pane.show(new this.ink.Pannable(v), {\r\n      maxSize: atom.config.get('julia-client.uiOptions.maxNumberPlots')\r\n    })\r\n    return v\r\n  },\r\n\r\n  plotSize () {\r\n    return this.ensureVisible().then(() => {\r\n      return {\r\n        size: this.pane.size(),\r\n        ratio: window.devicePixelRatio\r\n      }\r\n    })\r\n  },\r\n\r\n  webview (url) {\r\n    const isDataURI = url.startsWith('data')\r\n    if (isDataURI) {\r\n      const object = dataURItoBlob(url)\r\n      url = URL.createObjectURL(object)\r\n    }\r\n\r\n    const v = views.render(webview({\r\n      class: 'blinkjl',\r\n      src: url,\r\n      style: 'width: 100%; height: 100%'\r\n    }))\r\n    v.classList.add('native-key-bindings')\r\n    v.addEventListener('console-message', e => consoleLog(e))\r\n    if (isDataURI) {\r\n      v.addEventListener('dom-ready', e => {\r\n        URL.revokeObjectURL(url)\r\n      })\r\n    }\r\n    return v\r\n  },\r\n\r\n  ploturl (url) {\r\n    const v = this.webview(url)\r\n    this.ensureVisible()\r\n    return this.pane.show(v, {\r\n      maxSize: atom.config.get('julia-client.uiOptions.maxNumberPlots')\r\n    })\r\n  },\r\n\r\n  jlpane (id, opts) {\r\n    if (opts == null) { opts = {} }\r\n    let v = undefined\r\n    if (opts.url) {\r\n      v = this.webview(opts.url)\r\n      if (opts.devtools) {\r\n        v.addEventListener('dom-ready', () => {\r\n          return v.openDevTools()\r\n        })\r\n      }\r\n    }\r\n\r\n    const pane = this.ink.HTMLPane.fromId(id)\r\n\r\n    if (opts.close) {\r\n      return pane.close()\r\n    } else if (opts.destroy) {\r\n      if (pane.closeAndDestroy) {\r\n        return pane.closeAndDestroy()\r\n      }\r\n    } else {\r\n      pane.show({\r\n        item: v,\r\n        icon: opts.icon,\r\n        title: opts.title\r\n      })\r\n\r\n      return pane.ensureVisible({\r\n        split: opts.split || atom.config.get('julia-client.uiOptions.layouts.plotPane.split')\r\n      })\r\n    }\r\n  }\r\n}\r\n","{BrowserWindow} = require('electron').remote\r\nvm = require 'vm'\r\n\r\n{client} = require '../connection'\r\n{selector, notifications} = require '../ui'\r\n{colors} = require '../misc'\r\n\r\nmodule.exports =\r\n  evalwith: (obj, code) ->\r\n    vm.runInThisContext(\"(function(){return #{code}})\").call obj\r\n\r\n  windows: {}\r\n\r\n  activate: ->\r\n    client.handle select: (items) -> selector.show items\r\n\r\n    client.handle input: () -> selector.show([], {allowCustom: true})\r\n\r\n    client.handle syntaxcolors: (selectors) -> colors.getColors(selectors)\r\n\r\n    client.handle openFile: (file, line) => @ink?.Opener.open(file, line, {\r\n      pending: atom.config.get('core.allowPendingPaneItems')\r\n    })\r\n\r\n    client.handle versionwarning: (msg) ->\r\n      atom.notifications.addWarning \"Outdated version of Atom.jl detected.\",\r\n        description: msg\r\n        dismissable: true\r\n\r\n    # Blink APIs\r\n\r\n    client.handle\r\n      createWindow: (opts) =>\r\n        w = new BrowserWindow opts\r\n        if opts.url?\r\n          w.loadURL opts.url\r\n        w.setMenu(null)\r\n        wid = w.id\r\n        @windows[wid] = w\r\n        w.on 'close', => delete @windows[wid]\r\n        return wid\r\n\r\n      withWin: (id, code) =>\r\n        @evalwith @windows[id], code\r\n\r\n      winActive: (id) =>\r\n        @windows.hasOwnProperty id\r\n\r\n      notify: (msg) ->\r\n        notifications.show msg, true\r\n\r\n\r\n    client.onDetached =>\r\n      for id, win of @windows\r\n        delete @windows[id]\r\n        win.close()\r\n\r\n  deactivate: ->\r\n    for id, win of @windows\r\n      win.close()\r\n","\r\n/** @jsx etch.dom */\r\n\r\nimport { CompositeDisposable } from 'atom'\r\nimport { views } from '../ui'\r\nimport { client } from '../connection'\r\nimport connection from '../connection'\r\nimport { blocks, cells, paths } from '../misc'\r\nimport modules from './modules'\r\n\r\nimport workspace from './workspace'\r\n\r\nconst { debugfile, module: getmodule } = client.import(['debugfile', 'module'])\r\n\r\nlet active, stepper, subs, breakpoints, debuggerPane, ink\r\n\r\nconst buttonSVGs = {\r\n  'step-in': `\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 80 80\">\r\n        <line x1=\"33.33\" y1=\"20\" x2=\"73.33\" y2=\"20\" style=\"fill:none;stroke:var(--color);stroke-miterlimit:10;stroke-width:8px\"/>\r\n        <line x1=\"33.33\" y1=\"33.33\" x2=\"73.33\" y2=\"33.33\" style=\"fill:none;stroke:var(--color);stroke-miterlimit:10;stroke-width:8px\"/>\r\n        <line x1=\"53.33\" y1=\"46.67\" x2=\"73.33\" y2=\"46.67\" style=\"fill:none;stroke:var(--color);stroke-miterlimit:10;stroke-width:8px\"/>\r\n        <polyline points=\"20 13.33 20 53.33 33.11 53.33\" style=\"fill:none;stroke:var(--color);stroke-miterlimit:10;stroke-width:8px\"/>\r\n        <polygon points=\"29.61 65.3 50.33 53.34 29.61 41.37 29.61 65.3\" style=\"fill:var(--color)\"/>\r\n        <line x1=\"53.33\" y1=\"60\" x2=\"73.33\" y2=\"60\" style=\"fill:none;stroke:var(--color);stroke-miterlimit:10;stroke-width:8px\"/>\r\n    </svg>\r\n  `,\r\n  'step-out': `\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 80 80\">\r\n        <line x1=\"40\" y1=\"46.67\" x2=\"73.33\" y2=\"46.67\" style=\"fill:none;stroke:var(--color);stroke-miterlimit:10;stroke-width:8px\"/>\r\n        <line x1=\"40\" y1=\"60\" x2=\"73.33\" y2=\"60\" style=\"fill:none;stroke:var(--color);stroke-miterlimit:10;stroke-width:8px\"/>\r\n        <line x1=\"53.33\" y1=\"20\" x2=\"73.33\" y2=\"20\" style=\"fill:none;stroke:var(--color);stroke-miterlimit:10;stroke-width:8px\"/>\r\n        <polyline points=\"46.67 26.67 20 26.67 20 49.45\" style=\"fill:none;stroke:var(--color);stroke-miterlimit:10;stroke-width:8px\"/>\r\n        <polygon points=\"8.03 45.94 20 66.67 31.97 45.94 8.03 45.94\" style=\"fill:var(--color)\"/>\r\n        <line x1=\"53.33\" y1=\"33.33\" x2=\"73.33\" y2=\"33.33\" style=\"fill:none;stroke:var(--color);stroke-miterlimit:10;stroke-width:8px\"/>\r\n    </svg>\r\n  `,\r\n  'step-to-selection': `\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 80 80\">\r\n        <line x1=\"40\" y1=\"20\" x2=\"73.33\" y2=\"20\" style=\"fill:none;stroke:var(--color);stroke-miterlimit:10;stroke-width:8px\"/>\r\n        <line x1=\"40\" y1=\"33.33\" x2=\"73.33\" y2=\"33.33\" style=\"fill:none;stroke:var(--color);stroke-miterlimit:10;stroke-width:8px\"/>\r\n        <line x1=\"20\" y1=\"13.33\" x2=\"20\" y2=\"49.44\" style=\"fill:none;stroke:var(--color);stroke-miterlimit:10;stroke-width:8px\"/>\r\n        <polygon points=\"8.03 45.94 20 66.67 31.97 45.94 8.03 45.94\" style=\"fill:var(--color)\"/>\r\n        <line x1=\"40\" y1=\"46.67\" x2=\"73.33\" y2=\"46.67\" style=\"fill:none;stroke:var(--color-highlight);stroke-miterlimit:10;stroke-width:8px\"/>\r\n        <line x1=\"20\" y1=\"13.33\" x2=\"20\" y2=\"49.44\" style=\"fill:none;stroke:var(--color);stroke-miterlimit:10;stroke-width:8px\"/>\r\n        <polygon points=\"8.03 45.94 20 66.67 31.97 45.94 8.03 45.94\" style=\"fill:var(--color)\"/>\r\n        <line x1=\"73.33\" y1=\"60\" x2=\"40\" y2=\"60\" style=\"fill:none;stroke:var(--color-subtle);stroke-miterlimit:10;stroke-width:8px\"/>\r\n    </svg>\r\n  `,\r\n  'step-line': `\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 80 80\">\r\n        <line x1=\"40\" y1=\"20\" x2=\"73.33\" y2=\"20\" style=\"fill:none;stroke:var(--color);stroke-miterlimit:10;stroke-width:8px\"/>\r\n        <line x1=\"40\" y1=\"33.33\" x2=\"73.33\" y2=\"33.33\" style=\"fill:none;stroke:var(--color-subtle);stroke-miterlimit:10;stroke-width:8px\"/>\r\n        <line x1=\"40\" y1=\"46.67\" x2=\"73.33\" y2=\"46.67\" style=\"fill:none;stroke:var(--color-subtle);stroke-miterlimit:10;stroke-width:8px\"/>\r\n        <line x1=\"20\" y1=\"13.33\" x2=\"20\" y2=\"49.44\" style=\"fill:none;stroke:var(--color);stroke-miterlimit:10;stroke-width:8px\"/>\r\n        <polygon points=\"8.03 45.94 20 66.67 31.97 45.94 8.03 45.94\" style=\"fill:var(--color)\"/>\r\n        <line x1=\"40\" y1=\"60\" x2=\"73.33\" y2=\"60\" style=\"fill:none;stroke:var(--color-subtle);stroke-miterlimit:10;stroke-width:8px\"/>\r\n        <line x1=\"20\" y1=\"13.33\" x2=\"20\" y2=\"49.44\" style=\"fill:none;stroke:var(--color);stroke-miterlimit:10;stroke-width:8px\"/>\r\n        <polygon points=\"8.03 45.94 20 66.67 31.97 45.94 8.03 45.94\" style=\"fill:var(--color)\"/>\r\n    </svg>\r\n  `,\r\n  'step-expr': `\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 80 80\">\r\n        <path d=\"M23.08,35.74V40H8.79V17.26H23.08v4.26H13.66v5.06h8.87V30.5H13.66v5.25Z\" style=\"fill:var(--color)\"/>\r\n        <path d=\"M33.36,34.33h-.18L30.36,40H25.45l4.94-8.54-4.94-8.68h5.34l2.63,5.63h.19l2.63-5.63h5.11l-5,8.53,5,8.7H36.22Z\" style=\"fill:var(--color)\"/>\r\n        <path d=\"M53.35,22.54a5.62,5.62,0,0,1,4.79,2.34,10.78,10.78,0,0,1,1.73,6.52,10.86,10.86,0,0,1-1.71,6.5,6,6,0,0,1-7.74,1.55,4.77,4.77,0,0,1-1.88-2.22h-.18v8.42H43.67V22.77h4.61v2.9h.18a5.05,5.05,0,0,1,1.93-2.3A5.36,5.36,0,0,1,53.35,22.54Zm-1.66,13.7a2.85,2.85,0,0,0,2.46-1.29,6.09,6.09,0,0,0,.91-3.55,6.14,6.14,0,0,0-.91-3.55,3,3,0,0,0-4.91,0,6.18,6.18,0,0,0-.93,3.54,6.17,6.17,0,0,0,.92,3.54A2.84,2.84,0,0,0,51.69,36.23Z\" style=\"fill:var(--color)\"/>\r\n        <path d=\"M62.63,40V22.77h4.55v3h.19a4.3,4.3,0,0,1,1.41-2.35,3.82,3.82,0,0,1,2.52-.87,4.63,4.63,0,0,1,1.52.2v4.37A4.77,4.77,0,0,0,71,26.82a3.5,3.5,0,0,0-2.66,1,3.89,3.89,0,0,0-1,2.81V40Z\" style=\"fill:var(--color)\"/>\r\n        <polyline points=\"6.67 60 33.33 60 56.69 60\" style=\"fill:none;stroke:var(--color);stroke-miterlimit:10;stroke-width:8px\"/>\r\n        <polygon points=\"53.3 71.57 73.33 60 53.3 48.43 53.3 71.57\" style=\"fill:var(--color)\"/>\r\n    </svg>\r\n  `\r\n}\r\n\r\nexport function activate (_ink) {\r\n  ink = _ink\r\n  const buttons = [\r\n    {icon: 'playback-fast-forward', tooltip: 'Debug: Continue', command: 'julia-debug:continue', color: 'success'},\r\n    {tooltip: 'Debug: Next Line', command: 'julia-debug:step-to-next-line', svg: buttonSVGs['step-line']},\r\n    {tooltip: 'Debug: Step to Selected Line', command: 'julia-debug:step-to-selected-line', svg: buttonSVGs['step-to-selection']},\r\n    {tooltip: 'Debug: Next Expression', command: 'julia-debug:step-to-next-expression', svg: buttonSVGs['step-expr']},\r\n    {tooltip: 'Debug: Step Into', command: 'julia-debug:step-into', svg: buttonSVGs['step-in']},\r\n    {tooltip: 'Debug: Step Out', command: 'julia-debug:step-out', svg: buttonSVGs['step-out']},\r\n    {icon: 'x', tooltip: 'Debug: Stop Debugging', command: 'julia-debug:stop-debugging', color: 'error'},\r\n  ]\r\n  const startButtons = [\r\n    {text: 'Run File', tooltip: 'Debug: Run File', command: 'julia-debug:run-file'},\r\n    {text: 'Step Through File', tooltip: 'Debug: Step Through File', command: 'julia-debug:step-through-file'},\r\n    {text: 'Run Block', tooltip: 'Debug: Run Block', command: 'julia-debug:run-block'},\r\n    {text: 'Step Through Block', tooltip: 'Debug: Step Through Block', command: 'julia-debug:step-through-block'},\r\n  ]\r\n  stepper = new ink.Stepper({\r\n    buttons: buttons,\r\n    pending: !atom.config.get('julia-client.uiOptions.openNewEditorWhenDebugging')\r\n  })\r\n  breakpoints = new ink.breakpoints(atom.config.get('julia-client.juliaSyntaxScopes'), {\r\n    toggle: toggleJuliaBP,\r\n    clear: clearJulia,\r\n    toggleUncaught: toggleUncaughtJulia,\r\n    toggleException: toggleExceptionJulia,\r\n    refresh: getBreakpoints,\r\n    addArgs: addArgsJulia,\r\n    toggleActive: toggleActiveJulia,\r\n    toggleAllActive: toggleAllActiveJulia,\r\n    addCondition: addCondition,\r\n    setLevel: setLevel,\r\n    toggleCompiled: toggleCompiled\r\n  })\r\n  debuggerPane = ink.DebuggerPane.fromId('julia-debugger-pane', stepper, breakpoints, buttons, startButtons)\r\n\r\n  subs = new CompositeDisposable()\r\n  subs.add(atom.config.observe('julia-client.uiOptions.layouts.debuggerPane.defaultLocation', (defaultLocation) => {\r\n    debuggerPane.setDefaultLocation(defaultLocation)\r\n  }))\r\n  subs.add(client.onDetached(() => {\r\n    debugmode(false)\r\n    breakpoints.clear(true)\r\n  }))\r\n}\r\n\r\nexport function deactivate() {\r\n  breakpoints.destroy()\r\n  subs.dispose()\r\n}\r\n\r\nexport function open () {\r\n  return debuggerPane.open({\r\n    split: atom.config.get('julia-client.uiOptions.layouts.debuggerPane.split')\r\n  })\r\n}\r\n\r\nexport function close () {\r\n  return debuggerPane.close()\r\n}\r\n\r\nfunction activeError(ev) {\r\n  if (!active) {\r\n    // Only show an error when toolbar button or command is used directly. `ev.originalEvent` is\r\n    // a `KeyboardEvent` if this was triggered by a keystroke.\r\n    if (ev.originalEvent === undefined) {\r\n      atom.notifications.addError('You need to be debugging to do that.', {\r\n        description: 'You can start debugging by calling `Juno.@enter f(args...)` from the integrated REPL.',\r\n        dismissable: true\r\n      })\r\n    }\r\n    return true\r\n  }\r\n  return false\r\n}\r\n\r\nfunction requireDebugging(ev, f) {\r\n  if (activeError(ev)) {\r\n    ev.abortKeyBinding()\r\n  } else {\r\n    f()\r\n  }\r\n}\r\n\r\nfunction requireNotDebugging(f) {\r\n  if (active) {\r\n    atom.notifications.addError('Can\\'t start a debugging session while debugging.', {\r\n      description: 'Please finish the current session first.',\r\n      dismissable: true\r\n    })\r\n  } else {\r\n    f()\r\n  }\r\n}\r\n\r\nfunction debugmode(a) {\r\n  active = a\r\n  if (!active) {\r\n    stepper.destroy()\r\n    workspace.update()\r\n    debuggerPane.reset()\r\n  } else {\r\n    debuggerPane.ensureVisible()\r\n  }\r\n}\r\n\r\nclient.handle({\r\n  debugmode,\r\n  stepto(file, line, text, moreinfo) {\r\n    stepper.step(file, line - 1, views.render(text), moreinfo)\r\n    workspace.update()\r\n  },\r\n  working() { client.ipc.loading.working() },\r\n  doneWorking() { client.ipc.loading.done() },\r\n  getFileBreakpoints() {\r\n    const bps = breakpoints.getFileBreakpoints()\r\n    return bps.filter(bp => bp.isactive).map(bp => {\r\n      return {\r\n        file: bp.file,\r\n        line: bp.line,\r\n        condition: bp.condition\r\n      }\r\n    })\r\n  }\r\n})\r\n\r\nexport function finish (ev)   { requireDebugging(ev, () => client.import('finish')()) }\r\nexport function nextline (ev) { requireDebugging(ev, () => client.import('nextline')()) }\r\nexport function stepexpr (ev) { requireDebugging(ev, () => client.import('stepexpr')()) }\r\nexport function stepin (ev)   { requireDebugging(ev, () => client.import('stepin')()) }\r\nexport function stop (ev)     { requireDebugging(ev, () => client.import('stop')()) }\r\nexport function continueForward (ev) { requireDebugging(ev, () => client.import('continue')()) }\r\nexport function toselectedline (ev) {\r\n  requireDebugging(ev, () => {\r\n    const ed = stepper.edForFile(stepper.file)\r\n    if (ed != null) {\r\n      client.import('toline')(ed.getCursorBufferPosition().row + 1)\r\n    }\r\n  })\r\n}\r\n\r\nexport function debugFile(shouldStep, el) {\r\n  requireNotDebugging(() => {\r\n    if (el) {\r\n      const path = paths.getPathFromTreeView(el)\r\n      if (!path) {\r\n        atom.notifications.addError('This file has no path.')\r\n        return\r\n      }\r\n      try {\r\n        const code = paths.readCode(path)\r\n        const data = { path, code, row: 1, column: 1 }\r\n        getmodule(data).then(mod => {\r\n          debugfile(modules.current(mod), code, path, shouldStep)\r\n        }).catch(err => {\r\n          console.log(err)\r\n        })\r\n      } catch (err) {\r\n        atom.notifications.addError('Error happened', {\r\n          detail: err,\r\n          dismissable: true\r\n        })\r\n      }\r\n    } else {\r\n      const ed = atom.workspace.getActiveTextEditor()\r\n      if (!(ed && ed.getGrammar && ed.getGrammar().id === 'source.julia')) {\r\n        atom.notifications.addError('Can\\'t debug current file.', {\r\n          description: 'Please make sure a Julia file is open in the workspace.'\r\n        })\r\n        return\r\n      }\r\n      const edpath = client.editorPath(ed) || 'untitled-' + ed.getBuffer().id\r\n      const mod = modules.current() || 'Main'\r\n      debugfile(mod, ed.getText(), edpath, shouldStep)\r\n    }\r\n  })\r\n}\r\n\r\nexport function debugBlock(shouldStep, cell) {\r\n  requireNotDebugging(() => {\r\n    const ed = atom.workspace.getActiveTextEditor()\r\n    if (!ed) {\r\n      atom.notifications.addError('Can\\'t debug current code block.', {\r\n        description: 'Please make sure a file is open in the workspace.'\r\n      })\r\n      return\r\n    }\r\n    const edpath = client.editorPath(ed) || 'untitled-' + ed.getBuffer().id\r\n    const mod = modules.current() || 'Main'\r\n    const selector = cell ? cells : blocks\r\n    const blks = selector.get(ed)\r\n    if (blks.length === 0) {\r\n      return\r\n    }\r\n    const { range, text, line } = blks[0]\r\n    const [[start], [end]] = range\r\n    ink.highlight(ed, start, end)\r\n    debugfile(mod, text, edpath, shouldStep, line)\r\n  })\r\n}\r\n\r\nexport function clearbps() {\r\n  connection.boot()\r\n  breakpoints.clear()\r\n  if (client.isActive()) client.import('clearbps')()\r\n}\r\n\r\nfunction toggleJuliaBP (item) {\r\n  connection.boot()\r\n  return client.import('toggleBP')(item)\r\n}\r\nfunction clearJulia () {\r\n  connection.boot()\r\n  return client.import('clearbps')()\r\n}\r\nfunction toggleUncaughtJulia () {\r\n  connection.boot()\r\n  return client.import('toggleUncaught')()\r\n}\r\nfunction toggleExceptionJulia () {\r\n  connection.boot()\r\n  return client.import('toggleException')()\r\n}\r\nfunction toggleCompiled () {\r\n  connection.boot()\r\n  return client.import('toggleCompiled')()\r\n}\r\nfunction getBreakpoints () {\r\n  connection.boot()\r\n  return client.import('getBreakpoints')()\r\n}\r\nfunction addArgsJulia (args) {\r\n  connection.boot()\r\n  return client.import('addArgs')(args)\r\n}\r\nfunction toggleAllActiveJulia (args) {\r\n  connection.boot()\r\n  return client.import('toggleAllActiveBP')(args)\r\n}\r\nfunction toggleActiveJulia (item) {\r\n  connection.boot()\r\n  return client.import('toggleActiveBP')(item)\r\n}\r\nfunction addCondition (item, cond) {\r\n  connection.boot()\r\n  return client.import('addConditionById')(item, cond)\r\n}\r\nfunction setLevel (level) {\r\n  connection.boot()\r\n  return client.import('setStackLevel')(level)\r\n}\r\n\r\nexport function togglebp (\r\n  cond = false,\r\n  ed = atom.workspace.getActiveTextEditor()\r\n) {\r\n  if (!ed || !ed.getPath()) {\r\n    atom.notifications.addError('Need a saved file to add a breakpoint')\r\n    return\r\n  }\r\n  const file = client.editorPath(ed)\r\n  ed.getCursors().map((cursor) => {\r\n    const line = cursor.getBufferPosition().row + 1\r\n    if (cond) {\r\n      breakpoints.toggleConditionAtSourceLocation({\r\n        file: file,\r\n        line: line\r\n      })\r\n    } else {\r\n      breakpoints.toggleAtSourceLocation({\r\n        file: file,\r\n        line: line\r\n      })\r\n    }\r\n  })\r\n}\r\n","\r\n\r\nimport { client } from '../connection'\r\nimport { CompositeDisposable } from 'atom'\r\nimport { remote } from 'electron'\r\n\r\nlet pane, subs\r\nvar {loadProfileTrace, saveProfileTrace} = client.import({msg: ['loadProfileTrace', 'saveProfileTrace']})\r\n\r\nexport function activate (ink) {\r\n  pane = ink.PlotPane.fromId('Profile')\r\n  pane.getTitle = () => {return 'Profiler'}\r\n  subs = new CompositeDisposable()\r\n\r\n  subs.add(client.onDetached(() => clear()))\r\n  subs.add(atom.config.observe('julia-client.uiOptions.layouts.profiler.defaultLocation', (defaultLocation) => {\r\n    pane.setDefaultLocation(defaultLocation)\r\n  }))\r\n\r\n  client.handle({\r\n    profile(data) {\r\n      const save = (path) => saveProfileTrace(path, data)\r\n      const profile = new ink.Profiler.ProfileViewer({data, save, customClass: 'julia-profile'})\r\n      pane.ensureVisible({\r\n        split: atom.config.get('julia-client.uiOptions.layouts.profiler.split')\r\n      })\r\n      pane.show(new ink.Pannable(profile, {zoomstrategy: 'width', minScale: 0.5}))\r\n    }\r\n  })\r\n\r\n  subs.add(atom.commands.add('atom-workspace', 'julia-client:clear-profile', () => {\r\n    clear()\r\n    pane.close()\r\n  }))\r\n\r\n  subs.add(atom.commands.add('atom-workspace', 'julia-client:load-profile-trace', () => {\r\n    const path = remote.dialog.showOpenDialog({title: 'Load Profile Trace', properties: ['openFile']})\r\n    loadProfileTrace(path)\r\n  }))\r\n}\r\n\r\nfunction clear () {\r\n  pane.teardown()\r\n}\r\n\r\nexport function deactivate () {\r\n  subs.dispose()\r\n}\r\n","\r\n\r\nimport { CompositeDisposable, Disposable, TextEditor } from 'atom'\r\nimport { throttle } from 'underscore-plus'\r\nimport { client } from '../connection'\r\nimport modules from './modules'\r\n\r\nconst updateeditor = client.import('updateeditor')\r\nlet pane, subs, edSubs, outline\r\n\r\nexport function activate (ink) {\r\n  pane = ink.Outline.fromId('Julia-Outline')\r\n  subs = new CompositeDisposable()\r\n  edSubs = new CompositeDisposable()\r\n  outline = []\r\n\r\n  subs.add(\r\n    atom.config.observe('julia-client.uiOptions.layouts.outline.defaultLocation', defaultLocation => {\r\n      pane.setDefaultLocation(defaultLocation)\r\n    }),\r\n    atom.workspace.onDidStopChangingActivePaneItem(throttle(ed => watchEditor(ed), 300)),\r\n    atom.packages.onDidActivateInitialPackages(() => watchEditor(atom.workspace.getActivePaneItem())),\r\n    client.onDetached(() => {\r\n      outline = []\r\n      pane.setItems([])\r\n    }),\r\n    new Disposable(() => {\r\n      outline = []\r\n      pane.setItems([])\r\n      if (edSubs) edSubs.dispose()\r\n    })\r\n  )\r\n}\r\n\r\nfunction watchEditor (ed) {\r\n  if (!(ed && ed instanceof TextEditor)) return\r\n\r\n  if (edSubs) edSubs.dispose()\r\n  edSubs = new CompositeDisposable() // we can't repeat disposing on the same `CompositeDisposable` object\r\n\r\n  if (ed.getGrammar().id !== 'source.julia') {\r\n    pane.setItems([])\r\n  } else {\r\n    edSubs.add(\r\n      ed.onDidStopChanging(throttle(() => updateEditor(ed), 300)),\r\n      ed.onDidChangeCursorPosition(throttle(() => updateOutline(ed), 300))\r\n    )\r\n    updateEditor(ed, { updateSymbols: false })\r\n  }\r\n  edSubs.add(\r\n    ed.onDidDestroy(() => {\r\n      outline = []\r\n      pane.setItems([])\r\n    }),\r\n    ed.onDidChangeGrammar(grammar => {\r\n      watchEditor(ed)\r\n    })\r\n  )\r\n}\r\n\r\n// NOTE: update outline and symbols cache all in one go\r\nfunction updateEditor (ed, options = {\r\n  updateSymbols: true\r\n}) {\r\n  if (!client.isActive()) return new Promise(resolve => resolve([]))\r\n\r\n  const text = ed.getText()\r\n  const currentModule = modules.current()\r\n  const mod = currentModule ? currentModule : 'Main'\r\n  const path = ed.getPath() || 'untitled-' + ed.getBuffer().getId()\r\n\r\n  updateeditor({\r\n    text,\r\n    mod,\r\n    path,\r\n    // https://github.com/JunoLab/Juno.jl/issues/407\r\n    updateSymbols: options.updateSymbols\r\n  }).then(outlineItems => {\r\n    outline = handleOutline(ed, outlineItems)\r\n  }).catch(err => {\r\n    console.log(err);\r\n  })\r\n}\r\n\r\nfunction handleOutline (ed, outlineItems) {\r\n  const cursorLine = ed.getCursorBufferPosition().row + 1\r\n\r\n  outlineItems = outlineItems.map(outlineItem => {\r\n    outlineItem.isActive = outlineItem.start <= cursorLine && cursorLine <= outlineItem.stop\r\n    outlineItem.onClick = () => {\r\n      for (const pane of atom.workspace.getPanes()) {\r\n        if (pane.getItems().includes(ed)) {\r\n          pane.activate()\r\n          pane.setActiveItem(ed)\r\n          ed.setCursorBufferPosition([outlineItem.start - 1, 0])\r\n          ed.scrollToCursorPosition()\r\n          break\r\n        }\r\n      }\r\n    }\r\n    return outlineItem\r\n  })\r\n\r\n  pane.setItems(outlineItems)\r\n  return outlineItems\r\n}\r\n\r\nfunction updateOutline (ed) {\r\n  const cursorLine = ed.getCursorBufferPosition().row + 1\r\n  outline = outline.map(item => {\r\n    item.isActive = item.start <= cursorLine && cursorLine <= item.stop\r\n    return item\r\n  })\r\n  pane.setItems(outline)\r\n}\r\n\r\nexport function open () {\r\n  return pane.open({\r\n    split: atom.config.get('julia-client.uiOptions.layouts.outline.split')\r\n  })\r\n}\r\n\r\nexport function close () {\r\n  return pane.close()\r\n}\r\n\r\nexport function deactivate () {\r\n  if (subs) subs.dispose()\r\n}\r\n","\r\n\r\nimport { CompositeDisposable } from 'atom'\r\nimport { client } from '../connection'\r\n\r\nlet subs, lintPane\r\n\r\nexport function activate (ink) {\r\n  const linter = ink.Linter\r\n  lintPane = linter.lintPane\r\n\r\n  client.handle({\r\n    staticLint: (warnings) => {\r\n      lintPane.ensureVisible({\r\n        split: atom.config.get('julia-client.uiOptions.layouts.linter.split')\r\n      })\r\n      linter.setItems(warnings)\r\n    }\r\n  })\r\n\r\n  subs = new CompositeDisposable()\r\n\r\n  subs.add(atom.commands.add('.workspace', {\r\n    'julia-client:clear-linter': () => linter.clearItems()\r\n  }))\r\n  subs.add(atom.config.observe('julia-client.uiOptions.layouts.linter.defaultLocation', (defaultLocation) => {\r\n    lintPane.setDefaultLocation(defaultLocation)\r\n  }))\r\n}\r\n\r\nexport function open () {\r\n  return lintPane.open({\r\n    split: atom.config.get('julia-client.uiOptions.layouts.linter.split')\r\n  })\r\n}\r\n\r\nexport function close () {\r\n  return lintPane.close()\r\n}\r\n\r\nexport function deactivate () {\r\n  if (subs) {\r\n    subs.dispose()\r\n  }\r\n}\r\n","\r\n\r\nimport { client } from '../connection'\r\nimport { selector } from '../ui'\r\n\r\nvar { packages } = client.import({ rpc: ['packages'] })\r\n\r\nexport function openPackage (newWindow = true) {\r\n  const pkgs = packages()\r\n  pkgs.then(pkgs => {\r\n    const ps =  []\r\n    for (const pkg in pkgs) {\r\n      ps.push({ primary: pkg, secondary: pkgs[pkg] })\r\n    }\r\n    selector.show(ps, { infoMessage: 'Select package to open' }).then( pkg => {\r\n      if (pkg) {\r\n        if (newWindow) {\r\n          atom.open({ pathsToOpen: [pkgs[pkg.primary]]})\r\n        } else {\r\n          atom.project.addPath(pkgs[pkg.primary], {\r\n            mustExist: true,\r\n            exact: true\r\n          })\r\n        }\r\n      }\r\n    })\r\n  }).catch(() => {\r\n    atom.notifications.addError(\"Couldn't find your Julia packages.\")\r\n  })\r\n}\r\n","\r\n\r\nimport { client } from '../connection'\r\n\r\nconst { reportinfo } = client.import(['reportinfo'])\r\n\r\nexport default function debuginfo () {\r\n  let atomReport = `# Atom:\r\nVersion: ${atom.getVersion()}\r\nDev Mode: ${atom.inDevMode()}\r\nOfficial Release: ${atom.isReleasedVersion()}\r\n${JSON.stringify(process.versions, null, 2)}\r\n`\r\n  const atomPkgs = ['julia-client', 'ink', 'uber-juno', 'language-julia', 'language-weave',\r\n                    'indent-detective', 'latex-completions']\r\n  atomPkgs.forEach((pkg, ind) => {\r\n    atomReport += '# ' + atomPkgs[ind] + ':'\r\n    let activePkg = atom.packages.getActivePackage(pkg)\r\n    if (activePkg) {\r\n      atomReport +=\r\n      `\r\nVersion: ${activePkg.metadata.version}\r\nConfig:\r\n${JSON.stringify(activePkg.config.settings[pkg], null, 2)}\r\n`\r\n    } else {\r\n      atomReport += 'not installed\\n'\r\n    }\r\n    atomReport += '\\n\\n'\r\n  })\r\n\r\n  reportinfo().then(info => {\r\n    atomReport += \"# versioninfo():\\n\"\r\n    atomReport += info\r\n    showNotification(atomReport)\r\n  }).catch(err => {\r\n    atomReport += 'Could not connect to Julia.'\r\n    showNotification(atomReport)\r\n  })\r\n}\r\n\r\nfunction showNotification (atomReport) {\r\n  atom.notifications.addInfo('Juno Debug Info', {\r\n    description: 'Please provide the info above when you report an issue. ' +\r\n                 'Make sure to strip it of any kind of sensitive info you might ' +\r\n                 'not want to share.',\r\n    detail: atomReport,\r\n    dismissable: true,\r\n    buttons: [\r\n      {\r\n        text: 'Copy to Clipboard',\r\n        onDidClick: () => {\r\n          atom.clipboard.write(atomReport)\r\n        }\r\n      }\r\n    ]\r\n  })\r\n}\r\n","/** @babel */\r\n\r\nimport path from 'path'\r\nimport { client } from '../connection'\r\nimport { CompositeDisposable } from 'atom'\r\n\r\nconst format = client.import('format')\r\n\r\nexport function formatCode () {\r\n  const editor = atom.workspace.getActiveTextEditor()\r\n  if (!editor) return\r\n\r\n  const selections = editor.getSelections()\r\n  if (selections.length === 1 && !selections[0].getText()) {\r\n    formatEditor(editor)\r\n  } else {\r\n    selections.forEach((selection) => {\r\n      formatEditorWithSelection(editor, selection)\r\n    })\r\n  }\r\n}\r\n\r\nfunction formatEditor (editor) {\r\n  const range = editor.getBuffer().getRange()\r\n  return formatEditorTextInRange(editor, range, editor.getText())\r\n}\r\n\r\nfunction formatEditorWithSelection (editor, selection) {\r\n  const range = selection.getBufferRange()\r\n  return formatEditorTextInRange(editor, range, selection.getText())\r\n}\r\n\r\nfunction formatEditorTextInRange (editor, range, text) {\r\n  const dir = path.dirname(client.editorPath(editor))\r\n  const marker = markRange(editor, range)\r\n  // NOTE: Branch on `getSoftTabs` if supported by formatter.\r\n  const indent = editor.getTabLength()\r\n  const margin = editor.getPreferredLineLength()\r\n  format({\r\n    text,\r\n    dir,\r\n    indent,\r\n    margin,\r\n  }).then(({ error, formattedtext }) => {\r\n    if (error) {\r\n      atom.notifications.addError('Julia-Client: Format-Code', {\r\n        description: error,\r\n        dismissable: true\r\n      })\r\n    } else {\r\n      if (marker.isValid()) {\r\n        editor.setTextInBufferRange(marker.getBufferRange(), formattedtext)\r\n      } else {\r\n        atom.notifications.addError('Julia-Client: Format-Code', {\r\n          description: 'Cancelled the formatting task because the selected code has been manually modified.',\r\n          dismissable: true\r\n        })\r\n      }\r\n    }\r\n  }).catch(err => {\r\n    console.log(err)\r\n  }).finally(() => {\r\n    marker.destroy()\r\n  })\r\n}\r\n\r\nfunction markRange(editor, range) {\r\n  const marker = editor.markBufferRange(range, {\r\n    invalidate: 'inside'\r\n  })\r\n  editor.decorateMarker(marker, {\r\n    type: 'highlight',\r\n    class: 'ink-block'\r\n  })\r\n  return marker\r\n}\r\n\r\nlet subs\r\n\r\nexport function activate() {\r\n  subs = new CompositeDisposable()\r\n  const edWatch = new WeakSet()\r\n\r\n  subs.add(atom.workspace.observeTextEditors(ed => {\r\n    edWatch.add(ed)\r\n    // use onDidSave instead of onWillSave to guarantee our formatter is the last to run:\r\n    const edsub = ed.getBuffer().onDidSave(() => {\r\n      if (ed && ed.getGrammar && ed.getGrammar().id === 'source.julia') {\r\n        if (client.isActive() && edWatch.has(ed)) {\r\n          formatEditor(ed).then(() => {\r\n            edWatch.delete(ed)\r\n            ed.save().then(() => {\r\n              edWatch.add(ed)\r\n            }).catch(err => {\r\n              console.log(err)\r\n            })\r\n          }).catch(err => {\r\n            console.log(err)\r\n          })\r\n        }\r\n      }\r\n    })\r\n    subs.add(edsub)\r\n\r\n    subs.add(ed.onDidDestroy(() => {\r\n      edsub.dispose()\r\n    }))\r\n  }))\r\n}\r\n\r\nexport function deactivate() {\r\n  subs && subs.dispose && subs.dispose()\r\n}\r\n","{ CompositeDisposable, Disposable } = require 'atom'\r\n\r\nmodule.exports =\r\n  modules:     require './runtime/modules'\r\n  evaluation:  require './runtime/evaluation'\r\n  console:     require './runtime/console'\r\n  completions: require './runtime/completions'\r\n  workspace:   require './runtime/workspace'\r\n  plots:       require './runtime/plots'\r\n  frontend:    require './runtime/frontend'\r\n  debugger:    require './runtime/debugger'\r\n  profiler:    require './runtime/profiler'\r\n  outline:     require './runtime/outline'\r\n  linter:      require './runtime/linter'\r\n  packages:    require './runtime/packages'\r\n  debuginfo:   require './runtime/debuginfo'\r\n  formatter:   require './runtime/formatter'\r\n  goto:        require './runtime/goto'\r\n\r\n  activate: ->\r\n    @subs = new CompositeDisposable()\r\n\r\n    @modules.activate()\r\n    @completions.activate()\r\n    @frontend.activate()\r\n    @subs.add atom.config.observe 'julia-client.juliaOptions.formatOnSave', (val) =>\r\n      if val\r\n        @formatter.activate()\r\n      else\r\n        @formatter.deactivate()\r\n\r\n    @subs.add new Disposable(=>\r\n      mod.deactivate() for mod in [@modules, @completions, @frontend, @formatter])\r\n\r\n  deactivate: ->\r\n    @subs.dispose()\r\n\r\n  consumeInk: (ink) ->\r\n    @evaluation.ink = ink\r\n    @frontend.ink = ink\r\n    for mod in [@console, @debugger, @profiler, @linter, @goto, @outline]\r\n      mod.activate(ink)\r\n    for mod in [@workspace, @plots]\r\n      mod.ink = ink\r\n      mod.activate()\r\n    @subs.add new Disposable(=>\r\n      mod.deactivate() for mod in [@console, @debugger, @profiler, @linter, @goto, @outline])\r\n\r\n  provideAutoComplete: -> @completions\r\n\r\n  provideHyperclick: -> @goto.provideHyperclick()\r\n\r\n  consumeStatusBar: (bar) ->\r\n    @modules.consumeStatusBar bar\r\n\r\n  consumeDatatip: (datatipService) ->\r\n    datatipProvider = require './runtime/datatip'\r\n    # @NOTE: Check if the service is passed by Atom-IDE-UI's datatip service:\r\n    #          currently atom-ide-datatip can't render code snippets correctly.\r\n    if datatipService.constructor.name == 'DatatipManager'\r\n      datatipProvider.useAtomIDEUI = true\r\n    else\r\n      # @NOTE: Overwrite the weird default config settings of atom-ide-datatip\r\n      atom.config.set 'atom-ide-datatip',\r\n        showDataTipOnCursorMove: false\r\n        showDataTipOnMouseMove: true\r\n    datatipDisposable = datatipService.addProvider(datatipProvider)\r\n    @subs.add(datatipDisposable)\r\n    datatipDisposable\r\n\r\n  handleURI: require './runtime/urihandler'\r\n","/** @babel */\r\n\r\n/**\r\n * @FIXME?\r\n * Use `component` property instaed of `markedStrings` and reuse exisiting our full-featured\r\n * components in ../ui/views.coffee.\r\n * Code in https://github.com/TypeStrong/atom-typescript/blob/master/dist/main/atom-ide/datatipProvider.js\r\n * can be helpful.\r\n */\r\n\r\nimport { client } from '../connection'\r\nimport modules from './modules'\r\nimport { isValidScopeToInspect } from '../misc/scopes'\r\nimport {\r\n  getWordAndRange,\r\n  getWordRangeWithoutTrailingDots,\r\n  isValidWordToInspect\r\n} from '../misc/words'\r\nimport { getLocalContext } from '../misc/blocks'\r\n\r\nconst datatip = client.import('datatip')\r\n\r\nconst grammar = atom.grammars.grammarForScopeName('source.julia')\r\n\r\nclass DatatipProvider {\r\n  providerName = 'julia-client-datatip-provider'\r\n\r\n  priority = 100\r\n\r\n  grammarScopes = atom.config.get('julia-client.juliaSyntaxScopes')\r\n\r\n  useAtomIDEUI = false\r\n\r\n  async datatip(editor, bufferPosition) {\r\n    // If Julia is not running, do nothing\r\n    if (!client.isActive()) return\r\n\r\n    // If the scope at `bufferPosition` is not valid code scope, do nothing\r\n    if (!isValidScopeToInspect(editor, bufferPosition)) return\r\n\r\n    // get word without trailing dot accessors at the buffer position\r\n    let { range, word } = getWordAndRange(editor, {\r\n      bufferPosition\r\n    })\r\n    range = getWordRangeWithoutTrailingDots(word, range, bufferPosition)\r\n    word = editor.getTextInBufferRange(range)\r\n\r\n    // check the validity of code to be inspected\r\n    if (!(isValidWordToInspect(word))) return\r\n\r\n    const { main, sub } = await modules.getEditorModule(editor, bufferPosition)\r\n    const mod = main ? (sub ? `${main}.${sub}` : main) : 'Main'\r\n\r\n    const { column, row } = bufferPosition\r\n    const { context, startRow } = getLocalContext(editor, row)\r\n\r\n    try {\r\n      const result = await datatip({\r\n        word,\r\n        mod,\r\n        path: editor.getPath(),\r\n        column: column + 1,\r\n        row: row + 1,\r\n        startRow,\r\n        context\r\n      })\r\n      if (result.error) return\r\n      if (this.useAtomIDEUI) {\r\n        if (result.line) {\r\n          const value = editor.lineTextForBufferRow(result.line).trim()\r\n          return {\r\n            range,\r\n            markedStrings: [{\r\n              type: 'snippet',\r\n              value,\r\n              grammar\r\n            }]\r\n          }\r\n        } else if (result.strings) {\r\n          return {\r\n            range,\r\n            markedStrings: result.strings.map(string => {\r\n              return {\r\n                type: string.type,\r\n                value: string.value,\r\n                grammar: string.type === 'snippet' ? grammar : null\r\n              }\r\n            })\r\n          }\r\n        }\r\n      } else {\r\n        if (result.line) {\r\n          const value = editor.lineTextForBufferRow(result.line).trim()\r\n          return {\r\n            range,\r\n            markedStrings: [{\r\n              type: 'snippet',\r\n              value,\r\n              grammar\r\n            }]\r\n          }\r\n        } else if (result.strings) {\r\n          // @NOTE: atom-ide-datatip can't render multiple `snippet`s in `markedStrings` correctly\r\n          return {\r\n            range,\r\n            markedStrings: result.strings.map(string => {\r\n              return {\r\n                type: 'markdown',\r\n                value: string.type === 'snippet' ? `\\`\\`\\`julia\\n${string.value}\\n\\`\\`\\`` : string.value,\r\n                grammar: string.type === 'snippet' ? grammar : null\r\n              }\r\n            })\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      return\r\n    }\r\n  }\r\n}\r\n\r\nexport default new DatatipProvider()\r\n","\r\n\r\nimport { client } from '../connection'\r\nimport { docpane, views } from '../ui'\r\n\r\nconst { moduleinfo } = client.import({ rpc: ['moduleinfo'] })\r\nconst docs = client.import('docs')\r\n\r\nexport default function handleURI (parsedURI) {\r\n  const { query } = parsedURI\r\n\r\n  if (query.open) { // open a file\r\n    atom.workspace.open(query.file, {\r\n      initialLine: Number(query.line),\r\n      pending: atom.config.get('core.allowPendingPaneItems')\r\n    })\r\n  } else if (query.docs) { // show docs\r\n    const { word, mod } = query\r\n    docs({ word, mod }).then(result => {\r\n      if (result.error) return\r\n      const view = views.render(result)\r\n      docpane.processLinks(view.getElementsByTagName('a'))\r\n      docpane.ensureVisible()\r\n      docpane.showDocument(view, [])\r\n    }).catch(err => {\r\n      console.log(err)\r\n    })\r\n  } else if (query.moduleinfo){ // show module info\r\n    const { mod } = query\r\n    moduleinfo({ mod }).then(({ doc, items }) => {\r\n      items.map(item => {\r\n        docpane.processItem(item)\r\n      })\r\n      const view = views.render(doc)\r\n      docpane.ensureVisible()\r\n      docpane.showDocument(view, items)\r\n    }).catch(err => {\r\n      console.log(err)\r\n    })\r\n  }\r\n}\r\n","\r\n\r\nconst repl = () => {\r\n  return require('../runtime').console\r\n}\r\nconst workspace = () => {\r\n  return require('../runtime').workspace\r\n}\r\nconst documentation = () => {\r\n  return require('../ui').docpane\r\n}\r\nconst plotPane = () => {\r\n  return require('../runtime').plots\r\n}\r\nconst debuggerPane = () => {\r\n  return require('../runtime').debugger\r\n}\r\nconst linter = () => {\r\n  return require('../runtime').linter\r\n}\r\nconst outline = () => {\r\n  return require('../runtime').outline\r\n}\r\n\r\nfunction specifiedPanes () {\r\n  const panes = []\r\n  // @NOTE: Push panes in order of their 'importance': Refer to function `openPanesHelper` for why\r\n  if (atom.config.get('julia-client.uiOptions.layouts.defaultPanes.console')) panes.push(repl)\r\n  if (atom.config.get('julia-client.uiOptions.layouts.defaultPanes.workspace')) panes.push(workspace)\r\n  if (atom.config.get('julia-client.uiOptions.layouts.defaultPanes.documentation')) panes.push(documentation)\r\n  if (atom.config.get('julia-client.uiOptions.layouts.defaultPanes.plotPane')) panes.push(plotPane)\r\n  if (atom.config.get('julia-client.uiOptions.layouts.defaultPanes.debuggerPane')) panes.push(debuggerPane)\r\n  if (atom.config.get('julia-client.uiOptions.layouts.defaultPanes.linter')) panes.push(linter)\r\n  if (atom.config.get('julia-client.uiOptions.layouts.defaultPanes.outline')) panes.push(outline)\r\n\r\n  return panes\r\n}\r\n\r\nexport function closePromises () {\r\n  // Close only specified panes, i.e.: non-specified panes won't be closed/opened\r\n  const panes = specifiedPanes()\r\n\r\n  const promises = panes.map(pane => {\r\n    return pane().close()\r\n  })\r\n\r\n  return promises\r\n}\r\n\r\nfunction bundlePanes () {\r\n  const containers = []\r\n  containers.push(atom.workspace.getCenter())\r\n  containers.push(atom.workspace.getLeftDock())\r\n  containers.push(atom.workspace.getBottomDock())\r\n  containers.push(atom.workspace.getRightDock())\r\n\r\n  containers.forEach(container => {\r\n    const panes = container.getPanes()\r\n    const firstPane = panes[0]\r\n    const otherPanes = panes.slice(1)\r\n    otherPanes.forEach(pane => {\r\n      const items = pane.getItems()\r\n      items.forEach(item => {\r\n        pane.moveItemToPane(item, firstPane)\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\nfunction openPanes () {\r\n  const panes = specifiedPanes()\r\n\r\n  openPanesHelper(panes)\r\n}\r\n\r\nfunction openPanesHelper (panes) {\r\n  if (panes.length === 0) {\r\n    // If there is no more pane to be opened, activate the first item in each pane. This works since\r\n    // Juno-panes are opened in order of their importance as defined in `specifiedPanes` function\r\n    atom.workspace.getPanes().forEach(pane => {\r\n      pane.activateItemAtIndex(0)\r\n    })\r\n    // Activate `WorkspaceCenter` at last\r\n    atom.workspace.getCenter().activate()\r\n    return\r\n  }\r\n\r\n  const pane = panes.shift()\r\n  pane().open().catch((err) => {\r\n    // @FIXME: This is a temporal remedy for https://github.com/JunoLab/atom-julia-client/pull/561#issuecomment-500150318\r\n    console.error(err)\r\n    pane().open()\r\n  }).finally(() => {\r\n    // Re-focus the previously focused pane (i.e. the bundled pane by `bundlePanes`) after each opening\r\n    // This prevents opening multiple panes with the same splitting rule in a same location from\r\n    // ending up in a funny state\r\n    const container = atom.workspace.getActivePaneContainer()\r\n    container.activatePreviousPane()\r\n    openPanesHelper(panes)\r\n  })\r\n}\r\n\r\nexport function restoreDefaultLayout () {\r\n  // Close Juno-specific panes first to reset to default layout\r\n  Promise.all(closePromises()).then(() => {\r\n\r\n    // Simplify layouts in each container to prevent funny splitting\r\n    bundlePanes()\r\n\r\n    // Open Juno-specific panes again\r\n    openPanes()\r\n  })\r\n}\r\n\r\nexport function resetDefaultLayoutSettings () {\r\n  const onStartup = atom.config.get('julia-client.uiOptions.layouts.openDefaultPanesOnStartUp')\r\n  atom.config.unset('julia-client.uiOptions.layouts')\r\n  atom.config.set('julia-client.uiOptions.layouts.openDefaultPanesOnStartUp', onStartup)\r\n}\r\n\r\nexport function queryDefaultLayout () {\r\n  const message = atom.notifications.addInfo('Julia-Client: Open Juno-specific panes on startup ?', {\r\n    buttons: [\r\n      {\r\n        text: 'Yes',\r\n        onDidClick: () => {\r\n          restoreDefaultLayout()\r\n          message.dismiss()\r\n          atom.config.set('julia-client.firstBoot', false)\r\n          atom.config.set('julia-client.uiOptions.layouts.openDefaultPanesOnStartUp', true)\r\n        }\r\n      },\r\n      {\r\n        text: 'No',\r\n        onDidClick: () => {\r\n          message.dismiss()\r\n          atom.config.set('julia-client.firstBoot', false)\r\n          atom.config.set('julia-client.uiOptions.layouts.openDefaultPanesOnStartUp', false)\r\n        }\r\n      }\r\n    ],\r\n    description:\r\n      `You can specify the panes to be opened and their _default location_ and _splitting rule_ in\r\n       **\\`Packages -> Juno -> Settings -> Julia-Client -> UI Options -> Layout Options\\`**.\r\n       \\`Julia-Client: Restore-Default-Layout\\` command will restore the layout at later point in time.\r\n       Use \\`Julia-Client: Reset-Default-Layout-Settings\\` command to reset the layout settings if it gets messed up.`,\r\n    dismissable: true\r\n  })\r\n}\r\n","\r\n\r\nimport {TextEditor, CompositeDisposable} from 'atom'\r\n\r\nlet lastEditor\r\nlet lastTerminal\r\nlet subs\r\n\r\nclass FocusHistory {\r\n  constructor (size) {\r\n    this.size = size\r\n    this.history = []\r\n    this.openedItem = undefined\r\n  }\r\n\r\n  push (item) {\r\n    if (this.openedItem &&\r\n        this.openedItem.file &&\r\n        this.openedItem.line &&\r\n        item.file == this.openedItem.file &&\r\n        item.line == this.openedItem.line) {\r\n      return\r\n    }\r\n\r\n    this.history.push(item)\r\n    while (this.history.length > this.size) {\r\n      this.history.shift()\r\n    }\r\n    return\r\n  }\r\n\r\n  moveBack () {\r\n    const item = this.history.pop()\r\n    if (item && item.open) {\r\n      const activeItem = atom.workspace.getActivePaneItem()\r\n      if (activeItem instanceof TextEditor) {\r\n        const file = activeItem.getPath() || 'untitled-' + activeItem.buffer.getId()\r\n        const line = activeItem.getCursorBufferPosition().row\r\n        this.openedItem = {file, line}\r\n      }\r\n      item.open()\r\n    }\r\n  }\r\n}\r\n\r\nexport function activate (ink) {\r\n  subs = new CompositeDisposable()\r\n\r\n  subs.add(\r\n    atom.workspace.onDidStopChangingActivePaneItem(item => {\r\n      if (item instanceof TextEditor) {\r\n        lastEditor = item\r\n      } else if (item instanceof ink.InkTerminal) {\r\n        lastTerminal = item\r\n      }\r\n    }),\r\n    atom.packages.onDidActivateInitialPackages(() => {\r\n      lastEditor = atom.workspace.getActiveTextEditor()\r\n      atom.workspace.getPanes().forEach(pane => {\r\n        const item = pane.getActiveItem()\r\n        if (item instanceof ink.InkTerminal) {\r\n          lastTerminal = item\r\n        }\r\n      })\r\n    })\r\n  )\r\n\r\n  const history = new FocusHistory(30)\r\n  ink.Opener.onDidOpen(({newLocation, oldLocation}) => {\r\n    if (oldLocation) history.push(oldLocation)\r\n  })\r\n\r\n  subs.add(atom.commands.add('atom-workspace', {\r\n    'julia-client:focus-last-editor': () => focusLastEditor(),\r\n    'julia-client:focus-last-terminal': () => focusLastTerminal(),\r\n    'julia-client:return-from-goto': () => history.moveBack()\r\n  }))\r\n}\r\n\r\nexport function deactivate () {\r\n  lastEditor = null\r\n  lastTerminal = null\r\n  subs.dispose()\r\n  subs = null\r\n}\r\n\r\nfunction focusLastEditor () {\r\n  const pane = atom.workspace.paneForItem(lastEditor)\r\n  if (pane) {\r\n    pane.activate()\r\n    pane.activateItem(lastEditor)\r\n  }\r\n}\r\n\r\nfunction focusLastTerminal () {\r\n  if (lastTerminal && lastTerminal.open) lastTerminal.open()\r\n}\r\n","\r\n\r\nimport { getRange } from '../misc/cells'\r\nimport { CompositeDisposable } from 'atom'\r\nimport { getLine } from '../misc/blocks.js'\r\n\r\nlet subs\r\nlet edSubs\r\nlet marker\r\nlet borders = []\r\n\r\nexport function activate () {\r\n    subs = new CompositeDisposable()\r\n    edSubs = new CompositeDisposable()\r\n\r\n    subs.add(atom.workspace.observeActiveTextEditor(ed => {\r\n        if (ed && ed.getGrammar && ed.getGrammar().id === 'source.julia') {\r\n            if (edSubs && edSubs.dispose) {\r\n                edSubs.dispose()\r\n                edSubs = new CompositeDisposable()\r\n            }\r\n            borders = highlightCellBorders(ed, borders)\r\n\r\n            marker = highlightCurrentCell(ed, marker, borders)\r\n\r\n            edSubs.add(ed.onDidChangeCursorPosition(ev => {\r\n                marker = highlightCurrentCell(ed, marker, borders)\r\n            }))\r\n\r\n            edSubs.add(ed.onDidStopChanging(() => {\r\n                borders = highlightCellBorders(ed, borders)\r\n                marker = highlightCurrentCell(ed, marker, borders)\r\n            }))\r\n\r\n            edSubs.add(ed.onDidDestroy(() => {\r\n                marker && marker.destroy && marker.destroy()\r\n                borders.forEach(m => m.destroy())\r\n                edSubs.dispose()\r\n            }))\r\n\r\n            edSubs.add(ed.onDidChangeGrammar((grammar) => {\r\n                marker && marker.destroy && marker.destroy()\r\n                borders.forEach(m => m.destroy())\r\n\r\n                if (ed.getGrammar().id == 'source.julia') {\r\n                    borders = highlightCellBorders(ed, borders)\r\n                    marker = highlightCurrentCell(ed, marker, borders)\r\n                }\r\n            }))\r\n        }\r\n    }))\r\n}\r\n\r\nfunction highlightCurrentCell (ed, marker, borders) {\r\n    if (borders.length === 0) {\r\n        marker && marker.destroy && marker.destroy()\r\n        return null\r\n    }\r\n\r\n    const range = getRange(ed)\r\n\r\n    range[1].row +=1\r\n    range[1].column = 0\r\n\r\n    if (marker && marker.destroy) {\r\n        const mrange = marker.getBufferRange()\r\n        if (mrange.start.row == range[0].row &&\r\n            mrange.end.row == range[1].row) {\r\n            return marker\r\n        } else {\r\n            marker.destroy()\r\n        }\r\n    }\r\n\r\n    marker = ed.markBufferRange(range)\r\n    ed.decorateMarker(marker, {\r\n        type: 'line-number',\r\n        class: 'julia-current-cell'\r\n    })\r\n    ed.decorateMarker(marker, {\r\n        type: 'line',\r\n        class: 'julia-current-cell'\r\n    })\r\n\r\n    return marker\r\n}\r\n\r\nfunction highlightCellBorders (ed, borders) {\r\n    borders.forEach(m => m.destroy())\r\n\r\n    const regexString = '^(' + atom.config.get('julia-client.uiOptions.cellDelimiter').join('|') + ')'\r\n    const regex = new RegExp(regexString)\r\n\r\n    const buffer = ed.getBuffer()\r\n\r\n    borders = []\r\n\r\n    for (let i = 0; i <= buffer.getEndPosition().row; i++) {\r\n        const { line, scope } = getLine(ed, i)\r\n        if (regex.test(line) && scope.join('.').indexOf('comment.line') > -1) {\r\n            const m = ed.markBufferRange([[i, 0], [i, Infinity]])\r\n            ed.decorateMarker(m, {\r\n                type: 'line',\r\n                class: 'julia-cell-border'\r\n            })\r\n            borders.push(m)\r\n        }\r\n    }\r\n\r\n    return borders\r\n}\r\n\r\nfunction destroyMarkers () {\r\n    marker && marker.destroy && marker.destroy()\r\n    borders.forEach(m => m.destroy())\r\n    marker = null\r\n    borders = []\r\n}\r\n\r\nexport function deactivate () {\r\n    destroyMarkers()\r\n    subs && subs.dispose && subs.dispose()\r\n    edSubs && edSubs.dispose && edSubs.dispose()\r\n}\r\n","{CompositeDisposable, Disposable} = require 'atom'\r\n\r\nmodule.exports =\r\n  notifications: require './ui/notifications'\r\n  selector:      require './ui/selector'\r\n  views:         require './ui/views'\r\n  progress:      require './ui/progress'\r\n  layout:        require './ui/layout'\r\n  docpane:       require './ui/docs'\r\n  focusutils:    require './ui/focusutils'\r\n  cellhighlighter:    require './ui/cellhighlighter'\r\n\r\n  activate: (@client) ->\r\n    @subs = new CompositeDisposable\r\n\r\n    @notifications.activate()\r\n    @subs.add atom.config.observe 'julia-client.uiOptions.highlightCells', (val) =>\r\n      if val\r\n        @cellhighlighter.activate()\r\n      else\r\n        @cellhighlighter.deactivate()\r\n    @subs.add new Disposable =>\r\n      @cellhighlighter.deactivate()\r\n\r\n    @subs.add @client.onAttached =>\r\n      @notifications.show(\"Client Connected\")\r\n    @subs.add @client.onDetached =>\r\n      @ink?.Result.invalidateAll()\r\n\r\n  deactivate: ->\r\n    @subs.dispose()\r\n\r\n  consumeInk: (@ink) ->\r\n    @views.ink = @ink\r\n    @progress.ink = @ink\r\n    @selector.activate(@ink)\r\n    @docpane.activate(@ink)\r\n    @progress.activate()\r\n    @focusutils.activate(@ink)\r\n    @subs.add(new Disposable(=>\r\n      @docpane.deactivate()\r\n      @progress.deactivate()\r\n      @focusutils.deactivate()))\r\n","etch = require 'etch'\r\n\r\ncommands = require './package/commands'\r\nconfig = require './package/config'\r\nmenu = require './package/menu'\r\nsettings = require './package/settings'\r\ntoolbar = require './package/toolbar'\r\nsemver = require 'semver'\r\n\r\n# TODO: Update me when tagging a new relase:\r\nINK_VERSION_COMPAT  = \"^0.12.3\"\r\n\r\nINK_LINK            = '[`ink`](https://github.com/JunoLab/atom-ink)'\r\nLANGUAGE_JULIA_LINK = '[`language-julia`](https://github.com/JuliaEditorSupport/atom-language-julia)'\r\n\r\nmodule.exports = JuliaClient =\r\n  misc:       require './misc'\r\n  ui:         require './ui'\r\n  connection: require './connection'\r\n  runtime:    require './runtime'\r\n\r\n  activate: (state) ->\r\n    etch.setScheduler(atom.views)\r\n    process.env['TERM'] = 'xterm-256color'\r\n    commands.activate @\r\n    x.activate() for x in [menu, @connection, @runtime]\r\n    @ui.activate @connection.client\r\n\r\n    @requireDeps =>\r\n      settings.updateSettings()\r\n\r\n      if atom.config.get('julia-client.firstBoot')\r\n        @ui.layout.queryDefaultLayout()\r\n      else\r\n        if atom.config.get('julia-client.uiOptions.layouts.openDefaultPanesOnStartUp')\r\n          setTimeout (=> @ui.layout.restoreDefaultLayout()), 150\r\n\r\n  requireDeps: (fn) ->\r\n    isLoaded = atom.packages.isPackageLoaded(\"ink\") and atom.packages.isPackageLoaded(\"language-julia\")\r\n\r\n    if isLoaded\r\n      fn()\r\n    else\r\n      require('atom-package-deps').install('julia-client')\r\n        .then  => @enableDeps fn\r\n        .catch (err) ->\r\n          console.error err\r\n          atom.notifications.addError 'Installing Juno\\'s dependencies failed.',\r\n            description:\r\n              \"\"\"\r\n              Juno requires the packages #{INK_LINK} and #{LANGUAGE_JULIA_LINK} to run.\r\n              Please install them manually via `File -> Settings -> Packages`,\r\n              or open a terminal and run\r\n\r\n                  apm install ink\r\n                  apm install language-julia\r\n\r\n              and then restart Atom.\r\n              \"\"\"\r\n            dismissable: true\r\n\r\n  enableDeps: (fn) ->\r\n    isEnabled = atom.packages.isPackageLoaded(\"ink\") and atom.packages.isPackageLoaded(\"language-julia\")\r\n\r\n    if isEnabled\r\n      fn()\r\n    else\r\n      atom.packages.enablePackage('ink')\r\n      atom.packages.enablePackage('language-julia')\r\n\r\n      if atom.packages.isPackageLoaded(\"ink\") and atom.packages.isPackageLoaded(\"language-julia\")\r\n        atom.notifications.addSuccess \"Automatically enabled Juno's dependencies.\",\r\n          description:\r\n            \"\"\"\r\n            Juno requires the #{INK_LINK} and #{LANGUAGE_JULIA_LINK} packages.\r\n            We've automatically enabled them for you.\r\n            \"\"\"\r\n          dismissable: true\r\n\r\n        inkVersion = atom.packages.loadedPackages[\"ink\"].metadata.version\r\n        if not atom.devMode and not semver.satisfies(inkVersion, INK_VERSION_COMPAT)\r\n          atom.notifications.addWarning \"Potentially incompatible `ink` version detected.\",\r\n            description:\r\n              \"\"\"\r\n              Please make sure to upgrade #{INK_LINK} to a version compatible with `#{INK_VERSION_COMPAT}`.\r\n              The currently installed version is `#{inkVersion}`.\r\n\r\n              If you cannot install an appropriate version via via `File -> Settings -> Packages`,\r\n              open a terminal and run\r\n\r\n                  apm install ink@x.y.z\r\n\r\n              where `x.y.z` is satisfies `#{INK_VERSION_COMPAT}`.\r\n              \"\"\"\r\n            dismissable: true\r\n\r\n        fn()\r\n      else\r\n        atom.notifications.addError \"Failed to enable Juno's dependencies.\",\r\n          description:\r\n            \"\"\"\r\n            Juno requires the #{INK_LINK} and #{LANGUAGE_JULIA_LINK} packages.\r\n            Please install them manually via `File -> Settings -> Packages`,\r\n            or open a terminal and run\r\n\r\n                apm install ink\r\n                apm install language-julia\r\n\r\n            and then restart Atom.\r\n            \"\"\"\r\n          dismissable: true\r\n\r\n  config: config\r\n\r\n  deactivate: ->\r\n    x.deactivate() for x in [commands, menu, toolbar, @connection, @runtime, @ui]\r\n\r\n  consumeInk: (ink) ->\r\n    commands.ink = ink\r\n    x.consumeInk ink for x in [@connection, @runtime, @ui]\r\n\r\n  consumeStatusBar: (bar) -> @runtime.consumeStatusBar bar\r\n\r\n  consumeToolBar: (bar) -> toolbar.consumeToolBar bar\r\n\r\n  consumeGetServerConfig: (conf) -> @connection.consumeGetServerConfig(conf)\r\n\r\n  consumeGetServerName: (name) -> @connection.consumeGetServerName(name)\r\n\r\n  consumeDatatip: (datatipService) -> @runtime.consumeDatatip datatipService\r\n\r\n  provideClient: -> @connection.client\r\n\r\n  provideAutoComplete: -> @runtime.provideAutoComplete()\r\n\r\n  provideHyperclick: -> @runtime.provideHyperclick()\r\n\r\n  handleURI: (parsedURI) -> @runtime.handleURI parsedURI\r\n"],"names":["getEmbeddedScope","cursor","targetScope","getScopeDescriptor","scopes","scope","startsWith","getCurrentCellRange","ed","start","getBufferRow","end","scopeDescriptorForBufferPosition","indexOf","getLastBufferRow","Infinity","getCursorCellRanges","ranges","getCursors","range","push","moveNext","endRow","setBufferPosition","movePrev","startRow","get","length","processedRanges","text","getTextInBufferRange","selection","getSelections","line","lines","getText","split","N","getLineCount","code","i","juliaScopes","openers","reopeners","isStringScope","isString","isInterp","forLines","editor","startPoint","Point","endPoint","juliaGrammar","atom","grammars","grammarForScopeName","undefined","n_parens","n_brackets","tokenizeLines","forEach","lineTokens","token","value","splice","lastIndexOf","slice","some","isKeywordScope","reopen","includes","pop","forRange","Range","isCommentScope","isValidScopeToInspect","bufferPosition","getScopesArray","getLine","l","isBlank","allowDocstrings","s","test","isEnd","isStringEnd","join","isStart","lineInfo","match","walkForward","mark","getRange","row","walkBack","getSelection","sel","getBufferRange","column","getLocalContext","context","last","setBufferRange","insertText","to","map","isEmpty","getHeadBufferPosition","filter","trim","getRanges","workspace","getActiveTextEditor","mutateSelectedText","buffer","getBuffer","getFirstPosition","getEndPosition","regexString","config","regex","RegExp","getCursorBufferPosition","foundDelim","CompositeDisposable","cells","shell","getGrammar","scopeName","jlGet","weaveGet","nextRow","jlMoveNext","weaveMoveNext","weaveMovePrev","prevRow","jlMovePrev","require$$0","require$$1","require$$2","activate","juno","boot","cancelComplete","disrequireClient","len","ref","requireClient","a","f","connection","client","require","disrequire","e","commands","dispatch","currentTarget","this","subs","add","replace","julia-client:run-block","event","withInk","runtime","evaluation","eval","julia-client:run-and-move","move","julia-client:run-all","evalAll","julia-client:run-cell","cell","julia-client:run-cell-and-move","julia-client:select-block","misc","blocks","select","julia-client:next-cell","julia-client:prev-cell","julia-client:goto-symbol","goto","gotoSymbol","julia-client:show-documentation","toggleDocs","julia-client:send-to-stdin","done","j","len1","ref1","getModel","stdin","julia-debug:run-block","debugger","debugBlock","julia-debug:step-through-block","julia-debug:run-cell","julia-debug:step-through-cell","julia-debug:toggle-breakpoint","togglebp","julia-debug:toggle-conditional-breakpoint","julia-client:format-code","formatter","formatCode","julia-client:set-working-module","modules","chooseModule","ev","target","julia-debug:run-file","debugFile","julia-debug:step-through-file","julia-client:open-external-REPL","terminal","repl","julia-client:start-julia","julia-client:start-remote-julia-process","bootRemote","julia-client:kill-julia","kill","julia-client:interrupt-julia","interrupt","julia-client:disconnect-julia","disconnect","julia-client:connect-external-process","messages","connectExternal","julia-client:connect-terminal","connectedRepl","julia-client:open-plot-pane","plots","open","julia-client:open-outline-pane","outline","julia-client:open-workspace","julia-client:restore-default-layout","ui","layout","restoreDefaultLayout","julia-client:close-juno-panes","closePromises","julia-client:reset-default-layout-settings","resetDefaultLayoutSettings","julia-client:settings","julia-debug:clear-all-breakpoints","clearbps","julia-debug:step-to-next-line","nextline","julia-debug:step-to-selected-line","toselectedline","julia-debug:step-to-next-expression","stepexpr","julia-debug:step-into","stepin","julia-debug:stop-debugging","stop","julia-debug:step-out","finish","julia-debug:continue","continueForward","julia-debug:open-debugger-pane","julia:new-julia-file","then","gr","setGrammar","julia:open-julia-startup-file","paths","home","julia:open-juno-startup-file","julia:open-julia-home","openItem","juliaHome","julia:open-package-in-new-window","packages","openPackage","julia:open-package-as-project-folder","julia:get-help","openExternal","julia-client:debug-info","debuginfo","julia-client:work-in-current-folder","cdHere","julia-client:work-in-project-folder","cdProject","julia-client:work-in-home-folder","cdHome","julia-client:select-working-folder","cdSelect","julia-client:activate-environment-in-current-folder","activateProject","julia-client:activate-environment-in-parent-folder","activateParentProject","julia-client:activate-default-environment","activateDefaultProject","deactivate","dispose","err","notifications","addError","detail","dismissable","setTimeout","key","process","platform","p","path","env","jlpath","expandHome","atomProjectDir","dirs","project","getDirectories","ws","HOME","USERPROFILE","Promise","resolve","fs","stat","stats","isFile","dirname","packageDir","packageRoot","__dirname","JULIA_HOME","reject","existsSync","current_dir","cwd","exepath","execPath","chdir","realpath","realpathSync","which","child_process","exec","stdout","stderr","res","major","minor","patch","el","pathEl","closest","activeEl","querySelector","dataset","dirEl","readFileSync","wordRegex","getWordAndRange","options","getLastCursor","getBufferPosition","getWordRangeAtBufferPosition","word","findAllInRangeSync","find","fromObject","getWordRangeWithoutTrailingDots","startColumn","endColumn","isValidWordToInspect","isNaN","fn","rgb2hex","rgb","search","hex","x","parseInt","toString","Loading","bufferLines","lwaits","withLoading","selectors","styled","color","div","document","createElement","style","classList","child","innerText","appendChild","body","window","getComputedStyle","removeChild","debounce","module","require$$3","words","require$$4","weave","require$$5","colors","require$$6","require$$7","t","flush","data","shift","time","desc","Date","getTime","catch","hook","obj","method","souper","bind","once","args","call","mutex","wait","current","release","exclusive","lock","exports","result","formatTimePeriod","dt","h","m","parts","Math","floor","round","Emitter","[object Object]","ink","results","stream","loading","handlers","callbacks","queue","id","setStream","handle","cb","cancelCallback","type","Error","writeMsg","msg","callback","monitor","reset","constructor","Object","hasOwnProperty","errJson","rpc","mod","String","import","isWorking","onWorking","onDone","onceDone","message","stack","on","input","JSON","parse","unreadStream","removeListener","write","stringify","readStream","writeStream","net","ipc","plotpane","emitter","bootMode","base","isActive","ready","conn","beep","onAttached","observe","use","onDetached","onBoot","proc","remoteConfig","setBootMode","editorPath","ind","getPath","host","detach","basicHandlers","basicHandler","name1","handleBasic","onceAttached","attach","emit","onStdout","onStderr","onInfo","info","clientCall","name","clargs","as","deprecationWarnings","optimisationLevel","precompiled","startupArgs","concat","arg","connectedError","action","description","notConnectedError","withCurrent","tcp","server","port","listeners","next","connect","sock","listen","externalPort","createServer","details","address","escpath","escape","sh","term","defaultShell","defaultTerminal","connectCommand","script","cmd","dismiss","note","addInfo","openConsole","welcome","addSuccess","views","getView","jlNotFound","buttons","onDidClick","clipboard","isDismissed","get_","fullPath","projectDir","ty","pty","cols","rows","useConpty","handleFlowControl","failure","race","socket","_readable","_writable","onExit","getProcess","customEnv","confnt","confntInt","JULIA_NUM_THREADS","isFinite","HTTP_PROXY","HTTPS_PROXY","http_proxy","https_proxy","IPC","basic","hash","provider","cacheLength","procs","cache","removeFromCache","toCache","cached","fromCache","ps","init","allArgs","warmup","events","out","wasCached","getRemoteConf","getRemoteName","serversettings","withRemoteConfig","cachedSettings","maybe_add_agent","conf","reason","showRemoteError","sshsock","agent","agentForward","getRemoteExec","store","localStorage","getRemoteStore","notif","edview","ssh","forwardIn","sessionName","threadCount","resize","setWindow","signal","close","accept","createConnection","pipe","cycler","junorc","getconf","externalTerminal","consumeGetServerConfig","consumeGetServerName","JULIA_EDITOR","devMode","getVersion","check","spawnJulia","remote","dir","all","local","booting","consumeInk","_boot","Opener","allowRemoteFiles","juliaPath","default","order","juliaOptions","collapsed","properties","title","enum","radio","numberOfThreads","startupArguments","items","externalProcessPort","arguments","persistWorkingDir","workingDir","fuzzyCompletionMode","autoCompletionSuggestionPriority","noAutoParenthesis","formatOnSave","formattingOptions","mock","uiOptions","resultsDisplayMode","scrollToResult","docsDisplayMode","errorNotifications","errorInRepl","enableMenu","enableToolBar","usePlotPane","maxNumberPlots","openNewEditorWhenDebugging","cellDelimiter","highlightCells","layouts","console","defaultLocation","documentation","plotPane","debuggerPane","profiler","linter","defaultPanes","openDefaultPanesOnStartUp","consoleOptions","maximumConsoleSize","prompt","whitelistedKeybindingsREPL","whitelistedKeybindingsTerminal","cursorStyle","cursorBlink","terminalRendererType","linkModifier","remoteOptions","remoteJulia","tmux","tmuxName","agentAuth","forwardAgent","juliaSyntaxScopes","disableProxy","firstBoot","macOptionIsMeta","menu","label","submenu","template","command","validSchemes","invalidSchemes","selector","panel","searchForDeprecated","currentSchemes","entries","prototype","nextSchemes","validScheme","scheme","_key","_value","invalidScheme","addWarning","unset","consumeToolBar","bar","addButton","icon","iconset","tooltip","addSpacer","removeItems","enabled","show","force","elementForItem","item","selected","view","primary","matchHighlighter","highlightMatches","getFilterQuery","secondary","append","active","emptyMessage","errorMessage","infoMessage","allowCustom","update","query","loadingMessage","lastFocusedPane","getActivePane","focus","confirmed","props","didConfirmSelection","cancelSelection","didConfirmEmptySelection","getQuery","didCancelSelection","hide","filterKeyForItem","index","Number","Function","findIndex","selectIndex","_","Highlighter","getlazy","_ink","SelectList","element","addModalPanel","highlight","grammar","scopePrefix","block","html","k","lastLineTokens","scopeStack","tokens","updateScopeStack","escapeString","popScope","string","desiredScopes","excessScopes","ref2","isEqual","pushScope","dom","tag","attrs","contents","opts","v","Array","setAttribute","render","content","tags","span","innerHTML","children","tree","head","expand","treeView","lazy","registerLazy","onToggle","ansiToHTML","subtree","copy","core:copy","stopPropagation","link","file","tt","href","isUntitled","tooltips","onclick","pending","addEventListener","number","full","isfull","rounded","toPrecision","highlighted","latex","KaTeX","texify","r","Text","class","Disposable","allmodules","getmodule","ismodule","progs","status","progress","destroy","clear","pr","t0","now","showTime","prog","level","rightText","leftText","delete","pane","itemSubs","observeActivePaneItem","updateForItem","_current","lastEditorModule","setCurrent","onDidChange","inactive","main","sub","subInactive","follow","itemSelector","isValidItem","matches","autodetect","ised","getActivePaneItem","isTextEditor","juliaModule","unshift","setModule","updateForEditor","ismod","onDidChangeGrammar","setEditorModule","onDidChangeCursorPosition","setEditorModuleLazy","getEditorModule","sels","modulePromise","activateView","disposable","c","updateView","mainView","dividerView","subView","tile","statusBar","addRightTile","priority","display","remove","consumeStatusBar","gotosymbol","regenerateSymbols","regeneratesymbols","clearSymbols","clearsymbols","includeRegex","filePathRegex","subscriptions","filePathRange","filePathBody","dirPath","filePath","_this","rangeFilePath","getJumpFilePath","isClientAndInkReady","currentModule","getId","onlyGlobal","error","_this2","selectItemsAndGo","getSuggestion","textEditor","_this3","providerName","grammarScopes","searchDocs","searchdocs","moduleInfo","moduleinfo","regenerateDocs","regeneratedocs","processItem","processLinks","getElementsByTagName","onClickName","onClickModule","doc","showDocument","links","attributes","kwsearch","clearLazy","DocPane","fromId","exportedOnly","allPackages","nameOnly","score","scores","shoulderase","modEd","setText","regenerateCache","setDefaultLocation","ensureVisible","BrowserWindow","cd","dialog","docpane","evalall","evalshow","evaluate","searchDoc","create","setItems","lazyTrees","currentPane","onClick","Workspace","refresh","refreshModule","_currentContext","edpath","_showError","lights","highlights","errorLines","onDidDestroy","codeSelector","rtype","Result","isDestroyed","setContent","weaveScopes","getRootScopeDescriptor","getCode","getPathFromTreeView","readCode","InlineDoc","_cd","set","currentDir","getDirPathFromTreeView","getCenter","getPaths","showOpenDialog","getFocusedWindow","changeprompt","changemodule","fullpath","isWindows","uriRegex","newTerminal","InkTerminal","random","terminalOptions","attachCustomKeyEventHandler","handleKeybinding","onDidOpenLink","hasKeyboardModifier","registerTooltipHandler","showTooltip","hideTooltip","addLinkHandler","shellPty","scrollback","rendererType","updateTerminalSettings","settings","forEachPane","setOption","getPaneItems","metaKey","ctrlKey","handleLink","uri","urimatch","matchregex","registerLinkMatcher","willLinkActivate","tooltipCallback","location","leaveCallback","terminalRect","getBoundingClientRect","colWidth","width","rowHeight","height","leftPosition","left","topPosition","y","top","binds","keyCode","altKey","keymaps","keystrokeForKeyboardEvent","promptObserver","kbds","toLowerCase","setTitle","startRequested","updateWorkspace","clearconsole","cursorpos","cursorPosition","writeToTerminal","str","d","copySelection","persistentState","baselineCompletionAdapter","completionDetail","activatedManually","lineRange","prevCharPosition","charRange","char","baselineCompletions","sleep","is_fuzzy","completions","completion","toCompletion","makeIcon","iconHTML","descriptionMoreURL","_completion","completionWithDetail","suggestion","currentPoint","nextPoint","finishRange","webview","vm","plot","plotsize","plotSize","ploturl","url","jlpane","PlotPane","Pannable","maxSize","size","ratio","devicePixelRatio","isDataURI","object","dataURI","byteString","atob","unescape","mimeString","ia","Uint8Array","charCodeAt","Blob","dataURItoBlob","URL","createObjectURL","src","log","warn","sourceID","consoleLog","revokeObjectURL","devtools","openDevTools","HTMLPane","closeAndDestroy","stepper","breakpoints","evalwith","runInThisContext","windows","syntaxcolors","getColors","openFile","versionwarning","createWindow","w","wid","loadURL","setMenu","withWin","winActive","notify","win","debugfile","buttonSVGs","requireDebugging","originalEvent","activeError","abortKeyBinding","requireNotDebugging","debugmode","toggleJuliaBP","clearJulia","toggleUncaughtJulia","toggleExceptionJulia","toggleCompiled","getBreakpoints","addArgsJulia","toggleAllActiveJulia","toggleActiveJulia","addCondition","cond","setLevel","stepto","moreinfo","step","working","doneWorking","getFileBreakpoints","bp","isactive","condition","svg","Stepper","toggle","toggleUncaught","toggleException","addArgs","toggleActive","toggleAllActive","DebuggerPane","edForFile","shouldStep","blks","toggleConditionAtSourceLocation","toggleAtSourceLocation","loadProfileTrace","saveProfileTrace","teardown","edSubs","getTitle","profile","Profiler","ProfileViewer","save","customClass","zoomstrategy","minScale","updateeditor","watchEditor","TextEditor","onDidStopChanging","throttle","updateEditor","cursorLine","updateOutline","updateSymbols","outlineItems","handleOutline","outlineItem","getPanes","getItems","setActiveItem","setCursorBufferPosition","scrollToCursorPosition","lintPane","Outline","onDidStopChangingActivePaneItem","onDidActivateInitialPackages","Linter","staticLint","warnings","clearItems","newWindow","pkgs","pkg","pathsToOpen","addPath","mustExist","exact","reportinfo","showNotification","atomReport","format","formatEditor","formatEditorTextInRange","marker","markBufferRange","invalidate","decorateMarker","markRange","indent","getTabLength","margin","getPreferredLineLength","formattedtext","isValid","setTextInBufferRange","selections","formatEditorWithSelection","edWatch","WeakSet","observeTextEditors","edsub","onDidSave","has","datatip","useAtomIDEUI","lineTextForBufferRow","markedStrings","strings","docs","frontend","require$$8","require$$9","require$$10","require$$11","require$$12","inDevMode","isReleasedVersion","versions","atomPkgs","activePkg","getActivePackage","metadata","version","require$$14","require$$15","val","len2","provideAutoComplete","provideHyperclick","consumeDatatip","datatipService","datatipDisposable","datatipProvider","require$$16","showDataTipOnCursorMove","showDataTipOnMouseMove","addProvider","handleURI","parsedURI","initialLine","specifiedPanes","panes","openPanes","openPanesHelper","activateItemAtIndex","getActivePaneContainer","activatePreviousPane","containers","getLeftDock","getBottomDock","getRightDock","container","firstPane","moveItemToPane","lastEditor","lastTerminal","onStartup","FocusHistory","history","openedItem","activeItem","getActiveItem","onDidOpen","newLocation","oldLocation","paneForItem","activateItem","focusLastEditor","moveBack","borders","highlightCurrentCell","mrange","highlightCellBorders","observeActiveTextEditor","INK_LINK","LANGUAGE_JULIA_LINK","etch","semver","toolbar","focusutils","cellhighlighter","invalidateAll","state","setScheduler","requireDeps","updateSettings","queryDefaultLayout","isPackageLoaded","install","enableDeps","inkVersion","enablePackage","loadedPackages","satisfies","provideClient"],"mappings":"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"}